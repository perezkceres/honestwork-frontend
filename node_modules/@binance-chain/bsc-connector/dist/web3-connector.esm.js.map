{"version":3,"file":"web3-connector.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from \"@web3-react/types\";\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport warning from \"tiny-warning\";\n\nimport { SendReturnResult, SendReturn, Send, SendOld } from \"./types\";\n\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\n  return sendReturn.hasOwnProperty(\"result\") ? sendReturn.result : sendReturn;\n}\n\nexport class NoBscProviderError extends Error {\n  public constructor() {\n    super();\n    this.name = this.constructor.name;\n    this.message = \"No BSC provider was found on window.BinanceChain.\";\n  }\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super();\n    this.name = this.constructor.name;\n    this.message = \"The user rejected the request.\";\n  }\n}\n\nexport class BscConnector extends AbstractConnector {\n  constructor(kwargs: AbstractConnectorArguments) {\n    super(kwargs);\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this);\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  private handleChainChanged(chainId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId);\n    }\n    this.emitUpdate({ chainId, provider: window.BinanceChain });\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n    }\n    if (accounts.length === 0) {\n      this.emitDeactivate();\n    } else {\n      this.emitUpdate({ account: accounts[0] });\n    }\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason);\n    }\n    this.emitDeactivate();\n  }\n\n  private handleNetworkChanged(networkId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId);\n    }\n    this.emitUpdate({ chainId: networkId, provider: window.BinanceChain });\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError();\n    }\n\n    if (window.BinanceChain.on) {\n      window.BinanceChain.on(\"chainChanged\", this.handleChainChanged);\n      window.BinanceChain.on(\"accountsChanged\", this.handleAccountsChanged);\n      window.BinanceChain.on(\"close\", this.handleClose);\n      window.BinanceChain.on(\"networkChanged\", this.handleNetworkChanged);\n    }\n\n    if ((window.BinanceChain as any).isMetaMask) {\n      (window.BinanceChain as any).autoRefreshOnNetworkChange = false;\n    }\n\n    // try to activate + get account via eth_requestAccounts\n    let account;\n    try {\n      account = await (window.BinanceChain.send as Send)(\n        \"eth_requestAccounts\"\n      ).then((sendReturn) => parseSendReturn(sendReturn)[0]);\n    } catch (error) {\n      if ((error as any).code === 4001) {\n        throw new UserRejectedRequestError();\n      }\n      warning(\n        false,\n        \"eth_requestAccounts was unsuccessful, falling back to enable\"\n      );\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await window.BinanceChain.enable().then(\n        (sendReturn) => sendReturn && parseSendReturn(sendReturn)[0]\n      );\n    }\n\n    return { provider: window.BinanceChain, ...(account ? { account } : {}) };\n  }\n\n  public async getProvider(): Promise<any> {\n    return window.BinanceChain;\n  }\n\n  public async getChainId(): Promise<number | string> {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError();\n    }\n\n    let chainId;\n    try {\n      chainId = await (window.BinanceChain.send as Send)(\"eth_chainId\").then(\n        parseSendReturn\n      );\n    } catch {\n      warning(\n        false,\n        \"eth_chainId was unsuccessful, falling back to net_version\"\n      );\n    }\n\n    if (!chainId) {\n      try {\n        chainId = await (window.BinanceChain.send as Send)(\"net_version\").then(\n          parseSendReturn\n        );\n      } catch {\n        warning(\n          false,\n          \"net_version was unsuccessful, falling back to net version v2\"\n        );\n      }\n    }\n\n    if (!chainId) {\n      try {\n        chainId = parseSendReturn(\n          (window.BinanceChain.send as SendOld)({ method: \"net_version\" })\n        );\n      } catch {\n        warning(\n          false,\n          \"net_version v2 was unsuccessful, falling back to manual matches and static properties\"\n        );\n      }\n    }\n\n    if (!chainId) {\n      if ((window.BinanceChain as any).isDapper) {\n        chainId = parseSendReturn(\n          (window.BinanceChain as any).cachedResults.net_version\n        );\n      } else {\n        chainId =\n          (window.BinanceChain as any).chainId ||\n          (window.BinanceChain as any).netVersion ||\n          (window.BinanceChain as any).networkVersion ||\n          (window.BinanceChain as any)._chainId;\n      }\n    }\n\n    return chainId;\n  }\n\n  public async getAccount(): Promise<null | string> {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError();\n    }\n\n    let account;\n    try {\n      account = await (window.BinanceChain.send as Send)(\"eth_accounts\").then(\n        (sendReturn) => parseSendReturn(sendReturn)[0]\n      );\n    } catch {\n      warning(false, \"eth_accounts was unsuccessful, falling back to enable\");\n    }\n\n    if (!account) {\n      try {\n        account = await window.BinanceChain.enable().then(\n          (sendReturn) => parseSendReturn(sendReturn)[0]\n        );\n      } catch {\n        warning(\n          false,\n          \"enable was unsuccessful, falling back to eth_accounts v2\"\n        );\n      }\n    }\n\n    if (!account) {\n      account = parseSendReturn(\n        (window.BinanceChain.send as SendOld)({ method: \"eth_accounts\" })\n      )[0];\n    }\n\n    return account;\n  }\n\n  public deactivate() {\n    if (window.BinanceChain && window.BinanceChain.removeListener) {\n      window.BinanceChain.removeListener(\n        \"chainChanged\",\n        this.handleChainChanged\n      );\n      window.BinanceChain.removeListener(\n        \"accountsChanged\",\n        this.handleAccountsChanged\n      );\n      window.BinanceChain.removeListener(\"close\", this.handleClose);\n      window.BinanceChain.removeListener(\n        \"networkChanged\",\n        this.handleNetworkChanged\n      );\n    }\n  }\n\n  public async isAuthorized(): Promise<boolean> {\n    if (!window.BinanceChain) {\n      return false;\n    }\n\n    try {\n      return await (window.BinanceChain.send as Send)(\"eth_accounts\").then(\n        (sendReturn) => {\n          if (parseSendReturn(sendReturn).length > 0) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      );\n    } catch {\n      return false;\n    }\n  }\n}\n"],"names":["parseSendReturn","sendReturn","hasOwnProperty","result","__extends","_super","_this","name","constructor","message","Error","kwargs","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","BscConnector","chainId","console","log","emitUpdate","provider","window","BinanceChain","accounts","length","emitDeactivate","account","code","reason","networkId","NoBscProviderError","on","isMetaMask","autoRefreshOnNetworkChange","send","then","_a","error_1","UserRejectedRequestError","warning","enable","_c","method","isDapper","cachedResults","net_version","netVersion","networkVersion","_chainId","removeListener","_b","AbstractConnector"],"mappings":"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"}