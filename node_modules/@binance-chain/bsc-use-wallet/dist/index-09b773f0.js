import{h as e}from"./index-a6bbe615.js";import{a as t}from"./subscriptionManager-ab7f09ed.js";var a={v:5e3,d:"Gas limit of the Genesis block."},i={v:17179869184,d:"Difficulty of the Genesis block."},s={v:"0x0000000000000042",d:"the geneis nonce"},o={v:"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa",d:"extra data "},r={v:"0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",d:"genesis hash"},n={v:"0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544",d:"the genesis state root"},d={v:5e3,d:"Minimum the gas limit may ever be."},f={v:1024,d:"The bound divisor of the gas limit, used in update calculations."},c={v:131072,d:"The minimum that the difficulty may ever be."},h={v:2048,d:"The bound divisor of the difficulty, used in the update calculations."},l={v:13,d:"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not."},u={v:32,d:"Maximum size extra data may be after Genesis."},m={v:3e4,d:"Duration between proof-of-work epochs."},p={v:1024,d:"Maximum size of VM stack allowed."},v={v:1024,d:"Maximum depth of call/create stack."},g={v:[0,2,3,5,8,10,20],d:"Once per operation, for a selection of them."},b={v:10,d:"Once per EXP instuction."},G={v:10,d:"Times ceil(log256(exponent)) for the EXP instruction."},y={v:30,d:"Once per SHA3 operation."},w={v:6,d:"Once per word of the SHA3 operation's data."},x={v:50,d:"Once per SLOAD operation."},L={v:2e4,d:"Once per SSTORE operation if the zeroness changes from zero."},D={v:5e3,d:"Once per SSTORE operation if the zeroness does not change from zero."},S={v:15e3,d:"Once per SSTORE operation if the zeroness changes to zero."},O={v:1,d:"Refunded gas, once per SSTORE operation if the zeroness changes to zero."},T={v:375,d:"Per LOG* operation."},P={v:8,d:"Per byte in a LOG* operation's data."},R={v:375,d:"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas."},_={v:32e3,d:"Once per CREATE operation & contract-creation transaction."},k={v:40,d:"Once per CALL operation & message call transaction."},B={v:2300,d:"Free gas given at beginning of call."},E={v:9e3,d:"Paid for CALL when the value transfor is non-zero."},N={v:25e3,d:"Paid for CALL when the destination address didn't exist prior."},C={v:24e3,d:"Refunded following a suicide operation."},z={v:3,d:"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL."},A={v:512,d:"Divisor for the quadratic particle of the memory cost equation."},I={v:200,d:""},Z={v:21e3,d:"Per transaction. NOTE: Not payable on data of calls between transactions."},F={v:32e3,d:"the cost of creating a contract via tx"},M={v:4,d:"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions."},j={v:68,d:"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions."},W={v:3,d:"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added."},K={v:3e3,d:""},q={v:60,d:""},H={v:12,d:""},V={v:600,d:""},U={v:120,d:""},X={v:15,d:""},Y={v:3,d:""},J={v:"5000000000000000000",d:"the amount a miner get rewarded for mining a block"},Q={v:"625000000000000000",d:"The amount of wei a miner of an uncle block gets for being inculded in the blockchain"},$={v:"156250000000000000",d:"the amount a miner gets for inculding a uncle"},ee={v:115e4,d:"the block that the Homestead fork started at"},te={v:2463e3,d:"the block that the Homestead Reprice (EIP150) fork started at"},ae={v:1e5,d:"Exponential difficulty timebomb period"},ie={v:2},se={genesisGasLimit:a,genesisDifficulty:i,genesisNonce:s,genesisExtraData:o,genesisHash:r,genesisStateRoot:n,minGasLimit:d,gasLimitBoundDivisor:f,minimumDifficulty:c,difficultyBoundDivisor:h,durationLimit:l,maximumExtraDataSize:u,epochDuration:m,stackLimit:p,callCreateDepth:v,tierStepGas:g,expGas:b,expByteGas:G,sha3Gas:y,sha3WordGas:w,sloadGas:x,sstoreSetGas:L,sstoreResetGas:D,sstoreRefundGas:S,jumpdestGas:O,logGas:T,logDataGas:P,logTopicGas:R,createGas:_,callGas:k,callStipend:B,callValueTransferGas:E,callNewAccountGas:N,suicideRefundGas:C,memoryGas:z,quadCoeffDiv:A,createDataGas:I,txGas:Z,txCreation:F,txDataZeroGas:M,txDataNonZeroGas:j,copyGas:W,ecrecoverGas:K,sha256Gas:q,sha256WordGas:H,ripemd160Gas:V,ripemd160WordGas:U,identityGas:X,identityWordGas:Y,minerReward:J,ommerReward:Q,niblingReward:$,homeSteadForkNumber:ee,homesteadRepriceForkNumber:te,timebombPeriod:ae,freeBlockPeriod:ie},oe=e(Object.freeze({__proto__:null,genesisGasLimit:a,genesisDifficulty:i,genesisNonce:s,genesisExtraData:o,genesisHash:r,genesisStateRoot:n,minGasLimit:d,gasLimitBoundDivisor:f,minimumDifficulty:c,difficultyBoundDivisor:h,durationLimit:l,maximumExtraDataSize:u,epochDuration:m,stackLimit:p,callCreateDepth:v,tierStepGas:g,expGas:b,expByteGas:G,sha3Gas:y,sha3WordGas:w,sloadGas:x,sstoreSetGas:L,sstoreResetGas:D,sstoreRefundGas:S,jumpdestGas:O,logGas:T,logDataGas:P,logTopicGas:R,createGas:_,callGas:k,callStipend:B,callValueTransferGas:E,callNewAccountGas:N,suicideRefundGas:C,memoryGas:z,quadCoeffDiv:A,createDataGas:I,txGas:Z,txCreation:F,txDataZeroGas:M,txDataNonZeroGas:j,copyGas:W,ecrecoverGas:K,sha256Gas:q,sha256WordGas:H,ripemd160Gas:V,ripemd160WordGas:U,identityGas:X,identityWordGas:Y,minerReward:J,ommerReward:Q,niblingReward:$,homeSteadForkNumber:ee,homesteadRepriceForkNumber:te,timebombPeriod:ae,freeBlockPeriod:ie,default:se}));var re=t.BN,ne=new re("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0",16),de=function(){function e(a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),a=a||{};var i=[{name:"nonce",length:32,allowLess:!0,default:new Buffer([])},{name:"gasPrice",length:32,allowLess:!0,default:new Buffer([])},{name:"gasLimit",alias:"gas",length:32,allowLess:!0,default:new Buffer([])},{name:"to",allowZero:!0,length:20,default:new Buffer([])},{name:"value",length:32,allowLess:!0,default:new Buffer([])},{name:"data",alias:"input",allowZero:!0,default:new Buffer([])},{name:"v",allowZero:!0,default:new Buffer([28])},{name:"r",length:32,allowZero:!0,allowLess:!0,default:new Buffer([])},{name:"s",length:32,allowZero:!0,allowLess:!0,default:new Buffer([])}];t.defineProperties(this,i,a),Object.defineProperty(this,"from",{enumerable:!0,configurable:!0,get:this.getSenderAddress.bind(this)});var s=t.bufferToInt(this.v),o=Math.floor((s-35)/2);o<0&&(o=0),this._chainId=o||a.chainId||0,this._homestead=!0}return e.prototype.toCreationAddress=function(){return""===this.to.toString("hex")},e.prototype.hash=function(e){void 0===e&&(e=!0);var a=void 0;if(e)a=this.raw;else if(this._chainId>0){var i=this.raw.slice();this.v=this._chainId,this.r=0,this.s=0,a=this.raw,this.raw=i}else a=this.raw.slice(0,6);return t.rlphash(a)},e.prototype.getChainId=function(){return this._chainId},e.prototype.getSenderAddress=function(){if(this._from)return this._from;var e=this.getSenderPublicKey();return this._from=t.publicToAddress(e),this._from},e.prototype.getSenderPublicKey=function(){if(!(this._senderPubKey&&this._senderPubKey.length||this.verifySignature()))throw new Error("Invalid Signature");return this._senderPubKey},e.prototype.verifySignature=function(){var e=this.hash(!1);if(this._homestead&&1===new re(this.s).cmp(ne))return!1;try{var a=t.bufferToInt(this.v);this._chainId>0&&(a-=2*this._chainId+8),this._senderPubKey=t.ecrecover(e,a,this.r,this.s)}catch(e){return!1}return!!this._senderPubKey},e.prototype.sign=function(e){var a=this.hash(!1),i=t.ecsign(a,e);this._chainId>0&&(i.v+=2*this._chainId+8),Object.assign(this,i)},e.prototype.getDataFee=function(){for(var e=this.raw[5],t=new re(0),a=0;a<e.length;a++)0===e[a]?t.iaddn(oe.txDataZeroGas.v):t.iaddn(oe.txDataNonZeroGas.v);return t},e.prototype.getBaseFee=function(){var e=this.getDataFee().iaddn(oe.txGas.v);return this._homestead&&this.toCreationAddress()&&e.iaddn(oe.txCreation.v),e},e.prototype.getUpfrontCost=function(){return new re(this.gasLimit).imul(new re(this.gasPrice)).iadd(new re(this.value))},e.prototype.validate=function(e){var t=[];return this.verifySignature()||t.push("Invalid Signature"),this.getBaseFee().cmp(new re(this.gasLimit))>0&&t.push(["gas limit is too low. Need at least "+this.getBaseFee()]),void 0===e||!1===e?0===t.length:t.join(" ")},e}();export{de as T};
//# sourceMappingURL=index-09b773f0.js.map
