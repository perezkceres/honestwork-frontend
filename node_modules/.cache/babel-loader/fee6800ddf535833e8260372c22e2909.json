{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/Home/components/FarmStakingCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Heading, Card, CardBody, Button } from '@pancakeswap-libs/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport useI18n from 'hooks/useI18n';\nimport BigNumber from 'bignumber.js/bignumber';\nimport { useAllHarvest } from 'hooks/useHarvest';\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance';\nimport UnlockButton from 'components/UnlockButton';\nimport CakeHarvestBalance from './CakeHarvestBalance';\nimport CakeWalletBalance from './CakeWalletBalance';\nimport { usePriceCakeBusd } from '../../../state/hooks';\nimport { getCakeAddress } from '../../../utils/addressHelpers';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport { getBalanceNumber } from '../../../utils/formatBalance';\nconst StyledFarmStakingCard = styled(Card)`\n  background-image: url('/images/egg/2a.png');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`;\n_c = StyledFarmStakingCard;\nconst Block = styled.div`\n  margin-bottom: 16px;\n`;\n_c2 = Block;\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`;\n_c3 = CardImage;\nconst Label = styled.div`\n  color: ${({\n  theme\n}) => theme.colors.textSubtle};\n  font-size: 14px;\n`;\n_c4 = Label;\nconst Actions = styled.div`\n  margin-top: 24px;\n`;\n_c5 = Actions;\n\nconst FarmedStakingCard = () => {\n  _s();\n\n  const [pendingTx, setPendingTx] = useState(false);\n  const {\n    account\n  } = useWallet();\n  const TranslateString = useI18n();\n  const farmsWithBalance = useFarmsWithBalance();\n  const cakeBalance = getBalanceNumber(useTokenBalance(getCakeAddress()));\n  const eggPrice = usePriceCakeBusd().toNumber();\n  const earningsSum = farmsWithBalance.reduce((accum, farm) => {\n    return accum + new BigNumber(farm.balance).div(new BigNumber(10).pow(18)).toNumber();\n  }, 0);\n  const balancesWithValue = farmsWithBalance.filter(balanceType => balanceType.balance.toNumber() > 0);\n  const {\n    onReward\n  } = useAllHarvest(balancesWithValue.map(farmWithBalance => farmWithBalance.pid));\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true);\n\n    try {\n      await onReward();\n    } catch (error) {// TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false);\n    }\n  }, [onReward]);\n  return /*#__PURE__*/_jsxDEV(StyledFarmStakingCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        mb: \"24px\",\n        children: TranslateString(542, 'Farms & Staking')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardImage, {\n        src: \"/images/egg/2.png\",\n        alt: \"cake logo\",\n        width: 64,\n        height: 64\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: TranslateString(544, 'GAJ to Harvest')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CakeHarvestBalance, {\n          earningsSum: earningsSum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: [\"~$\", (eggPrice * earningsSum).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: TranslateString(546, 'GAJ in Wallet')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CakeWalletBalance, {\n          cakeBalance: cakeBalance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: [\"~$\", (eggPrice * cakeBalance).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Actions, {\n        children: account ? /*#__PURE__*/_jsxDEV(Button, {\n          id: \"harvest-all\",\n          disabled: balancesWithValue.length <= 0 || pendingTx,\n          onClick: harvestAllFarms,\n          fullWidth: true,\n          children: pendingTx ? TranslateString(548, 'Collecting EGG') : TranslateString(999, `Harvest all (${balancesWithValue.length})`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(UnlockButton, {\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmedStakingCard, \"hTVGM6ihOI02Bck8kTZ1yGHlByk=\", false, function () {\n  return [useWallet, useI18n, useFarmsWithBalance, useTokenBalance, usePriceCakeBusd, useAllHarvest];\n});\n\n_c6 = FarmedStakingCard;\nexport default FarmedStakingCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledFarmStakingCard\");\n$RefreshReg$(_c2, \"Block\");\n$RefreshReg$(_c3, \"CardImage\");\n$RefreshReg$(_c4, \"Label\");\n$RefreshReg$(_c5, \"Actions\");\n$RefreshReg$(_c6, \"FarmedStakingCard\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/Home/components/FarmStakingCard.tsx"],"names":["React","useState","useCallback","styled","Heading","Card","CardBody","Button","useWallet","useI18n","BigNumber","useAllHarvest","useFarmsWithBalance","UnlockButton","CakeHarvestBalance","CakeWalletBalance","usePriceCakeBusd","getCakeAddress","useTokenBalance","getBalanceNumber","StyledFarmStakingCard","Block","div","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","account","TranslateString","farmsWithBalance","cakeBalance","eggPrice","toNumber","earningsSum","reduce","accum","farm","balance","pow","balancesWithValue","filter","balanceType","onReward","map","farmWithBalance","pid","harvestAllFarms","error","toFixed","length"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Button } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useI18n from 'hooks/useI18n'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { useAllHarvest } from 'hooks/useHarvest'\r\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport CakeHarvestBalance from './CakeHarvestBalance'\r\nimport CakeWalletBalance from './CakeWalletBalance'\r\nimport useAllEarnings from '../../../hooks/useAllEarnings'\r\nimport { usePriceCakeBusd } from '../../../state/hooks'\r\nimport { getCakeAddress } from '../../../utils/addressHelpers'\r\nimport useTokenBalance from '../../../hooks/useTokenBalance'\r\nimport { getBalanceNumber } from '../../../utils/formatBalance'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-image: url('/images/egg/2a.png');\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  min-height: 376px;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst CardImage = styled.img`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const farmsWithBalance = useFarmsWithBalance()\r\n  const cakeBalance = getBalanceNumber(useTokenBalance(getCakeAddress()))\r\n  const eggPrice = usePriceCakeBusd().toNumber()\r\n  const earningsSum = farmsWithBalance.reduce((accum, farm) => {\r\n    return accum + new BigNumber(farm.balance).div(new BigNumber(10).pow(18)).toNumber()\r\n  }, 0)\r\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\r\n\r\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      await onReward()\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }, [onReward])\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(542, 'Farms & Staking')}\r\n        </Heading>\r\n        <CardImage src=\"/images/egg/2.png\" alt=\"cake logo\" width={64} height={64} />\r\n        <Block>\r\n          <Label>{TranslateString(544, 'GAJ to Harvest')}</Label>\r\n          <CakeHarvestBalance earningsSum={earningsSum}/>\r\n          <Label>~${(eggPrice * earningsSum).toFixed(2)}</Label>\r\n        </Block>\r\n        <Block>\r\n          <Label>{TranslateString(546, 'GAJ in Wallet')}</Label>\r\n          <CakeWalletBalance cakeBalance={cakeBalance} />\r\n          <Label>~${(eggPrice * cakeBalance).toFixed(2)}</Label>\r\n        </Block>\r\n        <Actions>\r\n          {account ? (\r\n            <Button\r\n              id=\"harvest-all\"\r\n              disabled={balancesWithValue.length <= 0 || pendingTx}\r\n              onClick={harvestAllFarms}\r\n              fullWidth\r\n            >\r\n              {pendingTx\r\n                ? TranslateString(548, 'Collecting EGG')\r\n                : TranslateString(999, `Harvest all (${balancesWithValue.length})`)}\r\n            </Button>\r\n          ) : (\r\n            <UnlockButton fullWidth />\r\n          )}\r\n        </Actions>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n"]},"metadata":{},"sourceType":"module"}