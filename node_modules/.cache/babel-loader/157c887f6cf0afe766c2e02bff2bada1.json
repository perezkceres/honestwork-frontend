{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"../core\");\n\nvar Users = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(Users, _core_1$CrowdinApi);\n\n  var _super = _createSuper(Users);\n\n  function Users() {\n    _classCallCheck(this, Users);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Users, [{\n    key: \"addProjectMember\",\n\n    /**\n     *\n     * @param projectId project identifier\n     * @param request request body\n     */\n    value: function addProjectMember(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/members\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     *\n     * @param projectId project identifier\n     * @param memberId member identifier\n     */\n\n  }, {\n    key: \"getProjectMemberPermissions\",\n    value: function getProjectMemberPermissions(projectId, memberId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/members/\").concat(memberId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     *\n     * @param projectId project identifier\n     * @param memberId member identifier\n     */\n\n  }, {\n    key: \"replaceProjectMemberPermissions\",\n    value: function replaceProjectMemberPermissions(projectId, memberId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/members/\").concat(memberId);\n      return this.put(url, request, this.defaultConfig());\n    }\n    /**\n     *\n     * @param projectId project identifier\n     * @param memberId member identifier\n     */\n\n  }, {\n    key: \"deleteMemberFromProject\",\n    value: function deleteMemberFromProject(projectId, memberId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/members/\").concat(memberId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param status filter users by status\n     * @param search search users by firstName, lastName, username, email\n     * @param twoFactor filter users by two-factor authentication status\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n\n  }, {\n    key: \"listUsers\",\n    value: function listUsers(status, search, twoFactor, limit, offset) {\n      var url = \"\".concat(this.url, \"/users\");\n      url = this.addQueryParam(url, 'status', status);\n      url = this.addQueryParam(url, 'search', search);\n      url = this.addQueryParam(url, 'twoFactor', twoFactor);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param userId user identifier\n     */\n\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo(userId) {\n      var url = \"\".concat(this.url, \"/users/\").concat(userId);\n      return this.get(url, this.defaultConfig());\n    }\n  }, {\n    key: \"getAuthenticatedUser\",\n    value: function getAuthenticatedUser() {\n      var url = \"\".concat(this.url, \"/user\");\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     *\n     * @param projectId project identifier\n     * @param search search users by firstName, lastName or username\n     * @param role defines role type\n     * @param languageId language identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n\n  }, {\n    key: \"listProjectMembers\",\n    value: function listProjectMembers(projectId, search, role, languageId, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/members\");\n      url = this.addQueryParam(url, 'search', search);\n      url = this.addQueryParam(url, 'role', role);\n      url = this.addQueryParam(url, 'languageId', languageId);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     *\n     * @param projectId project identifier\n     * @param memberId member identifier\n     */\n\n  }, {\n    key: \"getMemberInfo\",\n    value: function getMemberInfo(projectId, memberId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/members/\").concat(memberId);\n      return this.get(url, this.defaultConfig());\n    }\n  }]);\n\n  return Users;\n}(core_1.CrowdinApi);\n\nexports.Users = Users;\nvar UsersModel;\n\n(function (UsersModel) {\n  var Status;\n\n  (function (Status) {\n    Status[\"ACTIVE\"] = \"active\";\n    Status[\"PENDING\"] = \"pending\";\n    Status[\"BLOCKED\"] = \"blocked\";\n  })(Status = UsersModel.Status || (UsersModel.Status = {}));\n\n  var TwoFactor;\n\n  (function (TwoFactor) {\n    TwoFactor[\"ENABLED\"] = \"enabled\";\n    TwoFactor[\"DISABLED\"] = \"disabled\";\n  })(TwoFactor = UsersModel.TwoFactor || (UsersModel.TwoFactor = {}));\n\n  var Role;\n\n  (function (Role) {\n    Role[\"ALL\"] = \"all\";\n    Role[\"MANAGER\"] = \"manager\";\n    Role[\"PROOFREADER\"] = \"proofreader\";\n    Role[\"TRANSLATOR\"] = \"translator\";\n    Role[\"BLOCKED\"] = \"blocked\";\n  })(Role = UsersModel.Role || (UsersModel.Role = {}));\n})(UsersModel = exports.UsersModel || (exports.UsersModel = {}));","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/@crowdin/crowdin-api-client/out/users/index.js"],"names":["Object","defineProperty","exports","value","core_1","require","Users","projectId","request","url","post","defaultConfig","memberId","get","put","delete","status","search","twoFactor","limit","offset","addQueryParam","getList","userId","role","languageId","CrowdinApi","UsersModel","Status","TwoFactor","Role"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;IACMC,K;;;;;;;;;;;;;;AACF;AACJ;AACA;AACA;AACA;qCACqBC,S,EAAWC,O,EAAS;AACjC,UAAMC,GAAG,aAAM,KAAKA,GAAX,uBAA2BF,SAA3B,aAAT;AACA,aAAO,KAAKG,IAAL,CAAUD,GAAV,EAAeD,OAAf,EAAwB,KAAKG,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;gDACgCJ,S,EAAWK,Q,EAAU;AAC7C,UAAMH,GAAG,aAAM,KAAKA,GAAX,uBAA2BF,SAA3B,sBAAgDK,QAAhD,CAAT;AACA,aAAO,KAAKC,GAAL,CAASJ,GAAT,EAAc,KAAKE,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;oDACoCJ,S,EAAWK,Q,EAAUJ,O,EAAS;AAC1D,UAAMC,GAAG,aAAM,KAAKA,GAAX,uBAA2BF,SAA3B,sBAAgDK,QAAhD,CAAT;AACA,aAAO,KAAKE,GAAL,CAASL,GAAT,EAAcD,OAAd,EAAuB,KAAKG,aAAL,EAAvB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;4CAC4BJ,S,EAAWK,Q,EAAU;AACzC,UAAMH,GAAG,aAAM,KAAKA,GAAX,uBAA2BF,SAA3B,sBAAgDK,QAAhD,CAAT;AACA,aAAO,KAAKG,MAAL,CAAYN,GAAZ,EAAiB,KAAKE,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;8BACcK,M,EAAQC,M,EAAQC,S,EAAWC,K,EAAOC,M,EAAQ;AAChD,UAAIX,GAAG,aAAM,KAAKA,GAAX,WAAP;AACAA,MAAAA,GAAG,GAAG,KAAKY,aAAL,CAAmBZ,GAAnB,EAAwB,QAAxB,EAAkCO,MAAlC,CAAN;AACAP,MAAAA,GAAG,GAAG,KAAKY,aAAL,CAAmBZ,GAAnB,EAAwB,QAAxB,EAAkCQ,MAAlC,CAAN;AACAR,MAAAA,GAAG,GAAG,KAAKY,aAAL,CAAmBZ,GAAnB,EAAwB,WAAxB,EAAqCS,SAArC,CAAN;AACA,aAAO,KAAKI,OAAL,CAAab,GAAb,EAAkBU,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;;;;gCACgBG,M,EAAQ;AAChB,UAAMd,GAAG,aAAM,KAAKA,GAAX,oBAAwBc,MAAxB,CAAT;AACA,aAAO,KAAKV,GAAL,CAASJ,GAAT,EAAc,KAAKE,aAAL,EAAd,CAAP;AACH;;;2CACsB;AACnB,UAAMF,GAAG,aAAM,KAAKA,GAAX,UAAT;AACA,aAAO,KAAKI,GAAL,CAASJ,GAAT,EAAc,KAAKE,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;uCACuBJ,S,EAAWU,M,EAAQO,I,EAAMC,U,EAAYN,K,EAAOC,M,EAAQ;AACnE,UAAIX,GAAG,aAAM,KAAKA,GAAX,uBAA2BF,SAA3B,aAAP;AACAE,MAAAA,GAAG,GAAG,KAAKY,aAAL,CAAmBZ,GAAnB,EAAwB,QAAxB,EAAkCQ,MAAlC,CAAN;AACAR,MAAAA,GAAG,GAAG,KAAKY,aAAL,CAAmBZ,GAAnB,EAAwB,MAAxB,EAAgCe,IAAhC,CAAN;AACAf,MAAAA,GAAG,GAAG,KAAKY,aAAL,CAAmBZ,GAAnB,EAAwB,YAAxB,EAAsCgB,UAAtC,CAAN;AACA,aAAO,KAAKH,OAAL,CAAab,GAAb,EAAkBU,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;kCACkBb,S,EAAWK,Q,EAAU;AAC/B,UAAMH,GAAG,aAAM,KAAKA,GAAX,uBAA2BF,SAA3B,sBAAgDK,QAAhD,CAAT;AACA,aAAO,KAAKC,GAAL,CAASJ,GAAT,EAAc,KAAKE,aAAL,EAAd,CAAP;AACH;;;;EAtFeP,MAAM,CAACsB,U;;AAwF3BxB,OAAO,CAACI,KAAR,GAAgBA,KAAhB;AACA,IAAIqB,UAAJ;;AACA,CAAC,UAAUA,UAAV,EAAsB;AACnB,MAAIC,MAAJ;;AACA,GAAC,UAAUA,MAAV,EAAkB;AACfA,IAAAA,MAAM,CAAC,QAAD,CAAN,GAAmB,QAAnB;AACAA,IAAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,SAApB;AACAA,IAAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,SAApB;AACH,GAJD,EAIGA,MAAM,GAAGD,UAAU,CAACC,MAAX,KAAsBD,UAAU,CAACC,MAAX,GAAoB,EAA1C,CAJZ;;AAKA,MAAIC,SAAJ;;AACA,GAAC,UAAUA,SAAV,EAAqB;AAClBA,IAAAA,SAAS,CAAC,SAAD,CAAT,GAAuB,SAAvB;AACAA,IAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,UAAxB;AACH,GAHD,EAGGA,SAAS,GAAGF,UAAU,CAACE,SAAX,KAAyBF,UAAU,CAACE,SAAX,GAAuB,EAAhD,CAHf;;AAIA,MAAIC,IAAJ;;AACA,GAAC,UAAUA,IAAV,EAAgB;AACbA,IAAAA,IAAI,CAAC,KAAD,CAAJ,GAAc,KAAd;AACAA,IAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,SAAlB;AACAA,IAAAA,IAAI,CAAC,aAAD,CAAJ,GAAsB,aAAtB;AACAA,IAAAA,IAAI,CAAC,YAAD,CAAJ,GAAqB,YAArB;AACAA,IAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,SAAlB;AACH,GAND,EAMGA,IAAI,GAAGH,UAAU,CAACG,IAAX,KAAoBH,UAAU,CAACG,IAAX,GAAkB,EAAtC,CANV;AAOH,CApBD,EAoBGH,UAAU,GAAGzB,OAAO,CAACyB,UAAR,KAAuBzB,OAAO,CAACyB,UAAR,GAAqB,EAA5C,CApBhB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"../core\");\nclass Users extends core_1.CrowdinApi {\n    /**\n     *\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addProjectMember(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/members`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     *\n     * @param projectId project identifier\n     * @param memberId member identifier\n     */\n    getProjectMemberPermissions(projectId, memberId) {\n        const url = `${this.url}/projects/${projectId}/members/${memberId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     *\n     * @param projectId project identifier\n     * @param memberId member identifier\n     */\n    replaceProjectMemberPermissions(projectId, memberId, request) {\n        const url = `${this.url}/projects/${projectId}/members/${memberId}`;\n        return this.put(url, request, this.defaultConfig());\n    }\n    /**\n     *\n     * @param projectId project identifier\n     * @param memberId member identifier\n     */\n    deleteMemberFromProject(projectId, memberId) {\n        const url = `${this.url}/projects/${projectId}/members/${memberId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param status filter users by status\n     * @param search search users by firstName, lastName, username, email\n     * @param twoFactor filter users by two-factor authentication status\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listUsers(status, search, twoFactor, limit, offset) {\n        let url = `${this.url}/users`;\n        url = this.addQueryParam(url, 'status', status);\n        url = this.addQueryParam(url, 'search', search);\n        url = this.addQueryParam(url, 'twoFactor', twoFactor);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param userId user identifier\n     */\n    getUserInfo(userId) {\n        const url = `${this.url}/users/${userId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    getAuthenticatedUser() {\n        const url = `${this.url}/user`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     *\n     * @param projectId project identifier\n     * @param search search users by firstName, lastName or username\n     * @param role defines role type\n     * @param languageId language identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listProjectMembers(projectId, search, role, languageId, limit, offset) {\n        let url = `${this.url}/projects/${projectId}/members`;\n        url = this.addQueryParam(url, 'search', search);\n        url = this.addQueryParam(url, 'role', role);\n        url = this.addQueryParam(url, 'languageId', languageId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     *\n     * @param projectId project identifier\n     * @param memberId member identifier\n     */\n    getMemberInfo(projectId, memberId) {\n        const url = `${this.url}/projects/${projectId}/members/${memberId}`;\n        return this.get(url, this.defaultConfig());\n    }\n}\nexports.Users = Users;\nvar UsersModel;\n(function (UsersModel) {\n    let Status;\n    (function (Status) {\n        Status[\"ACTIVE\"] = \"active\";\n        Status[\"PENDING\"] = \"pending\";\n        Status[\"BLOCKED\"] = \"blocked\";\n    })(Status = UsersModel.Status || (UsersModel.Status = {}));\n    let TwoFactor;\n    (function (TwoFactor) {\n        TwoFactor[\"ENABLED\"] = \"enabled\";\n        TwoFactor[\"DISABLED\"] = \"disabled\";\n    })(TwoFactor = UsersModel.TwoFactor || (UsersModel.TwoFactor = {}));\n    let Role;\n    (function (Role) {\n        Role[\"ALL\"] = \"all\";\n        Role[\"MANAGER\"] = \"manager\";\n        Role[\"PROOFREADER\"] = \"proofreader\";\n        Role[\"TRANSLATOR\"] = \"translator\";\n        Role[\"BLOCKED\"] = \"blocked\";\n    })(Role = UsersModel.Role || (UsersModel.Role = {}));\n})(UsersModel = exports.UsersModel || (exports.UsersModel = {}));\n"]},"metadata":{},"sourceType":"script"}