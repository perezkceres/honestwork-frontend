{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Interface}from'@ethersproject/abi';import{getWeb3}from'utils/web3';import MultiCallAbi from'config/abi/Multicall.json';import{getMulticallAddress}from'utils/addressHelpers';var multicall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(abi,calls){var web3,multi,itf,calldata,_yield$multi$methods$,returnData,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:web3=getWeb3();multi=new web3.eth.Contract(MultiCallAbi,getMulticallAddress());itf=new Interface(abi);calldata=calls.map(function(call){return[call.address.toLowerCase(),itf.encodeFunctionData(call.name,call.params)];});_context.next=6;return multi.methods.aggregate(calldata).call();case 6:_yield$multi$methods$=_context.sent;returnData=_yield$multi$methods$.returnData;res=returnData.map(function(call,i){return itf.decodeFunctionResult(calls[i].name,call);});return _context.abrupt(\"return\",res);case 10:case\"end\":return _context.stop();}}},_callee);}));return function multicall(_x,_x2){return _ref.apply(this,arguments);};}();export default multicall;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/utils/multicall.ts"],"names":["Interface","getWeb3","MultiCallAbi","getMulticallAddress","multicall","abi","calls","web3","multi","eth","Contract","itf","calldata","map","call","address","toLowerCase","encodeFunctionData","name","params","methods","aggregate","returnData","res","i","decodeFunctionResult"],"mappings":"uUACA,OAASA,SAAT,KAA0B,oBAA1B,CACA,OAASC,OAAT,KAAwB,YAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,OAASC,mBAAT,KAAoC,sBAApC,CAQA,GAAMC,CAAAA,SAAS,0FAAG,iBAAOC,GAAP,CAAmBC,KAAnB,mLACVC,IADU,CACHN,OAAO,EADJ,CAEVO,KAFU,CAEF,GAAID,CAAAA,IAAI,CAACE,GAAL,CAASC,QAAb,CAAuBR,YAAvB,CAA4DC,mBAAmB,EAA/E,CAFE,CAGVQ,GAHU,CAGJ,GAAIX,CAAAA,SAAJ,CAAcK,GAAd,CAHI,CAKVO,QALU,CAKCN,KAAK,CAACO,GAAN,CAAU,SAACC,IAAD,QAAU,CAACA,IAAI,CAACC,OAAL,CAAaC,WAAb,EAAD,CAA6BL,GAAG,CAACM,kBAAJ,CAAuBH,IAAI,CAACI,IAA5B,CAAkCJ,IAAI,CAACK,MAAvC,CAA7B,CAAV,EAAV,CALD,uBAMaX,CAAAA,KAAK,CAACY,OAAN,CAAcC,SAAd,CAAwBT,QAAxB,EAAkCE,IAAlC,EANb,4CAMRQ,UANQ,uBAMRA,UANQ,CAOVC,GAPU,CAOJD,UAAU,CAACT,GAAX,CAAe,SAACC,IAAD,CAAOU,CAAP,QAAab,CAAAA,GAAG,CAACc,oBAAJ,CAAyBnB,KAAK,CAACkB,CAAD,CAAL,CAASN,IAAlC,CAAwCJ,IAAxC,CAAb,EAAf,CAPI,iCASTS,GATS,yDAAH,kBAATnB,CAAAA,SAAS,gDAAf,CAYA,cAAeA,CAAAA,SAAf","sourcesContent":["import { AbiItem } from 'web3-utils'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (exemple: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[]) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const { returnData } = await multi.methods.aggregate(calldata).call()\r\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n"]},"metadata":{},"sourceType":"module"}