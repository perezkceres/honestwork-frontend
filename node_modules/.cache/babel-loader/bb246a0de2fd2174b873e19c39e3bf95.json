{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useCallback}from'react';import{useWallet}from'@binance-chain/bsc-use-wallet';import{useDispatch}from'react-redux';import{fetchFarmUserDataAsync,updateUserStakedBalance,updateUserBalance}from'state/actions';import{stake,smartStakeBnb,smartStake}from'utils/callHelpers';import{useMasterchef,useSmartChef}from'./useContract';var useStake=function useStake(pid){var dispatch=useDispatch();var _useWallet=useWallet(),account=_useWallet.account;var masterChefContract=useMasterchef();var handleStake=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(amount){var txHash;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return stake(masterChefContract,pid,amount,account);case 2:txHash=_context.sent;dispatch(fetchFarmUserDataAsync(account));console.info(txHash);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}(),[account,dispatch,masterChefContract,pid]);return{onStake:handleStake};};export var useSmartStake=function useSmartStake(sousId){var isUsingBnb=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var dispatch=useDispatch();var _useWallet2=useWallet(),account=_useWallet2.account;var smartChefContract=useSmartChef(sousId);var handleStake=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(amount){var stakeFn;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:stakeFn=isUsingBnb?smartStakeBnb:smartStake;_context2.next=3;return stakeFn(smartChefContract,amount,account);case 3:dispatch(updateUserStakedBalance(String(sousId),account));dispatch(updateUserBalance(String(sousId),account));case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}(),[account,dispatch,isUsingBnb,smartChefContract,sousId]);return{onStake:handleStake};};export default useStake;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/hooks/useStake.ts"],"names":["useCallback","useWallet","useDispatch","fetchFarmUserDataAsync","updateUserStakedBalance","updateUserBalance","stake","smartStakeBnb","smartStake","useMasterchef","useSmartChef","useStake","pid","dispatch","account","masterChefContract","handleStake","amount","txHash","console","info","onStake","useSmartStake","sousId","isUsingBnb","smartChefContract","stakeFn","String"],"mappings":"uUAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,sBAAT,CAAiCC,uBAAjC,CAA0DC,iBAA1D,KAAmF,eAAnF,CACA,OAASC,KAAT,CAAgBC,aAAhB,CAA+BC,UAA/B,KAAiD,mBAAjD,CACA,OAASC,aAAT,CAAwBC,YAAxB,KAA4C,eAA5C,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAiB,CAChC,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CADgC,eAEZD,SAAS,EAFG,CAExBa,OAFwB,YAExBA,OAFwB,CAGhC,GAAMC,CAAAA,kBAAkB,CAAGN,aAAa,EAAxC,CAEA,GAAMO,CAAAA,WAAW,CAAGhB,WAAW,0FAC7B,iBAAOiB,MAAP,mJACuBX,CAAAA,KAAK,CAACS,kBAAD,CAAqBH,GAArB,CAA0BK,MAA1B,CAAkCH,OAAlC,CAD5B,QACQI,MADR,eAEEL,QAAQ,CAACV,sBAAsB,CAACW,OAAD,CAAvB,CAAR,CACAK,OAAO,CAACC,IAAR,CAAaF,MAAb,EAHF,sDAD6B,+DAM7B,CAACJ,OAAD,CAAUD,QAAV,CAAoBE,kBAApB,CAAwCH,GAAxC,CAN6B,CAA/B,CASA,MAAO,CAAES,OAAO,CAAEL,WAAX,CAAP,CACD,CAfD,CAkBA,MAAO,IAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,MAAD,CAAwC,IAAvBC,CAAAA,UAAuB,2DAAV,KAAU,CACnE,GAAMX,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CADmE,gBAE/CD,SAAS,EAFsC,CAE3Da,OAF2D,aAE3DA,OAF2D,CAGnE,GAAMW,CAAAA,iBAAiB,CAAGf,YAAY,CAACa,MAAD,CAAtC,CAEA,GAAMP,CAAAA,WAAW,CAAGhB,WAAW,2FAC7B,kBAAOiB,MAAP,kIACQS,OADR,CACkBF,UAAU,CAAGjB,aAAH,CAAmBC,UAD/C,wBAEQkB,CAAAA,OAAO,CAACD,iBAAD,CAAoBR,MAApB,CAA4BH,OAA5B,CAFf,QAGED,QAAQ,CAACT,uBAAuB,CAACuB,MAAM,CAACJ,MAAD,CAAP,CAAiBT,OAAjB,CAAxB,CAAR,CACAD,QAAQ,CAACR,iBAAiB,CAACsB,MAAM,CAACJ,MAAD,CAAP,CAAiBT,OAAjB,CAAlB,CAAR,CAJF,wDAD6B,iEAO7B,CAACA,OAAD,CAAUD,QAAV,CAAoBW,UAApB,CAAgCC,iBAAhC,CAAmDF,MAAnD,CAP6B,CAA/B,CAUA,MAAO,CAAEF,OAAO,CAAEL,WAAX,CAAP,CACD,CAhBM,CAkBP,cAAeL,CAAAA,QAAf","sourcesContent":["import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, smartStakeBnb, smartStake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSmartChef } from './useContract'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\n\r\nexport const useSmartStake = (sousId: number, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const smartChefContract = useSmartChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const stakeFn = isUsingBnb ? smartStakeBnb : smartStake\r\n      await stakeFn(smartChefContract, amount, account)\r\n      dispatch(updateUserStakedBalance(String(sousId), account))\r\n      dispatch(updateUserBalance(String(sousId), account))\r\n    },\r\n    [account, dispatch, isUsingBnb, smartChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n"]},"metadata":{},"sourceType":"module"}