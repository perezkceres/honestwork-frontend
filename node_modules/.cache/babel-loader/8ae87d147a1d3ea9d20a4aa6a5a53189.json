{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { ethers } from 'ethers';\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods.approve(masterChefContract.options.address, ethers.constants.MaxUint256).send({\n    from: account\n  });\n};\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods.deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const smartStake = async (smartChefContract, amount, account) => smartChefContract.methods.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n  from: account\n}).on('transactionHash', tx => tx.transactionHash);\nexport const smartStakeBnb = async (smartChefContract, amount, account) => smartChefContract.methods.deposit().send({\n  from: account,\n  value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\n}).on('transactionHash', tx => tx.transactionHash);\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods.withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const smartChefUnstake = async (smartChefContract, amount, account) => {\n  // buggy CTC\n  if (smartChefContract.options.address === '0x85f27A63cFb4Dc5a36d7Eb5EF8620D343817e156') {\n    smartChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on('transactionHash', tx => tx.transactionHash);\n  } else {\n    smartChefContract.methods.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n      from: account\n    }).on('transactionHash', tx => tx.transactionHash);\n  }\n};\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on('transactionHash', tx => tx.transactionHash);\n  }\n\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on('transactionHash', tx => tx.transactionHash);\n  }\n\n  return sousChefContract.methods.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account\n  }).on('transactionHash', tx => tx.transactionHash);\n};\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => sousChefContract.methods.emergencyWithdraw().send({\n  from: account\n}).on('transactionHash', tx => tx.transactionHash);\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods.deposit(pid, '0').send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const smartHarvest = async (sousChefContract, account) => sousChefContract.methods.deposit('0').send({\n  from: account\n}).on('transactionHash', tx => tx.transactionHash);\nexport const smartHarvestBnb = async (sousChefContract, account) => sousChefContract.methods.deposit().send({\n  from: account,\n  value: new BigNumber(0)\n}).on('transactionHash', tx => tx.transactionHash);\nexport const participateForest = async (blackContract, amount, account) => {\n  // console.log('amount', new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n  return blackContract.methods.participate(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), 100) // .participate(\"2\", 100)\n  .send({\n    from: account,\n    gasPrice: '7000000000'\n  }).on('transactionHash', tx => {\n    return tx;\n  });\n};\nexport const claimForest = async (blackContract, account) => {\n  return blackContract.methods.claimReward().send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx;\n  });\n};","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/utils/callHelpers.ts"],"names":["BigNumber","ethers","approve","lpContract","masterChefContract","account","methods","options","address","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","pow","toString","on","tx","transactionHash","smartStake","smartChefContract","smartStakeBnb","value","unstake","withdraw","smartChefUnstake","emergencyWithdraw","sousUnstake","sousChefContract","sousEmegencyUnstake","harvest","smartHarvest","smartHarvestBnb","participateForest","blackContract","participate","gasPrice","claimForest","claimReward"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const smartStake = async (smartChefContract, amount, account) =>\r\n  smartChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => tx.transactionHash)\r\n\r\nexport const smartStakeBnb = async (smartChefContract, amount, account) =>\r\n  smartChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => tx.transactionHash)\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const smartChefUnstake = async (smartChefContract, amount, account) => {\r\n  // buggy CTC\r\n  if (smartChefContract.options.address === '0x85f27A63cFb4Dc5a36d7Eb5EF8620D343817e156') {\r\n    smartChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => tx.transactionHash)\r\n  } else {\r\n    smartChefContract.methods\r\n      .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => tx.transactionHash)\r\n  }\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => tx.transactionHash)\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => tx.transactionHash)\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => tx.transactionHash)\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) =>\r\n  sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => tx.transactionHash)\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const smartHarvest = async (sousChefContract, account) =>\r\n  sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => tx.transactionHash)\r\n\r\nexport const smartHarvestBnb = async (sousChefContract, account) =>\r\n  sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => tx.transactionHash)\r\n\r\nexport const participateForest = async (blackContract, amount, account) => {\r\n  // console.log('amount', new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n  return blackContract.methods\r\n    .participate(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), 100)\r\n    // .participate(\"2\", 100)\r\n    .send({ from: account, gasPrice: '7000000000'  })\r\n    .on('transactionHash', (tx) => {\r\n      return tx\r\n    })\r\n}\r\n\r\nexport const claimForest = async (blackContract, account) => {\r\n  return blackContract.methods\r\n    .claimReward()\r\n    .send({ from: account})\r\n    .on('transactionHash', (tx) => {\r\n      return tx\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}