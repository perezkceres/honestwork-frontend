{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar FetchClient = /*#__PURE__*/function () {\n  function FetchClient() {\n    _classCallCheck(this, FetchClient);\n\n    this.maxConcurrentRequests = 15;\n    this.requestIntervalMs = 10;\n    this.pendingRequests = 0;\n  }\n\n  _createClass(FetchClient, [{\n    key: \"get\",\n    value: function get(url, config) {\n      return this.request(url, 'GET', config);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(url, config) {\n      return this.request(url, 'DELETE', config);\n    }\n  }, {\n    key: \"head\",\n    value: function head(url, config) {\n      return this.request(url, 'HEAD', config);\n    }\n  }, {\n    key: \"post\",\n    value: function post(url, data, config) {\n      return this.request(url, 'POST', config, data);\n    }\n  }, {\n    key: \"put\",\n    value: function put(url, data, config) {\n      return this.request(url, 'PUT', config, data);\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(url, data, config) {\n      return this.request(url, 'PATCH', config, data);\n    }\n  }, {\n    key: \"request\",\n    value: function request(url, method, config, data) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                body = undefined;\n\n                if (!!data) {\n                  if (typeof data === 'object' && !this.isBuffer(data)) {\n                    body = JSON.stringify(data);\n                    config = config || {\n                      headers: {}\n                    };\n                    config.headers = config.headers || {};\n                    config.headers['Content-Type'] = 'application/json';\n                  } else {\n                    body = data;\n                  }\n                }\n\n                _context2.next = 4;\n                return this.waitInQueue();\n\n              case 4:\n                return _context2.abrupt(\"return\", fetch(url, {\n                  method: method,\n                  headers: !!config ? config.headers : {},\n                  mode: config && config.mode || 'no-cors',\n                  body: body\n                }).then(function (resp) {\n                  return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var text, json;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!(resp.status === 204)) {\n                              _context.next = 2;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", {});\n\n                          case 2:\n                            _context.next = 4;\n                            return resp.text();\n\n                          case 4:\n                            text = _context.sent;\n                            json = text ? JSON.parse(text) : {};\n\n                            if (!(resp.status >= 200 && resp.status < 300)) {\n                              _context.next = 10;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", json);\n\n                          case 10:\n                            throw json;\n\n                          case 11:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n                }).finally(function () {\n                  return _this.pendingRequests = Math.max(0, _this.pendingRequests - 1);\n                }));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"isBuffer\",\n    value: function isBuffer(data) {\n      if (typeof ArrayBuffer === 'function') {\n        return ArrayBuffer.isView(data);\n      } else if (typeof Buffer === 'function') {\n        return Buffer.isBuffer(data);\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"waitInQueue\",\n    value: function waitInQueue() {\n      var _this2 = this;\n\n      // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n      return new Promise(function (resolve) {\n        var interval = setInterval(function () {\n          if (_this2.pendingRequests < _this2.maxConcurrentRequests) {\n            _this2.pendingRequests++;\n            clearInterval(interval);\n            resolve();\n          }\n        }, _this2.requestIntervalMs);\n      });\n    }\n  }]);\n\n  return FetchClient;\n}();\n\nexports.FetchClient = FetchClient;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/@crowdin/crowdin-api-client/out/core/internal/fetch/fetchClient.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","FetchClient","maxConcurrentRequests","requestIntervalMs","pendingRequests","url","config","request","data","method","body","undefined","isBuffer","JSON","stringify","headers","waitInQueue","fetch","mode","resp","status","text","json","parse","finally","Math","max","ArrayBuffer","isView","Buffer","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass FetchClient {\n    constructor() {\n        this.maxConcurrentRequests = 15;\n        this.requestIntervalMs = 10;\n        this.pendingRequests = 0;\n    }\n    get(url, config) {\n        return this.request(url, 'GET', config);\n    }\n    delete(url, config) {\n        return this.request(url, 'DELETE', config);\n    }\n    head(url, config) {\n        return this.request(url, 'HEAD', config);\n    }\n    post(url, data, config) {\n        return this.request(url, 'POST', config, data);\n    }\n    put(url, data, config) {\n        return this.request(url, 'PUT', config, data);\n    }\n    patch(url, data, config) {\n        return this.request(url, 'PATCH', config, data);\n    }\n    request(url, method, config, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let body = undefined;\n            if (!!data) {\n                if (typeof data === 'object' && !this.isBuffer(data)) {\n                    body = JSON.stringify(data);\n                    config = config || { headers: {} };\n                    config.headers = config.headers || {};\n                    config.headers['Content-Type'] = 'application/json';\n                }\n                else {\n                    body = data;\n                }\n            }\n            yield this.waitInQueue();\n            return fetch(url, {\n                method: method,\n                headers: !!config ? config.headers : {},\n                mode: (config && config.mode) || 'no-cors',\n                body: body,\n            })\n                .then((resp) => __awaiter(this, void 0, void 0, function* () {\n                if (resp.status === 204) {\n                    return {};\n                }\n                const text = yield resp.text();\n                const json = text ? JSON.parse(text) : {};\n                if (resp.status >= 200 && resp.status < 300) {\n                    return json;\n                }\n                else {\n                    throw json;\n                }\n            }))\n                .finally(() => (this.pendingRequests = Math.max(0, this.pendingRequests - 1)));\n        });\n    }\n    isBuffer(data) {\n        if (typeof ArrayBuffer === 'function') {\n            return ArrayBuffer.isView(data);\n        }\n        else if (typeof Buffer === 'function') {\n            return Buffer.isBuffer(data);\n        }\n        else {\n            return false;\n        }\n    }\n    waitInQueue() {\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        return new Promise(resolve => {\n            const interval = setInterval(() => {\n                if (this.pendingRequests < this.maxConcurrentRequests) {\n                    this.pendingRequests++;\n                    clearInterval(interval);\n                    resolve();\n                }\n            }, this.requestIntervalMs);\n        });\n    }\n}\nexports.FetchClient = FetchClient;\n"]},"metadata":{},"sourceType":"script"}