{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/KingOfElephants/components/ParticipateCard.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap-libs/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { useForest } from 'hooks/useContract';\nimport { getFullDisplayBalance, getBalanceNumber } from 'utils/formatBalance';\nimport BigNumber from 'bignumber.js';\nimport { useForestApprove } from 'hooks/useApprove';\nimport { useForestAllowance } from 'hooks/useAllowance';\nimport UnlockButton from 'components/UnlockButton';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport { participateForest } from 'utils/callHelpers';\nimport WoodButton from './WoodButto';\nconst StyledTokenViewer = styled.div`\n  align-items: center;\n  background-color: ${props => props.theme.colors.input};\n  border-radius: ${props => props.theme.radii.default};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 72px;\n  padding: 0 ${props => props.theme.spacing[3]}px;\n`;\n_c = StyledTokenViewer;\nconst StyledCard = styled(Card)``;\n_c2 = StyledCard;\nconst QuesionHelperPositioner = styled.div`\n  margin-top: 10px;\n  margin-right: 10px;\n  float: right;\n`;\n\nconst ParticipateCard = ({\n  hasWinner,\n  nextStartTime,\n  bidAmount\n}) => {\n  _s();\n\n  const forestContract = useForest();\n  const max = useTokenBalance(getCakeAddress());\n  const allowance = useForestAllowance();\n  const {\n    onApprove\n  } = useForestApprove();\n  const {\n    account\n  } = useWallet();\n  const [pendingTx, setPendingTx] = useState(false);\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max);\n  }, [max]); // const forestBalance = useMemo(() => parseFloat(getFullDisplayBalance(balance)), [balance])\n  // const bid = (forestBalance * 0.012).toFixed(10)\n\n  const bid = getBalanceNumber(new BigNumber(bidAmount)).toFixed(10);\n\n  const onSubmit = async () => {\n    try {\n      setPendingTx(true);\n      await participateForest(forestContract, bid, account);\n      setPendingTx(false);\n    } catch (e) {\n      console.error(e);\n      setPendingTx(false);\n    }\n  };\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setPendingTx(true);\n      await onApprove();\n      setPendingTx(false);\n    } catch (e) {\n      console.error(e);\n      setPendingTx(false);\n    }\n  }, [onApprove]);\n  const isWaitingForNextGame = nextStartTime * 1000 > Date.now();\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        mb: \"24px\",\n        children: \"Bid Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), !account ? /*#__PURE__*/_jsxDEV(UnlockButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StyledTokenViewer, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            color: \"primary\",\n            fontSize: \"24px\",\n            children: [parseFloat(bid).toFixed(1), \" GAJ\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"primary\",\n            bold: true,\n            fontSize: \"16px\",\n            children: [\"your balance \", parseFloat(fullBalance).toFixed(2), \" GAJ\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mt: \"20px\",\n          children: !allowance.toNumber() ? /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleApprove,\n            variant: \"primary\",\n            fullWidth: true,\n            disabled: pendingTx,\n            children: \"Approve contract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this) : !hasWinner ?\n          /*#__PURE__*/\n\n          /* {\n          <div>\n            <Button onClick={onSubmit} fullWidth disabled={pendingTx || isWaitingForNextGame}>\n              Bid Now\n            </Button>\n            <BidNow />\n          </div>} */\n          _jsxDEV(WoodButton, {\n            onBid: onSubmit,\n            disabled: pendingTx || isWaitingForNextGame,\n            text: \"Bid Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(WoodButton, {\n            onBid: onSubmit,\n            disabled: true,\n            text: \"Waiting for Claim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ParticipateCard, \"52yUA0R/fK6lKWUPQJEAc72FNSU=\", false, function () {\n  return [useForest, useTokenBalance, useForestAllowance, useForestApprove, useWallet];\n});\n\n_c3 = ParticipateCard;\nexport default ParticipateCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledTokenViewer\");\n$RefreshReg$(_c2, \"StyledCard\");\n$RefreshReg$(_c3, \"ParticipateCard\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/KingOfElephants/components/ParticipateCard.tsx"],"names":["React","useState","useCallback","useMemo","styled","Button","Card","CardBody","Flex","Heading","Text","useWallet","useForest","getFullDisplayBalance","getBalanceNumber","BigNumber","useForestApprove","useForestAllowance","UnlockButton","useTokenBalance","getCakeAddress","participateForest","WoodButton","StyledTokenViewer","div","props","theme","colors","input","radii","default","spacing","StyledCard","QuesionHelperPositioner","ParticipateCard","hasWinner","nextStartTime","bidAmount","forestContract","max","allowance","onApprove","account","pendingTx","setPendingTx","fullBalance","bid","toFixed","onSubmit","e","console","error","handleApprove","isWaitingForNextGame","Date","now","parseFloat","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useState, useCallback, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useForest } from 'hooks/useContract'\nimport { getFullDisplayBalance, getBalanceNumber } from 'utils/formatBalance'\nimport BigNumber from 'bignumber.js'\nimport { useForestApprove } from 'hooks/useApprove'\nimport { useForestAllowance } from 'hooks/useAllowance'\nimport UnlockButton from 'components/UnlockButton'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { participateForest } from 'utils/callHelpers'\nimport WoodButton from './WoodButto'\n\nconst StyledTokenViewer = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCard = styled(Card)``\ninterface ParticipateCardProps {\n  hasWinner\n  nextStartTime\n  bidAmount\n}\n\nconst QuesionHelperPositioner = styled.div`\n  margin-top: 10px;\n  margin-right: 10px;\n  float: right;\n`\n\nconst ParticipateCard: React.FC<ParticipateCardProps> = ({ hasWinner, nextStartTime, bidAmount }) => {\n  const forestContract = useForest()\n  const max = useTokenBalance(getCakeAddress())\n  const allowance = useForestAllowance()\n  const { onApprove } = useForestApprove()\n  const { account } = useWallet()\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  // const forestBalance = useMemo(() => parseFloat(getFullDisplayBalance(balance)), [balance])\n  // const bid = (forestBalance * 0.012).toFixed(10)\n\n  const bid = getBalanceNumber(new BigNumber(bidAmount)).toFixed(10)\n\n  const onSubmit = async () => {\n    try {\n      setPendingTx(true)\n      await participateForest(forestContract, bid, account)\n      setPendingTx(false)\n    } catch (e) {\n      console.error(e)\n      setPendingTx(false)\n    }\n  }\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setPendingTx(true)\n      await onApprove()\n      setPendingTx(false)\n    } catch (e) {\n      console.error(e)\n      setPendingTx(false)\n    }\n  }, [onApprove])\n\n  const isWaitingForNextGame = nextStartTime * 1000 > Date.now()\n\n  return (\n    <StyledCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          Bid Now!\n        </Heading>\n\n        {!account ? (\n          <UnlockButton />\n        ) : (\n          <>\n            <StyledTokenViewer>\n              <Text color=\"primary\" fontSize=\"24px\">\n                {parseFloat(bid).toFixed(1)} GAJ\n              </Text>\n              <Text color=\"primary\" bold fontSize=\"16px\">\n                your balance {parseFloat(fullBalance).toFixed(2)} GAJ\n              </Text>\n            </StyledTokenViewer>\n            <Flex mt=\"20px\">\n              {!allowance.toNumber() ? (\n                <Button onClick={handleApprove} variant=\"primary\" fullWidth disabled={pendingTx}>\n                  Approve contract\n                </Button>\n              ) : !hasWinner ? (\n                /* {\n                <div>\n                  <Button onClick={onSubmit} fullWidth disabled={pendingTx || isWaitingForNextGame}>\n                    Bid Now\n                  </Button>\n                  <BidNow />\n                </div>} */\n                <WoodButton onBid={onSubmit} disabled={pendingTx || isWaitingForNextGame} text=\"Bid Now\"/>\n              ) : (\n                <WoodButton onBid={onSubmit} disabled text=\"Waiting for Claim\" />\n              )}\n            </Flex>\n          </>\n        )}\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default ParticipateCard"]},"metadata":{},"sourceType":"module"}