{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/Liquidity/components/DepositModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Button, Modal } from '@pancakeswap-libs/uikit';\nimport ModalActions from 'components/ModalActions';\nimport TokenInput from 'components/TokenInput';\nimport useI18n from 'hooks/useI18n';\nimport { getFullDisplayBalance } from 'utils/formatBalance';\n\nconst DepositModal = ({\n  max,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  depositFeeBP = 0\n}) => {\n  _s();\n\n  const [val, setVal] = useState('');\n  const [pendingTx, setPendingTx] = useState(false);\n  const TranslateString = useI18n();\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max);\n  }, [max]);\n  const handleChange = useCallback(e => {\n    setVal(e.currentTarget.value);\n  }, [setVal]);\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: `${TranslateString(316, 'Deposit')} ${tokenName} Tokens`,\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(TokenInput, {\n      value: val,\n      onSelectMax: handleSelectMax,\n      onChange: handleChange,\n      max: fullBalance,\n      symbol: tokenName,\n      depositFeeBP: depositFeeBP\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onDismiss,\n        children: TranslateString(462, 'Cancel')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: pendingTx,\n        onClick: async () => {\n          setPendingTx(true);\n          await onConfirm(val);\n          setPendingTx(false);\n          onDismiss();\n        },\n        children: pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DepositModal, \"6CJIGJ2Y3KmfnLsU3NCO1RJwS2U=\", false, function () {\n  return [useI18n];\n});\n\n_c = DepositModal;\nexport default DepositModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepositModal\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/Liquidity/components/DepositModal.tsx"],"names":["React","useCallback","useMemo","useState","Button","Modal","ModalActions","TokenInput","useI18n","getFullDisplayBalance","DepositModal","max","onConfirm","onDismiss","tokenName","depositFeeBP","val","setVal","pendingTx","setPendingTx","TranslateString","fullBalance","handleChange","e","currentTarget","value","handleSelectMax"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,yBAA9B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,qBAAT,QAAsC,qBAAtC;;AAUA,MAAMC,YAAyC,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,SAAP;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA,SAAS,GAAG,EAAzC;AAA8CC,EAAAA,YAAY,GAAG;AAA7D,CAAD,KAAqE;AAAA;;AACrH,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMiB,eAAe,GAAGZ,OAAO,EAA/B;AACA,QAAMa,WAAW,GAAGnB,OAAO,CAAC,MAAM;AAChC,WAAOO,qBAAqB,CAACE,GAAD,CAA5B;AACD,GAF0B,EAExB,CAACA,GAAD,CAFwB,CAA3B;AAIA,QAAMW,YAAY,GAAGrB,WAAW,CAC7BsB,CAAD,IAA0C;AACxCN,IAAAA,MAAM,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAN;AACD,GAH6B,EAI9B,CAACR,MAAD,CAJ8B,CAAhC;AAOA,QAAMS,eAAe,GAAGzB,WAAW,CAAC,MAAM;AACxCgB,IAAAA,MAAM,CAACI,WAAD,CAAN;AACD,GAFkC,EAEhC,CAACA,WAAD,EAAcJ,MAAd,CAFgC,CAAnC;AAIA,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAG,GAAEG,eAAe,CAAC,GAAD,EAAM,SAAN,CAAiB,IAAGN,SAAU,SAA9D;AAAwE,IAAA,SAAS,EAAED,SAAnF;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAEG,GADT;AAEE,MAAA,WAAW,EAAEU,eAFf;AAGE,MAAA,QAAQ,EAAEJ,YAHZ;AAIE,MAAA,GAAG,EAAED,WAJP;AAKE,MAAA,MAAM,EAAEP,SALV;AAME,MAAA,YAAY,EAAEC;AANhB;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,YAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEF,SAArC;AAAA,kBACGO,eAAe,CAAC,GAAD,EAAM,QAAN;AADlB;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAEF,SADZ;AAEE,QAAA,OAAO,EAAE,YAAY;AACnBC,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,gBAAMP,SAAS,CAACI,GAAD,CAAf;AACAG,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAN,UAAAA,SAAS;AACV,SAPH;AAAA,kBASGK,SAAS,GAAGE,eAAe,CAAC,GAAD,EAAM,sBAAN,CAAlB,GAAkDA,eAAe,CAAC,GAAD,EAAM,SAAN;AAT7E;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA/CD;;GAAMV,Y;UAGoBF,O;;;KAHpBE,Y;AAiDN,eAAeA,YAAf","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' , depositFeeBP = 0}) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        depositFeeBP={depositFeeBP}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n"]},"metadata":{},"sourceType":"module"}