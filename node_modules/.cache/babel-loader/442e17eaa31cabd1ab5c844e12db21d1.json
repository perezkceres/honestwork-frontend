{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"../core\");\n\nvar Tasks = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(Tasks, _core_1$CrowdinApi);\n\n  var _super = _createSuper(Tasks);\n\n  function Tasks() {\n    _classCallCheck(this, Tasks);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Tasks, [{\n    key: \"listTasks\",\n\n    /**\n     * @param projectId project identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param status list tasks with specified statuses. It can be one status or a list of comma-separated status values\n     */\n    value: function listTasks(projectId, limit, offset, status) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/tasks\");\n      url = this.addQueryParam(url, 'status', status);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"addTask\",\n    value: function addTask(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/tasks\");\n      return this.post(url, request, this.defaultConfig());\n    }\n  }, {\n    key: \"exportTaskStrings\",\n    value: function exportTaskStrings(projectId, taskId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/tasks/\").concat(taskId, \"/exports\");\n      return this.post(url, {}, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     */\n\n  }, {\n    key: \"getTask\",\n    value: function getTask(projectId, taskId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/tasks/\").concat(taskId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     */\n\n  }, {\n    key: \"deleteTask\",\n    value: function deleteTask(projectId, taskId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/tasks/\").concat(taskId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"editTask\",\n    value: function editTask(projectId, taskId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/tasks/\").concat(taskId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param status list tasks with specified statuses. It can be one status or a list of comma-separated status values\n     * @param isArchived list archived/not archived tasks for the authorized user. 1 - archived, 0 - not archived\n     */\n\n  }, {\n    key: \"listUserTasks\",\n    value: function listUserTasks(limit, offset, status, isArchived) {\n      var url = \"\".concat(this.url, \"/user/tasks\");\n      url = this.addQueryParam(url, 'status', status);\n      url = this.addQueryParam(url, 'isArchived', isArchived);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"editTaskArchivedStatus\",\n    value: function editTaskArchivedStatus(projectId, taskId, request) {\n      var url = \"\".concat(this.url, \"/user/tasks/\").concat(taskId);\n      url = this.addQueryParam(url, 'projectId', projectId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n  }]);\n\n  return Tasks;\n}(core_1.CrowdinApi);\n\nexports.Tasks = Tasks;\nvar TasksModel;\n\n(function (TasksModel) {\n  var Status;\n\n  (function (Status) {\n    Status[\"TODO\"] = \"todo\";\n    Status[\"IN_PROGRESS\"] = \"in_progress\";\n    Status[\"DONE\"] = \"done\";\n    Status[\"CLOSED\"] = \"closed\";\n  })(Status = TasksModel.Status || (TasksModel.Status = {}));\n\n  var Type;\n\n  (function (Type) {\n    Type[Type[\"TRANSLATE\"] = 0] = \"TRANSLATE\";\n    Type[Type[\"PROOFREAD\"] = 1] = \"PROOFREAD\";\n    Type[Type[\"TRANSLATE_BY_VENDOR\"] = 2] = \"TRANSLATE_BY_VENDOR\";\n  })(Type = TasksModel.Type || (TasksModel.Type = {}));\n\n  var Expertise;\n\n  (function (Expertise) {\n    Expertise[\"STANDARD\"] = \"standard\";\n    Expertise[\"MOBILE_APPLICATIONS\"] = \"mobile-applications\";\n    Expertise[\"SOFTWARE_IT\"] = \"software-it\";\n    Expertise[\"GAMING_VIDEO_GAMES\"] = \"gaming-video-games\";\n    Expertise[\"TECHNICAL_ENGINEERING\"] = \"technical-engineering\";\n    Expertise[\"MARKETING_CONSUMER_MEDIA\"] = \"marketing-consumer-media\";\n    Expertise[\"BUSINESS_FINANCE\"] = \"business-finance\";\n    Expertise[\"LEGAL_CERTIFICATE\"] = \"legal-certificate\";\n    Expertise[\"CV\"] = \"cv\";\n    Expertise[\"MEDICAL\"] = \"medical\";\n    Expertise[\"PATENTS\"] = \"patents\";\n    Expertise[\"AD_WORDS_BANNERS\"] = \"ad-words-banners\";\n    Expertise[\"AUTOMOTIVE_AEROSPACE\"] = \"automotive-aerospace\";\n    Expertise[\"SCIENTIFIC\"] = \"scientific\";\n    Expertise[\"SCIENTIFIC_ACADEMIC\"] = \"scientific-academic\";\n    Expertise[\"TOURISM\"] = \"tourism\";\n    Expertise[\"CERTIFICATES_TRANSLATION\"] = \"certificates-translation\";\n    Expertise[\"TRAINING_EMPLOYEE_HANDBOOKS\"] = \"training-employee-handbooks\";\n    Expertise[\"FOREX_CRYPTO\"] = \"forex-crypto\";\n  })(Expertise = TasksModel.Expertise || (TasksModel.Expertise = {}));\n\n  var Tone;\n\n  (function (Tone) {\n    Tone[\"EPTY\"] = \"\";\n    Tone[\"INFORMAL\"] = \"Informal\";\n    Tone[\"FRIENDLY\"] = \"Friendly\";\n    Tone[\"BUSINESS\"] = \"Business\";\n    Tone[\"FORMAL\"] = \"Formal\";\n    Tone[\"OTHER\"] = \"other\";\n  })(Tone = TasksModel.Tone || (TasksModel.Tone = {}));\n\n  var Purpose;\n\n  (function (Purpose) {\n    Purpose[\"STANDARD\"] = \"standard\";\n    Purpose[\"PERSONAL_USE\"] = \"Personal use\";\n    Purpose[\"ONLINE_CONTENT\"] = \"Online content\";\n    Purpose[\"APP_WEB_LOCALIZATION\"] = \"App/Web localization\";\n    Purpose[\"MEDIA_CONTENT\"] = \"Media content\";\n    Purpose[\"SEMI_TECHNICAL\"] = \"Semi-technical\";\n    Purpose[\"OTHER\"] = \"other\";\n  })(Purpose = TasksModel.Purpose || (TasksModel.Purpose = {}));\n\n  var Subject;\n\n  (function (Subject) {\n    Subject[\"GENERAL\"] = \"general\";\n    Subject[\"ACCOUNTING_FINANCE\"] = \"accounting_finance\";\n    Subject[\"AEROSPACE_DEFENCE\"] = \"aerospace_defence\";\n    Subject[\"ARCHITECTURE\"] = \"architecture\";\n    Subject[\"ART\"] = \"art\";\n    Subject[\"AUTOMOTIVE\"] = \"automotive\";\n    Subject[\"CERTIFICATES_DIPLOMAS_LICENCES_CV_ETC\"] = \"certificates_diplomas_licences_cv_etc\";\n    Subject[\"CHEMICAL\"] = \"chemical\";\n    Subject[\"CIVIL_ENGINEERING_CONSTRUCTION\"] = \"civil_engineering_construction\";\n    Subject[\"CORPORATE_SOCIAL_RESPONSIBILITY\"] = \"corporate_social_responsibility\";\n    Subject[\"COSMETICS\"] = \"cosmetics\";\n    Subject[\"CULINARY\"] = \"culinary\";\n    Subject[\"ELECTRONICS_ELECTRICAL_ENGINEERING\"] = \"electronics_electrical_engineering\";\n    Subject[\"ENERGY_POWER_GENERATION_OIL_GAS\"] = \"energy_power_generation_oil_gas\";\n    Subject[\"ENVIRONMENT\"] = \"environment\";\n    Subject[\"FASHION\"] = \"fashion\";\n    Subject[\"GAMES_VISEOGAMES_CASINO\"] = \"games_viseogames_casino\";\n    Subject[\"GENERAL_BUSINESS_COMMERCE\"] = \"general_business_commerce\";\n    Subject[\"HISTORY_ARCHAEOLOGY\"] = \"history_archaeology\";\n    Subject[\"INFORMATION_TECHNOLOGY\"] = \"information_technology\";\n    Subject[\"INSURANCE\"] = \"insurance\";\n    Subject[\"INTERNET_E_COMMERCE\"] = \"internet_e-commerce\";\n    Subject[\"LEGAL_DOCUMENTS_CONTRACTS\"] = \"legal_documents_contracts\";\n    Subject[\"LITERARY_TRANSLATIONS\"] = \"literary_translations\";\n    Subject[\"MARKETING_ADVERTISING_MATERIAL_PUBLIC_RELATIONS\"] = \"marketing_advertising_material_public_relations\";\n    Subject[\"MATEMATICS_AND_PHYSICS\"] = \"matematics_and_physics\";\n    Subject[\"MECHANICAL_MANUFACTURING\"] = \"mechanical_manufacturing\";\n    Subject[\"MEDIA_JOURNALISM_PUBLISHING\"] = \"media_journalism_publishing\";\n    Subject[\"MEDICAL_PHARMACEUTICAL\"] = \"medical_pharmaceutical\";\n    Subject[\"MUSIC\"] = \"music\";\n    Subject[\"PRIVATE_CORRESPONDENCE_LETTERS\"] = \"private_correspondence_letters\";\n    Subject[\"RELIGION\"] = \"religion\";\n    Subject[\"SCIENCE\"] = \"science\";\n    Subject[\"SHIPPING_SAILING_MARITIME\"] = \"shipping_sailing_maritime\";\n    Subject[\"SOCIAL_SCIENCE\"] = \"social_science\";\n    Subject[\"TELECOMMUNICATIONS\"] = \"telecommunications\";\n    Subject[\"TRAVEL_TOURISM\"] = \"travel_tourism\";\n  })(Subject = TasksModel.Subject || (TasksModel.Subject = {}));\n})(TasksModel = exports.TasksModel || (exports.TasksModel = {}));","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/@crowdin/crowdin-api-client/out/tasks/index.js"],"names":["Object","defineProperty","exports","value","core_1","require","Tasks","projectId","limit","offset","status","url","addQueryParam","getList","request","post","defaultConfig","taskId","get","delete","patch","isArchived","CrowdinApi","TasksModel","Status","Type","Expertise","Tone","Purpose","Subject"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"../core\");\nclass Tasks extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param status list tasks with specified statuses. It can be one status or a list of comma-separated status values\n     */\n    listTasks(projectId, limit, offset, status) {\n        let url = `${this.url}/projects/${projectId}/tasks`;\n        url = this.addQueryParam(url, 'status', status);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addTask(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/tasks`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    exportTaskStrings(projectId, taskId) {\n        const url = `${this.url}/projects/${projectId}/tasks/${taskId}/exports`;\n        return this.post(url, {}, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     */\n    getTask(projectId, taskId) {\n        const url = `${this.url}/projects/${projectId}/tasks/${taskId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     */\n    deleteTask(projectId, taskId) {\n        const url = `${this.url}/projects/${projectId}/tasks/${taskId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @param request request body\n     */\n    editTask(projectId, taskId, request) {\n        const url = `${this.url}/projects/${projectId}/tasks/${taskId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param status list tasks with specified statuses. It can be one status or a list of comma-separated status values\n     * @param isArchived list archived/not archived tasks for the authorized user. 1 - archived, 0 - not archived\n     */\n    listUserTasks(limit, offset, status, isArchived) {\n        let url = `${this.url}/user/tasks`;\n        url = this.addQueryParam(url, 'status', status);\n        url = this.addQueryParam(url, 'isArchived', isArchived);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param taskId task identifier\n     * @param request request body\n     */\n    editTaskArchivedStatus(projectId, taskId, request) {\n        let url = `${this.url}/user/tasks/${taskId}`;\n        url = this.addQueryParam(url, 'projectId', projectId);\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Tasks = Tasks;\nvar TasksModel;\n(function (TasksModel) {\n    let Status;\n    (function (Status) {\n        Status[\"TODO\"] = \"todo\";\n        Status[\"IN_PROGRESS\"] = \"in_progress\";\n        Status[\"DONE\"] = \"done\";\n        Status[\"CLOSED\"] = \"closed\";\n    })(Status = TasksModel.Status || (TasksModel.Status = {}));\n    let Type;\n    (function (Type) {\n        Type[Type[\"TRANSLATE\"] = 0] = \"TRANSLATE\";\n        Type[Type[\"PROOFREAD\"] = 1] = \"PROOFREAD\";\n        Type[Type[\"TRANSLATE_BY_VENDOR\"] = 2] = \"TRANSLATE_BY_VENDOR\";\n    })(Type = TasksModel.Type || (TasksModel.Type = {}));\n    let Expertise;\n    (function (Expertise) {\n        Expertise[\"STANDARD\"] = \"standard\";\n        Expertise[\"MOBILE_APPLICATIONS\"] = \"mobile-applications\";\n        Expertise[\"SOFTWARE_IT\"] = \"software-it\";\n        Expertise[\"GAMING_VIDEO_GAMES\"] = \"gaming-video-games\";\n        Expertise[\"TECHNICAL_ENGINEERING\"] = \"technical-engineering\";\n        Expertise[\"MARKETING_CONSUMER_MEDIA\"] = \"marketing-consumer-media\";\n        Expertise[\"BUSINESS_FINANCE\"] = \"business-finance\";\n        Expertise[\"LEGAL_CERTIFICATE\"] = \"legal-certificate\";\n        Expertise[\"CV\"] = \"cv\";\n        Expertise[\"MEDICAL\"] = \"medical\";\n        Expertise[\"PATENTS\"] = \"patents\";\n        Expertise[\"AD_WORDS_BANNERS\"] = \"ad-words-banners\";\n        Expertise[\"AUTOMOTIVE_AEROSPACE\"] = \"automotive-aerospace\";\n        Expertise[\"SCIENTIFIC\"] = \"scientific\";\n        Expertise[\"SCIENTIFIC_ACADEMIC\"] = \"scientific-academic\";\n        Expertise[\"TOURISM\"] = \"tourism\";\n        Expertise[\"CERTIFICATES_TRANSLATION\"] = \"certificates-translation\";\n        Expertise[\"TRAINING_EMPLOYEE_HANDBOOKS\"] = \"training-employee-handbooks\";\n        Expertise[\"FOREX_CRYPTO\"] = \"forex-crypto\";\n    })(Expertise = TasksModel.Expertise || (TasksModel.Expertise = {}));\n    let Tone;\n    (function (Tone) {\n        Tone[\"EPTY\"] = \"\";\n        Tone[\"INFORMAL\"] = \"Informal\";\n        Tone[\"FRIENDLY\"] = \"Friendly\";\n        Tone[\"BUSINESS\"] = \"Business\";\n        Tone[\"FORMAL\"] = \"Formal\";\n        Tone[\"OTHER\"] = \"other\";\n    })(Tone = TasksModel.Tone || (TasksModel.Tone = {}));\n    let Purpose;\n    (function (Purpose) {\n        Purpose[\"STANDARD\"] = \"standard\";\n        Purpose[\"PERSONAL_USE\"] = \"Personal use\";\n        Purpose[\"ONLINE_CONTENT\"] = \"Online content\";\n        Purpose[\"APP_WEB_LOCALIZATION\"] = \"App/Web localization\";\n        Purpose[\"MEDIA_CONTENT\"] = \"Media content\";\n        Purpose[\"SEMI_TECHNICAL\"] = \"Semi-technical\";\n        Purpose[\"OTHER\"] = \"other\";\n    })(Purpose = TasksModel.Purpose || (TasksModel.Purpose = {}));\n    let Subject;\n    (function (Subject) {\n        Subject[\"GENERAL\"] = \"general\";\n        Subject[\"ACCOUNTING_FINANCE\"] = \"accounting_finance\";\n        Subject[\"AEROSPACE_DEFENCE\"] = \"aerospace_defence\";\n        Subject[\"ARCHITECTURE\"] = \"architecture\";\n        Subject[\"ART\"] = \"art\";\n        Subject[\"AUTOMOTIVE\"] = \"automotive\";\n        Subject[\"CERTIFICATES_DIPLOMAS_LICENCES_CV_ETC\"] = \"certificates_diplomas_licences_cv_etc\";\n        Subject[\"CHEMICAL\"] = \"chemical\";\n        Subject[\"CIVIL_ENGINEERING_CONSTRUCTION\"] = \"civil_engineering_construction\";\n        Subject[\"CORPORATE_SOCIAL_RESPONSIBILITY\"] = \"corporate_social_responsibility\";\n        Subject[\"COSMETICS\"] = \"cosmetics\";\n        Subject[\"CULINARY\"] = \"culinary\";\n        Subject[\"ELECTRONICS_ELECTRICAL_ENGINEERING\"] = \"electronics_electrical_engineering\";\n        Subject[\"ENERGY_POWER_GENERATION_OIL_GAS\"] = \"energy_power_generation_oil_gas\";\n        Subject[\"ENVIRONMENT\"] = \"environment\";\n        Subject[\"FASHION\"] = \"fashion\";\n        Subject[\"GAMES_VISEOGAMES_CASINO\"] = \"games_viseogames_casino\";\n        Subject[\"GENERAL_BUSINESS_COMMERCE\"] = \"general_business_commerce\";\n        Subject[\"HISTORY_ARCHAEOLOGY\"] = \"history_archaeology\";\n        Subject[\"INFORMATION_TECHNOLOGY\"] = \"information_technology\";\n        Subject[\"INSURANCE\"] = \"insurance\";\n        Subject[\"INTERNET_E_COMMERCE\"] = \"internet_e-commerce\";\n        Subject[\"LEGAL_DOCUMENTS_CONTRACTS\"] = \"legal_documents_contracts\";\n        Subject[\"LITERARY_TRANSLATIONS\"] = \"literary_translations\";\n        Subject[\"MARKETING_ADVERTISING_MATERIAL_PUBLIC_RELATIONS\"] = \"marketing_advertising_material_public_relations\";\n        Subject[\"MATEMATICS_AND_PHYSICS\"] = \"matematics_and_physics\";\n        Subject[\"MECHANICAL_MANUFACTURING\"] = \"mechanical_manufacturing\";\n        Subject[\"MEDIA_JOURNALISM_PUBLISHING\"] = \"media_journalism_publishing\";\n        Subject[\"MEDICAL_PHARMACEUTICAL\"] = \"medical_pharmaceutical\";\n        Subject[\"MUSIC\"] = \"music\";\n        Subject[\"PRIVATE_CORRESPONDENCE_LETTERS\"] = \"private_correspondence_letters\";\n        Subject[\"RELIGION\"] = \"religion\";\n        Subject[\"SCIENCE\"] = \"science\";\n        Subject[\"SHIPPING_SAILING_MARITIME\"] = \"shipping_sailing_maritime\";\n        Subject[\"SOCIAL_SCIENCE\"] = \"social_science\";\n        Subject[\"TELECOMMUNICATIONS\"] = \"telecommunications\";\n        Subject[\"TRAVEL_TOURISM\"] = \"travel_tourism\";\n    })(Subject = TasksModel.Subject || (TasksModel.Subject = {}));\n})(TasksModel = exports.TasksModel || (exports.TasksModel = {}));\n"]},"metadata":{},"sourceType":"script"}