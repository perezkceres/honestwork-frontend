{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/Home/components/CardValue.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useCountUp } from 'react-countup';\nimport { Text } from '@pancakeswap-libs/uikit';\n\nconst CardValue = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  prefix\n}) => {\n  _s();\n\n  const {\n    countUp,\n    update\n  } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals: // eslint-disable-next-line no-nested-ternary\n    decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3\n  });\n  const updateValue = useRef(update);\n  useEffect(() => {\n    updateValue.current(value);\n  }, [value, updateValue]);\n  return /*#__PURE__*/_jsxDEV(Text, {\n    bold: true,\n    fontSize: fontSize,\n    children: [prefix, countUp]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardValue, \"PzfhtUu9EKDAhST1Og4mXJ0Px3g=\", false, function () {\n  return [useCountUp];\n});\n\n_c = CardValue;\nexport default CardValue;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardValue\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/Home/components/CardValue.tsx"],"names":["React","useEffect","useRef","useCountUp","Text","CardValue","value","decimals","fontSize","prefix","countUp","update","start","end","duration","separator","undefined","updateValue","current"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,IAAT,QAAqB,yBAArB;;AASA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,QAAQ,GAAG,MAA9B;AAAsCC,EAAAA;AAAtC,CAAD,KAAoD;AAAA;;AAC9F,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsBR,UAAU,CAAC;AACrCS,IAAAA,KAAK,EAAE,CAD8B;AAErCC,IAAAA,GAAG,EAAEP,KAFgC;AAGrCQ,IAAAA,QAAQ,EAAE,CAH2B;AAIrCC,IAAAA,SAAS,EAAE,GAJ0B;AAKrCR,IAAAA,QAAQ,EACN;AACAA,IAAAA,QAAQ,KAAKS,SAAb,GAAyBT,QAAzB,GAAoCD,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgBA,KAAK,GAAG,GAAR,GAAc,CAAd,GAAkB;AAPnC,GAAD,CAAtC;AAUA,QAAMW,WAAW,GAAGf,MAAM,CAACS,MAAD,CAA1B;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,WAAW,CAACC,OAAZ,CAAoBZ,KAApB;AACD,GAFQ,EAEN,CAACA,KAAD,EAAQW,WAAR,CAFM,CAAT;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,QAAQ,EAAET,QAArB;AAAA,eACGC,MADH,EACWC,OADX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBD;;GAAML,S;UACwBF,U;;;KADxBE,S;AAwBN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  prefix?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold fontSize={fontSize}>\r\n      {prefix}{countUp}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n"]},"metadata":{},"sourceType":"module"}