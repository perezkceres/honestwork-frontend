{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/KingOfElephants/components/ActualKing.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit';\nimport { useForest } from 'hooks/useContract';\nimport { claimForest } from 'utils/callHelpers';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nconst StyledCard = styled(Card)`\n  background-image: url(/images/egg/last_king2.gif);\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n_c = StyledCard;\n\nconst ActualKing = ({\n  lastBidder,\n  hasWinner\n}) => {\n  _s();\n\n  const {\n    account\n  } = useWallet();\n  const forestContract = useForest();\n  const [isClaiming, setIsClaiming] = useState(false);\n\n  const onClaim = async () => {\n    setIsClaiming(true);\n\n    try {\n      await claimForest(forestContract, account);\n    } catch (e) {\n      console.error(e);\n    }\n\n    setIsClaiming(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        mt: \"10px\",\n        mb: \"40px\",\n        color: \"white\",\n        children: \"Current King\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), lastBidder && /*#__PURE__*/_jsxDEV(Text, {\n        ml: \"30px\",\n        color: \"white\",\n        fontSize: \"24px\",\n        children: [\"Last bidder: \", lastBidder.slice(0, 8), \"...\", lastBidder.slice(-8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        marginTop: \"20px\",\n        children: hasWinner && account && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClaim,\n          disabled: isClaiming,\n          mt: \"20px\",\n          fullWidth: true,\n          children: \"Restart Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActualKing, \"0+dKvt0oLqtJSmDqvk6JZ1bvPjc=\", false, function () {\n  return [useWallet, useForest];\n});\n\n_c2 = ActualKing;\nexport default ActualKing;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"ActualKing\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/KingOfElephants/components/ActualKing.tsx"],"names":["React","useState","styled","Button","Card","CardBody","Heading","Text","useForest","claimForest","useWallet","StyledCard","ActualKing","lastBidder","hasWinner","account","forestContract","isClaiming","setIsClaiming","onClaim","e","console","error","slice"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,OAAjC,EAA0CC,IAA1C,QAAsD,yBAAtD;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AAEA,MAAMC,UAAU,GAAGT,MAAM,CAACE,IAAD,CAAO;AAChC;AACA;AACA;AACA;AACA,CALA;KAAMO,U;;AAMN,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA+B;AAAA;;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAcL,SAAS,EAA7B;AACA,QAAMM,cAAc,GAAGR,SAAS,EAAhC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,KAAD,CAA5C;;AACA,QAAMkB,OAAO,GAAG,YAAY;AAC1BD,IAAAA,aAAa,CAAC,IAAD,CAAb;;AACA,QAAI;AACF,YAAMT,WAAW,CAACO,cAAD,EAAiBD,OAAjB,CAAjB;AACD,KAFD,CAEE,OAAOK,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;;AACDF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GARD;;AAUA,sBACE,QAAC,UAAD;AAAA,2BACE,QAAC,QAAD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,IAAd;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,EAAE,EAAC,MAAhC;AAAuC,QAAA,KAAK,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGL,UAAU,iBACT,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAgB,QAAA,KAAK,EAAC,OAAtB;AAA8B,QAAA,QAAQ,EAAC,MAAvC;AAAA,oCACgBA,UAAU,CAACU,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CADhB,SAC2CV,UAAU,CAACU,KAAX,CAAiB,CAAC,CAAlB,CAD3C;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,kBACGT,SAAS,IAAIC,OAAb,iBACC,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEI,OAAjB;AAA0B,UAAA,QAAQ,EAAEF,UAApC;AAAgD,UAAA,EAAE,EAAC,MAAnD;AAA0D,UAAA,SAAS,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAnCD;;GAAML,U;UACgBF,S,EACGF,S;;;MAFnBI,U;AAqCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport { useForest } from 'hooks/useContract'\nimport { claimForest } from 'utils/callHelpers'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\nconst StyledCard = styled(Card)`\n  background-image: url(/images/egg/last_king2.gif);\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n`\nconst ActualKing = ({ lastBidder, hasWinner }) => {\n  const { account } = useWallet()\n  const forestContract = useForest()\n  const [isClaiming, setIsClaiming] = useState(false)\n  const onClaim = async () => {\n    setIsClaiming(true)\n    try {\n      await claimForest(forestContract, account)\n    } catch (e) {\n      console.error(e)\n    }\n    setIsClaiming(false)\n  }\n\n  return (\n    <StyledCard>\n      <CardBody>\n        <Heading size=\"xl\" mt=\"10px\" mb=\"40px\" color=\"white\">\n          Current King\n        </Heading>\n        {lastBidder && (\n          <Text ml=\"30px\" color=\"white\" fontSize=\"24px\">\n            Last bidder: {lastBidder.slice(0, 8)}...{lastBidder.slice(-8)}\n          </Text>\n        )}\n        <Text marginTop=\"20px\">\n          {hasWinner && account && (\n            <Button onClick={onClaim} disabled={isClaiming} mt=\"20px\" fullWidth>\n              Restart Game\n            </Button>\n          )}\n        </Text>\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default ActualKing"]},"metadata":{},"sourceType":"module"}