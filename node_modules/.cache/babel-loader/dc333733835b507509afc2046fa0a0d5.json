{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  color: \",\";\\n  display: grid;\\n  grid-gap: 32px;\\n  grid-template-columns: 1fr;\\n  margin-left: auto;\\n  margin-right: auto;\\n  max-width: 250px;\\n  ul {\\n    margin: 0;\\n    padding: 0;\\n    list-style-type: none;\\n    font-size: 16px;\\n    li {\\n      margin-bottom: 4px;\\n    }\\n  }\\n  img {\\n    height: auto;\\n    max-width: 100%;\\n  }\\n  @media (min-width: 576px) {\\n    grid-template-columns: 1fr 1fr;\\n    margin: 0;\\n    max-width: none;\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import{Route,useRouteMatch}from'react-router-dom';import BigNumber from'bignumber.js';import styled from'styled-components';import{useWallet}from'@binance-chain/bsc-use-wallet';import{Heading}from'@pancakeswap-libs/uikit';import{BLOCKS_PER_YEAR}from'config';import orderBy from'lodash/orderBy';import partition from'lodash/partition';import useI18n from'hooks/useI18n';import useBlock from'hooks/useBlock';import{getBalanceNumber}from'utils/formatBalance';import{useFarms,usePriceBnbBusd,usePools}from'state/hooks';import{QuoteToken}from'config/constants/types';import FlexLayout from'components/layout/Flex';import Page from'components/layout/Page';import PoolCard from'./components/PoolCard';import PoolTabButtons from'./components/PoolTabButtons';import Divider from'./components/Divider';import Coming from'./components/Coming';var Farm=function Farm(){var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;var TranslateString=useI18n();var _useWallet=useWallet(),account=_useWallet.account;var farms=useFarms();var pools=usePools(account);var bnbPriceUSD=usePriceBnbBusd();var block=useBlock();var priceToBnb=function priceToBnb(tokenName,tokenPrice,quoteToken){var tokenPriceBN=new BigNumber(tokenPrice);if(tokenName==='BNB'||tokenName==='WBNB'){return new BigNumber(1);}if(tokenPrice&&quoteToken===QuoteToken.BUSD){return tokenPriceBN.div(bnbPriceUSD);}return tokenPriceBN;};var poolsWithApy=pools.map(function(pool){var rewardTokenFarm=farms.find(function(f){return f.tokenSymbol===pool.tokenName;});var stakingTokenFarm=farms.find(function(s){return s.tokenSymbol===pool.stakingTokenName;});// /!\\ Assume that the farm quote price is BNB\nvar stakingTokenPriceInBNB=priceToBnb(QuoteToken.SALSA,stakingTokenFarm===null||stakingTokenFarm===void 0?void 0:stakingTokenFarm.tokenPriceVsQuote,stakingTokenFarm===null||stakingTokenFarm===void 0?void 0:stakingTokenFarm.quoteTokenSymbol);var rewardTokenPriceInBNB=priceToBnb(pool.tokenName,rewardTokenFarm===null||rewardTokenFarm===void 0?void 0:rewardTokenFarm.tokenPriceVsQuote,rewardTokenFarm===null||rewardTokenFarm===void 0?void 0:rewardTokenFarm.quoteTokenSymbol);// console.log('pool.tokenName', pool.tokenName)\n// console.log('rewardTokenPriceInBNB', rewardTokenPriceInBNB.toString())\n// console.log('stakingTokenPriceInBNB', stakingTokenPriceInBNB.toString())\nvar totalRewardPricePerYear=rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR);var totalStakingTokenInPool=new BigNumber(0);totalStakingTokenInPool=stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked));// tokens per block * price of CAKE * blocks_per_year / ( tokens in pool x salt price) * 100\nvar apy=totalRewardPricePerYear.div(totalStakingTokenInPool).times(100);return _objectSpread(_objectSpread({},pool),{},{isFinished:pool.isFinished||block>pool.endBlock,apy:apy});});var _partition=partition(poolsWithApy,function(pool){return pool.isFinished;}),_partition2=_slicedToArray(_partition,2),finishedPools=_partition2[0],openPools=_partition2[1];return/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsxs(Hero,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Heading,{as:\"h1\",size:\"xxl\",mb:\"16px\",children:\"Jungle Pools\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Stake SALSA to earn new tokens\"}),/*#__PURE__*/_jsx(\"li\",{children:\"You can unstake at any time.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Rewards are calculated per block\"})]})]}),/*#__PURE__*/_jsx(\"img\",{src:\"/images/syrup.png\",alt:\"SYRUP POOL icon\",width:410,height:191})]}),/*#__PURE__*/_jsx(PoolTabButtons,{}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(FlexLayout,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path),children:/*#__PURE__*/_jsxs(_Fragment,{children:[orderBy(openPools,['sortOrder']).map(function(pool){return/*#__PURE__*/_jsx(PoolCard,{pool:pool},pool.sousId);}),/*#__PURE__*/_jsx(Coming,{})]})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(path,\"/history\"),children:orderBy(finishedPools,['sortOrder']).map(function(pool){return/*#__PURE__*/_jsx(PoolCard,{pool:pool},pool.sousId);})})]})]});};var Hero=styled.div(_templateObject(),function(_ref){var theme=_ref.theme;return theme.colors.primary;});export default Farm;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/Pools/Syrup.tsx"],"names":["React","Route","useRouteMatch","BigNumber","styled","useWallet","Heading","BLOCKS_PER_YEAR","orderBy","partition","useI18n","useBlock","getBalanceNumber","useFarms","usePriceBnbBusd","usePools","QuoteToken","FlexLayout","Page","PoolCard","PoolTabButtons","Divider","Coming","Farm","path","TranslateString","account","farms","pools","bnbPriceUSD","block","priceToBnb","tokenName","tokenPrice","quoteToken","tokenPriceBN","BUSD","div","poolsWithApy","map","pool","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","s","stakingTokenName","stakingTokenPriceInBNB","SALSA","tokenPriceVsQuote","quoteTokenSymbol","rewardTokenPriceInBNB","totalRewardPricePerYear","times","tokenPerBlock","totalStakingTokenInPool","totalStaked","apy","isFinished","endBlock","finishedPools","openPools","sousId","Hero","theme","colors","primary"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport {\n  useFarms,\n  usePriceBnbBusd,\n  usePools,\n} from 'state/hooks'\nimport { QuoteToken } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\nimport Coming from './components/Coming'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB' || tokenName === 'WBNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = priceToBnb(\n      QuoteToken.SALSA,\n      stakingTokenFarm?.tokenPriceVsQuote,\n      stakingTokenFarm?.quoteTokenSymbol,\n    )\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n    // console.log('pool.tokenName', pool.tokenName)\n    // console.log('rewardTokenPriceInBNB', rewardTokenPriceInBNB.toString())\n    // console.log('stakingTokenPriceInBNB', stakingTokenPriceInBNB.toString())\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    let totalStakingTokenInPool = new BigNumber(0)\n    totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n\n    // tokens per block * price of CAKE * blocks_per_year / ( tokens in pool x salt price) * 100\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            Jungle Pools\n          </Heading>\n          <ul>\n            <li>Stake SALSA to earn new tokens</li>\n            <li>You can unstake at any time.</li>\n            <li>Rewards are calculated per block</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"]},"metadata":{},"sourceType":"module"}