{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/KingOfElephants/components/LastEventsCard.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useForest } from 'hooks/useContract';\nimport useRefresh from 'hooks/useRefresh';\nimport usePastEvents from 'hooks/usePastEvents';\nimport styled from 'styled-components';\nimport { Card, CardBody, Flex, Heading, Link, Text } from '@pancakeswap-libs/uikit';\nimport { getFullDisplayBalance } from 'utils/formatBalance';\nimport BigNumber from 'bignumber.js';\nimport CardValue from 'views/Home/components/CardValue';\nconst StyledCard = styled(Card)``;\n_c = StyledCard;\nconst QuesionHelperPositioner = styled.div`\n  margin-top: 10px;\n  margin-right: 10px;\n  float: right;\n`;\nconst Events = styled.div`\n  max-height: 300px;\n  overflow-y: auto;\n`;\n_c2 = Events;\n\nconst formatWins = wins => {\n  return wins.map(win => {\n    return { ...win,\n      type: 'WIN',\n      author: win.returnValues.author,\n      amount: win.returnValues.amount\n    };\n  });\n};\n\nconst formatBids = bids => {\n  return bids.map(bid => {\n    return { ...bid,\n      type: 'BID',\n      author: bid.returnValues.author,\n      amount: bid.returnValues.amount\n    };\n  });\n}; // const formatCollapses = (collapses) => {\n//   return collapses.map((collapse) => {\n//     return {\n//       ...collapse,\n//       type: 'COLLAPSE',\n//       author: '0x000000000000000000000000000000000000dEaD',\n//       amount: collapse.returnValues.amount,\n//     }\n//   })\n// }\n\n\nconst useLastEvents = () => {\n  _s();\n\n  const forestContract = useForest();\n  const [data, setData] = useState([]);\n  const {\n    fastRefresh\n  } = useRefresh();\n  const {\n    loading: loadingWins,\n    fetch: fetchWins\n  } = usePastEvents(forestContract, 'OnWin');\n  const {\n    loading: loadingBids,\n    fetch: fetchBids\n  } = usePastEvents(forestContract, 'OnBid'); // Taking the last 40 events between wins and bids\n\n  const fetchEvents = useCallback(async () => {\n    const lastEvents = await Promise.all([fetchWins(), fetchBids()]).then(([wins, bids]) => {\n      const events = [...formatWins(wins), ...formatBids(bids)].sort((a, b) => b.blockNumber - a.blockNumber);\n      return events.slice(0, 40);\n    }).catch(e => {\n      console.info(e);\n      return [];\n    });\n    setData(lastEvents);\n  }, [fetchWins, fetchBids]);\n  const loading = loadingWins || loadingBids;\n  useEffect(() => {\n    fetchEvents();\n  }, [fastRefresh, fetchEvents]);\n  return {\n    loading,\n    data\n  };\n};\n\n_s(useLastEvents, \"50bicrRX7Wy/+PKQAHQqm3Ne68c=\", false, function () {\n  return [useForest, useRefresh, usePastEvents, usePastEvents];\n});\n\nconst LastEventsCard = () => {\n  _s2();\n\n  const {\n    data\n  } = useLastEvents();\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        mb: \"24px\",\n        children: \"Previous events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), data.length ? /*#__PURE__*/_jsxDEV(Events, {\n        children: data.map(event => {\n          return /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            mb: \"10px\",\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                marginRight: \"20px\",\n                href: `https://explorer-mainnet.maticvigil.com//tx/${event.transactionHash}`,\n                external: true,\n                children: [\"Tx: \", event.transactionHash.slice(0, 5), \"...\", event.transactionHash.slice(-5)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: event.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardValue, {\n              value: parseFloat(getFullDisplayBalance(new BigNumber(event.amount))),\n              decimals: 4,\n              fontSize: \"16px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, event.transactionHash, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 24\n      }, this) : 'There\\'s no recent events']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(LastEventsCard, \"LtJp2LubPXztSNH9ZZJ7P3NQrpg=\", false, function () {\n  return [useLastEvents];\n});\n\n_c3 = LastEventsCard;\nexport default LastEventsCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"Events\");\n$RefreshReg$(_c3, \"LastEventsCard\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/KingOfElephants/components/LastEventsCard.tsx"],"names":["React","useCallback","useEffect","useState","useForest","useRefresh","usePastEvents","styled","Card","CardBody","Flex","Heading","Link","Text","getFullDisplayBalance","BigNumber","CardValue","StyledCard","QuesionHelperPositioner","div","Events","formatWins","wins","map","win","type","author","returnValues","amount","formatBids","bids","bid","useLastEvents","forestContract","data","setData","fastRefresh","loading","loadingWins","fetch","fetchWins","loadingBids","fetchBids","fetchEvents","lastEvents","Promise","all","then","events","sort","a","b","blockNumber","slice","catch","e","console","info","LastEventsCard","length","event","transactionHash","parseFloat"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwCC,IAAxC,EAA8CC,IAA9C,QAA0D,yBAA1D;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AAEA,MAAMC,UAAU,GAAGV,MAAM,CAACC,IAAD,CAAO,EAAhC;KAAMS,U;AAEN,MAAMC,uBAAuB,GAAGX,MAAM,CAACY,GAAI;AAC3C;AACA;AACA;AACA,CAJA;AAMA,MAAMC,MAAM,GAAGb,MAAM,CAACY,GAAI;AAC1B;AACA;AACA,CAHA;MAAMC,M;;AAKN,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,SAAOA,IAAI,CAACC,GAAL,CAAUC,GAAD,IAAS;AACvB,WAAO,EACL,GAAGA,GADE;AAELC,MAAAA,IAAI,EAAE,KAFD;AAGLC,MAAAA,MAAM,EAAEF,GAAG,CAACG,YAAJ,CAAiBD,MAHpB;AAILE,MAAAA,MAAM,EAAEJ,GAAG,CAACG,YAAJ,CAAiBC;AAJpB,KAAP;AAMD,GAPM,CAAP;AAQD,CATD;;AAWA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,SAAOA,IAAI,CAACP,GAAL,CAAUQ,GAAD,IAAS;AACvB,WAAO,EACL,GAAGA,GADE;AAELN,MAAAA,IAAI,EAAE,KAFD;AAGLC,MAAAA,MAAM,EAAEK,GAAG,CAACJ,YAAJ,CAAiBD,MAHpB;AAILE,MAAAA,MAAM,EAAEG,GAAG,CAACJ,YAAJ,CAAiBC;AAJpB,KAAP;AAMD,GAPM,CAAP;AAQD,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMI,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,cAAc,GAAG7B,SAAS,EAAhC;AACA,QAAM,CAAC8B,IAAD,EAAOC,OAAP,IAAkBhC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEiC,IAAAA;AAAF,MAAkB/B,UAAU,EAAlC;AACA,QAAM;AAAEgC,IAAAA,OAAO,EAAEC,WAAX;AAAwBC,IAAAA,KAAK,EAAEC;AAA/B,MAA6ClC,aAAa,CAAC2B,cAAD,EAAiB,OAAjB,CAAhE;AACA,QAAM;AAAEI,IAAAA,OAAO,EAAEI,WAAX;AAAwBF,IAAAA,KAAK,EAAEG;AAA/B,MAA6CpC,aAAa,CAAC2B,cAAD,EAAiB,OAAjB,CAAhE,CAL0B,CAO1B;;AACA,QAAMU,WAAW,GAAG1C,WAAW,CAAC,YAAY;AAC1C,UAAM2C,UAAU,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,CAACN,SAAS,EAAV,EAAcE,SAAS,EAAvB,CAAZ,EACtBK,IADsB,CACjB,CAAC,CAACzB,IAAD,EAAOQ,IAAP,CAAD,KAAkB;AACtB,YAAMkB,MAAM,GAAG,CAAC,GAAG3B,UAAU,CAACC,IAAD,CAAd,EAAsB,GAAGO,UAAU,CAACC,IAAD,CAAnC,EAA2CmB,IAA3C,CAAgD,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,WAAF,GAAgBF,CAAC,CAACE,WAA5E,CAAf;AACA,aAAOJ,MAAM,CAACK,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAP;AACD,KAJsB,EAKtBC,KALsB,CAKfC,CAAD,IAAO;AAEZC,MAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb;AACA,aAAO,EAAP;AACD,KATsB,CAAzB;AAWApB,IAAAA,OAAO,CAACS,UAAD,CAAP;AACD,GAb8B,EAa5B,CAACJ,SAAD,EAAYE,SAAZ,CAb4B,CAA/B;AAeA,QAAML,OAAO,GAAGC,WAAW,IAAIG,WAA/B;AACAvC,EAAAA,SAAS,CAAC,MAAM;AACdyC,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACP,WAAD,EAAcO,WAAd,CAFM,CAAT;AAIA,SAAO;AACLN,IAAAA,OADK;AAELH,IAAAA;AAFK,GAAP;AAKD,CAjCD;;GAAMF,a;UACmB5B,S,EAECC,U,EAC2BC,a,EACAA,a;;;AA8BrD,MAAMoD,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAExB,IAAAA;AAAF,MAAWF,aAAa,EAA9B;AACA,sBACE,QAAC,UAAD;AAAA,2BACE,QAAC,QAAD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,IAAd;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGE,IAAI,CAACyB,MAAL,gBAAc,QAAC,MAAD;AAAA,kBACZzB,IAAI,CAACX,GAAL,CAAUqC,KAAD,IAAW;AACnB,8BACE,QAAC,IAAD;AAAkC,YAAA,UAAU,EAAC,QAA7C;AAAsD,YAAA,cAAc,EAAC,eAArE;AAAqF,YAAA,EAAE,EAAC,MAAxF;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,UAAU,EAAC,QAAjB;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,WAAW,EAAC,MAAlB;AAAyB,gBAAA,IAAI,EAAG,+CAA8CA,KAAK,CAACC,eAAgB,EAApG;AAAuG,gBAAA,QAAQ,MAA/G;AAAA,mCACOD,KAAK,CAACC,eAAN,CAAsBR,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B,CADP,SAC6CO,KAAK,CAACC,eAAN,CAAsBR,KAAtB,CAA4B,CAAC,CAA7B,CAD7C;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,IAAD;AAAA,0BAAOO,KAAK,CAACnC;AAAb;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,SAAD;AACE,cAAA,KAAK,EAAEqC,UAAU,CAAChD,qBAAqB,CAAC,IAAIC,SAAJ,CAAc6C,KAAK,CAAChC,MAApB,CAAD,CAAtB,CADnB;AAEE,cAAA,QAAQ,EAAE,CAFZ;AAGE,cAAA,QAAQ,EAAC;AAHX;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA,aAAWgC,KAAK,CAACC,eAAjB;AAAA;AAAA;AAAA;AAAA,kBADF;AAeD,SAhBA;AADY;AAAA;AAAA;AAAA;AAAA,cAAd,GAkBW,2BAtBd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA/BD;;IAAMH,c;UACa1B,a;;;MADb0B,c;AAiCN,eAAeA,cAAf","sourcesContent":["\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { useForest } from 'hooks/useContract'\nimport useRefresh from 'hooks/useRefresh'\nimport usePastEvents from 'hooks/usePastEvents'\nimport styled from 'styled-components'\nimport { Card, CardBody, Flex, Heading, Link, Text } from '@pancakeswap-libs/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport BigNumber from 'bignumber.js'\nimport CardValue from 'views/Home/components/CardValue'\n\nconst StyledCard = styled(Card)``\n\nconst QuesionHelperPositioner = styled.div`\n  margin-top: 10px;\n  margin-right: 10px;\n  float: right;\n`\n\nconst Events = styled.div`\n  max-height: 300px;\n  overflow-y: auto;\n`\n\nconst formatWins = (wins) => {\n  return wins.map((win) => {\n    return {\n      ...win,\n      type: 'WIN',\n      author: win.returnValues.author,\n      amount: win.returnValues.amount,\n    }\n  })\n}\n\nconst formatBids = (bids) => {\n  return bids.map((bid) => {\n    return {\n      ...bid,\n      type: 'BID',\n      author: bid.returnValues.author,\n      amount: bid.returnValues.amount,\n    }\n  })\n}\n\n// const formatCollapses = (collapses) => {\n//   return collapses.map((collapse) => {\n//     return {\n//       ...collapse,\n//       type: 'COLLAPSE',\n//       author: '0x000000000000000000000000000000000000dEaD',\n//       amount: collapse.returnValues.amount,\n//     }\n//   })\n// }\n\nconst useLastEvents = () => {\n  const forestContract = useForest()\n  const [data, setData] = useState([])\n  const { fastRefresh } = useRefresh()\n  const { loading: loadingWins, fetch: fetchWins } = usePastEvents(forestContract, 'OnWin')\n  const { loading: loadingBids, fetch: fetchBids } = usePastEvents(forestContract, 'OnBid')\n\n  // Taking the last 40 events between wins and bids\n  const fetchEvents = useCallback(async () => {\n    const lastEvents = await Promise.all([fetchWins(), fetchBids()])\n      .then(([wins, bids]) => {\n        const events = [...formatWins(wins), ...formatBids(bids)].sort((a, b) => b.blockNumber - a.blockNumber)\n        return events.slice(0, 40)\n      })\n      .catch((e) => {\n\n        console.info(e)\n        return []\n      })\n\n    setData(lastEvents)\n  }, [fetchWins, fetchBids])\n\n  const loading = loadingWins || loadingBids\n  useEffect(() => {\n    fetchEvents()\n  }, [fastRefresh, fetchEvents])\n  \n  return {\n    loading,\n    data,\n  }\n\n}\n\nconst LastEventsCard = () => {\n  const { data } = useLastEvents()\n  return (\n    <StyledCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          Previous events\n        </Heading>\n        {data.length ? <Events>\n          {data.map((event) => {\n            return (\n              <Flex key={event.transactionHash} alignItems=\"center\" justifyContent=\"space-between\" mb=\"10px\">\n                <Flex alignItems=\"center\">\n                  <Link marginRight=\"20px\" href={`https://explorer-mainnet.maticvigil.com//tx/${event.transactionHash}`} external>\n                    Tx: {event.transactionHash.slice(0, 5)}...{event.transactionHash.slice(-5)}\n                  </Link>\n                  <Text>{event.type}</Text>\n                </Flex>\n                <CardValue\n                  value={parseFloat(getFullDisplayBalance(new BigNumber(event.amount)))}\n                  decimals={4}\n                  fontSize=\"16px\"\n                />\n              </Flex>\n            )\n          })}\n        </Events> : 'There\\'s no recent events'}\n        \n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default LastEventsCard\n"]},"metadata":{},"sourceType":"module"}