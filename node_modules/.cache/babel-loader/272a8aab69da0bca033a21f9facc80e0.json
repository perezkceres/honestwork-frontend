{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"../core\");\n\nvar SourceFiles = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(SourceFiles, _core_1$CrowdinApi);\n\n  var _super = _createSuper(SourceFiles);\n\n  function SourceFiles() {\n    _classCallCheck(this, SourceFiles);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SourceFiles, [{\n    key: \"listProjectBranches\",\n\n    /**\n     * @param projectId project identifier\n     * @param name filter branch by name\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    value: function listProjectBranches(projectId, name, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/branches\");\n      url = this.addQueryParam(url, 'name', name);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"createBranch\",\n    value: function createBranch(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/branches\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     */\n\n  }, {\n    key: \"getBranch\",\n    value: function getBranch(projectId, branchId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/branches/\").concat(branchId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     */\n\n  }, {\n    key: \"deleteBranch\",\n    value: function deleteBranch(projectId, branchId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/branches/\").concat(branchId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"editBranch\",\n    value: function editBranch(projectId, branchId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/branches/\").concat(branchId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId filter directories by branchId\n     * @param directoryId filter directories by directoryId\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n\n  }, {\n    key: \"listProjectDirectories\",\n    value: function listProjectDirectories(projectId, branchId, directoryId, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/directories\");\n      url = this.addQueryParam(url, 'branchId', branchId);\n      url = this.addQueryParam(url, 'directoryId', directoryId);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"createDirectory\",\n    value: function createDirectory(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/directories\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     */\n\n  }, {\n    key: \"getDirectory\",\n    value: function getDirectory(projectId, directoryId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/directories/\").concat(directoryId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     */\n\n  }, {\n    key: \"deleteDirectory\",\n    value: function deleteDirectory(projectId, directoryId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/directories/\").concat(directoryId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"editDirectory\",\n    value: function editDirectory(projectId, directoryId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/directories/\").concat(directoryId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n  }, {\n    key: \"listProjectFiles\",\n    value: function listProjectFiles(projectId, branchIdOrRequest, directoryId, limit, offset, recursion) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files\");\n      var request;\n\n      if (branchIdOrRequest && typeof branchIdOrRequest === 'object') {\n        request = branchIdOrRequest;\n      } else {\n        request = {\n          branchId: branchIdOrRequest,\n          directoryId: directoryId,\n          limit: limit,\n          offset: offset,\n          recursion: recursion\n        };\n      }\n\n      url = this.addQueryParam(url, 'branchId', request.branchId);\n      url = this.addQueryParam(url, 'directoryId', request.directoryId);\n      url = this.addQueryParam(url, 'recursion', request.recursion);\n      return this.getList(url, request.limit, request.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"createFile\",\n    value: function createFile(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     */\n\n  }, {\n    key: \"getFile\",\n    value: function getFile(projectId, fileId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"updateOrRestoreFile\",\n    value: function updateOrRestoreFile(projectId, fileId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId);\n      return this.put(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     */\n\n  }, {\n    key: \"deleteFile\",\n    value: function deleteFile(projectId, fileId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"editFile\",\n    value: function editFile(projectId, fileId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     */\n\n  }, {\n    key: \"downloadFile\",\n    value: function downloadFile(projectId, fileId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId, \"/download\");\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n\n  }, {\n    key: \"listFileRevisions\",\n    value: function listFileRevisions(projectId, fileId, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId, \"/revisions\");\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param revisionId revision identifier\n     */\n\n  }, {\n    key: \"getFileRevision\",\n    value: function getFileRevision(projectId, fileId, revisionId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId, \"/revisions/\").concat(revisionId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId filter builds by branchId\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n\n  }, {\n    key: \"listReviewedSourceFilesBuild\",\n    value: function listReviewedSourceFilesBuild(projectId, branchId, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/strings/reviewed-builds\");\n      url = this.addQueryParam(url, 'branchId', branchId);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"buildReviewedSourceFiles\",\n    value: function buildReviewedSourceFiles(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/strings/reviewed-builds\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n\n  }, {\n    key: \"checkReviewedSourceFilesBuildStatus\",\n    value: function checkReviewedSourceFilesBuildStatus(projectId, buildId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/strings/reviewed-builds/\").concat(buildId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n\n  }, {\n    key: \"downloadReviewedSourceFiles\",\n    value: function downloadReviewedSourceFiles(projectId, buildId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/strings/reviewed-builds/\").concat(buildId, \"/download\");\n      return this.get(url, this.defaultConfig());\n    }\n  }]);\n\n  return SourceFiles;\n}(core_1.CrowdinApi);\n\nexports.SourceFiles = SourceFiles;\nvar SourceFilesModel;\n\n(function (SourceFilesModel) {\n  var Priority;\n\n  (function (Priority) {\n    Priority[\"LOW\"] = \"low\";\n    Priority[\"NORMAL\"] = \"normal\";\n    Priority[\"HIGH\"] = \"high\";\n  })(Priority = SourceFilesModel.Priority || (SourceFilesModel.Priority = {}));\n\n  var FileType;\n\n  (function (FileType) {\n    FileType[\"AUTO\"] = \"auto\";\n    FileType[\"ANDROID\"] = \"android\";\n    FileType[\"MACOSX\"] = \"macosx\";\n    FileType[\"RESX\"] = \"resx\";\n    FileType[\"PROPERTIES\"] = \"properties\";\n    FileType[\"GETTEXT\"] = \"gettext\";\n    FileType[\"YAML\"] = \"yaml\";\n    FileType[\"PHP\"] = \"php\";\n    FileType[\"JSON\"] = \"json\";\n    FileType[\"XML\"] = \"xml\";\n    FileType[\"INI\"] = \"ini\";\n    FileType[\"RC\"] = \"rc\";\n    FileType[\"RESW\"] = \"resw\";\n    FileType[\"RESJSON\"] = \"resjson\";\n    FileType[\"QTTS\"] = \"qtts\";\n    FileType[\"JOOMLA\"] = \"joomla\";\n    FileType[\"CHROME\"] = \"chrome\";\n    FileType[\"DTD\"] = \"dtd\";\n    FileType[\"DKLANG\"] = \"dklang\";\n    FileType[\"FLEX\"] = \"flex\";\n    FileType[\"NSH\"] = \"nsh\";\n    FileType[\"WXL\"] = \"wxl\";\n    FileType[\"XLIFF\"] = \"xliff\";\n    FileType[\"HTML\"] = \"html\";\n    FileType[\"HAML\"] = \"haml\";\n    FileType[\"TXT\"] = \"txt\";\n    FileType[\"CSV\"] = \"csv\";\n    FileType[\"MD\"] = \"md\";\n    FileType[\"FLSNP\"] = \"flsnp\";\n    FileType[\"FM_HTML\"] = \"fm_html\";\n    FileType[\"FM_MD\"] = \"fm_md\";\n    FileType[\"MEDIAWIKI\"] = \"mediawiki\";\n    FileType[\"DOCX\"] = \"docx\";\n    FileType[\"SBV\"] = \"sbv\";\n    FileType[\"VTT\"] = \"vtt\";\n    FileType[\"SRT\"] = \"srt\";\n  })(FileType = SourceFilesModel.FileType || (SourceFilesModel.FileType = {}));\n\n  var EscapeQuotes;\n\n  (function (EscapeQuotes) {\n    EscapeQuotes[EscapeQuotes[\"ZERO\"] = 0] = \"ZERO\";\n    EscapeQuotes[EscapeQuotes[\"ONE\"] = 1] = \"ONE\";\n    EscapeQuotes[EscapeQuotes[\"TWO\"] = 2] = \"TWO\";\n    EscapeQuotes[EscapeQuotes[\"THREE\"] = 3] = \"THREE\";\n  })(EscapeQuotes = SourceFilesModel.EscapeQuotes || (SourceFilesModel.EscapeQuotes = {}));\n\n  var UpdateOption;\n\n  (function (UpdateOption) {\n    UpdateOption[\"CLEAR_TRANSLATIONS_AND_APPROVALS\"] = \"clear_translations_and_approvals\";\n    UpdateOption[\"KEEP_TRANSLATIONS\"] = \"keep_translations\";\n    UpdateOption[\"KEEP_TRANSLATIONS_AND_APPROVALS\"] = \"keep_translations_and_approvals\";\n  })(UpdateOption = SourceFilesModel.UpdateOption || (SourceFilesModel.UpdateOption = {}));\n})(SourceFilesModel = exports.SourceFilesModel || (exports.SourceFilesModel = {}));","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/@crowdin/crowdin-api-client/out/sourceFiles/index.js"],"names":["Object","defineProperty","exports","value","core_1","require","SourceFiles","projectId","name","limit","offset","url","addQueryParam","getList","request","post","defaultConfig","branchId","get","delete","patch","directoryId","branchIdOrRequest","recursion","fileId","put","revisionId","buildId","CrowdinApi","SourceFilesModel","Priority","FileType","EscapeQuotes","UpdateOption"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"../core\");\nclass SourceFiles extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param name filter branch by name\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listProjectBranches(projectId, name, limit, offset) {\n        let url = `${this.url}/projects/${projectId}/branches`;\n        url = this.addQueryParam(url, 'name', name);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    createBranch(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/branches`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     */\n    getBranch(projectId, branchId) {\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     */\n    deleteBranch(projectId, branchId) {\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     * @param request request body\n     */\n    editBranch(projectId, branchId, request) {\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId filter directories by branchId\n     * @param directoryId filter directories by directoryId\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listProjectDirectories(projectId, branchId, directoryId, limit, offset) {\n        let url = `${this.url}/projects/${projectId}/directories`;\n        url = this.addQueryParam(url, 'branchId', branchId);\n        url = this.addQueryParam(url, 'directoryId', directoryId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    createDirectory(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/directories`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     */\n    getDirectory(projectId, directoryId) {\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     */\n    deleteDirectory(projectId, directoryId) {\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     * @param request request body\n     */\n    editDirectory(projectId, directoryId, request) {\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    listProjectFiles(projectId, branchIdOrRequest, directoryId, limit, offset, recursion) {\n        let url = `${this.url}/projects/${projectId}/files`;\n        let request;\n        if (branchIdOrRequest && typeof branchIdOrRequest === 'object') {\n            request = branchIdOrRequest;\n        }\n        else {\n            request = { branchId: branchIdOrRequest, directoryId, limit, offset, recursion };\n        }\n        url = this.addQueryParam(url, 'branchId', request.branchId);\n        url = this.addQueryParam(url, 'directoryId', request.directoryId);\n        url = this.addQueryParam(url, 'recursion', request.recursion);\n        return this.getList(url, request.limit, request.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    createFile(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/files`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     */\n    getFile(projectId, fileId) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param request request body\n     */\n    updateOrRestoreFile(projectId, fileId, request) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n        return this.put(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     */\n    deleteFile(projectId, fileId) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param request request body\n     */\n    editFile(projectId, fileId, request) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     */\n    downloadFile(projectId, fileId) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listFileRevisions(projectId, fileId, limit, offset) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/revisions`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param revisionId revision identifier\n     */\n    getFileRevision(projectId, fileId, revisionId) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/revisions/${revisionId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId filter builds by branchId\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listReviewedSourceFilesBuild(projectId, branchId, limit, offset) {\n        let url = `${this.url}/projects/${projectId}/strings/reviewed-builds`;\n        url = this.addQueryParam(url, 'branchId', branchId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    buildReviewedSourceFiles(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/strings/reviewed-builds`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n    checkReviewedSourceFilesBuildStatus(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/strings/reviewed-builds/${buildId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n    downloadReviewedSourceFiles(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/strings/reviewed-builds/${buildId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n}\nexports.SourceFiles = SourceFiles;\nvar SourceFilesModel;\n(function (SourceFilesModel) {\n    let Priority;\n    (function (Priority) {\n        Priority[\"LOW\"] = \"low\";\n        Priority[\"NORMAL\"] = \"normal\";\n        Priority[\"HIGH\"] = \"high\";\n    })(Priority = SourceFilesModel.Priority || (SourceFilesModel.Priority = {}));\n    let FileType;\n    (function (FileType) {\n        FileType[\"AUTO\"] = \"auto\";\n        FileType[\"ANDROID\"] = \"android\";\n        FileType[\"MACOSX\"] = \"macosx\";\n        FileType[\"RESX\"] = \"resx\";\n        FileType[\"PROPERTIES\"] = \"properties\";\n        FileType[\"GETTEXT\"] = \"gettext\";\n        FileType[\"YAML\"] = \"yaml\";\n        FileType[\"PHP\"] = \"php\";\n        FileType[\"JSON\"] = \"json\";\n        FileType[\"XML\"] = \"xml\";\n        FileType[\"INI\"] = \"ini\";\n        FileType[\"RC\"] = \"rc\";\n        FileType[\"RESW\"] = \"resw\";\n        FileType[\"RESJSON\"] = \"resjson\";\n        FileType[\"QTTS\"] = \"qtts\";\n        FileType[\"JOOMLA\"] = \"joomla\";\n        FileType[\"CHROME\"] = \"chrome\";\n        FileType[\"DTD\"] = \"dtd\";\n        FileType[\"DKLANG\"] = \"dklang\";\n        FileType[\"FLEX\"] = \"flex\";\n        FileType[\"NSH\"] = \"nsh\";\n        FileType[\"WXL\"] = \"wxl\";\n        FileType[\"XLIFF\"] = \"xliff\";\n        FileType[\"HTML\"] = \"html\";\n        FileType[\"HAML\"] = \"haml\";\n        FileType[\"TXT\"] = \"txt\";\n        FileType[\"CSV\"] = \"csv\";\n        FileType[\"MD\"] = \"md\";\n        FileType[\"FLSNP\"] = \"flsnp\";\n        FileType[\"FM_HTML\"] = \"fm_html\";\n        FileType[\"FM_MD\"] = \"fm_md\";\n        FileType[\"MEDIAWIKI\"] = \"mediawiki\";\n        FileType[\"DOCX\"] = \"docx\";\n        FileType[\"SBV\"] = \"sbv\";\n        FileType[\"VTT\"] = \"vtt\";\n        FileType[\"SRT\"] = \"srt\";\n    })(FileType = SourceFilesModel.FileType || (SourceFilesModel.FileType = {}));\n    let EscapeQuotes;\n    (function (EscapeQuotes) {\n        EscapeQuotes[EscapeQuotes[\"ZERO\"] = 0] = \"ZERO\";\n        EscapeQuotes[EscapeQuotes[\"ONE\"] = 1] = \"ONE\";\n        EscapeQuotes[EscapeQuotes[\"TWO\"] = 2] = \"TWO\";\n        EscapeQuotes[EscapeQuotes[\"THREE\"] = 3] = \"THREE\";\n    })(EscapeQuotes = SourceFilesModel.EscapeQuotes || (SourceFilesModel.EscapeQuotes = {}));\n    let UpdateOption;\n    (function (UpdateOption) {\n        UpdateOption[\"CLEAR_TRANSLATIONS_AND_APPROVALS\"] = \"clear_translations_and_approvals\";\n        UpdateOption[\"KEEP_TRANSLATIONS\"] = \"keep_translations\";\n        UpdateOption[\"KEEP_TRANSLATIONS_AND_APPROVALS\"] = \"keep_translations_and_approvals\";\n    })(UpdateOption = SourceFilesModel.UpdateOption || (SourceFilesModel.UpdateOption = {}));\n})(SourceFilesModel = exports.SourceFilesModel || (exports.SourceFilesModel = {}));\n"]},"metadata":{},"sourceType":"script"}