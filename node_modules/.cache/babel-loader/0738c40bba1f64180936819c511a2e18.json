{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst core_1 = require(\"../core\");\n\nclass Languages extends core_1.CrowdinApi {\n  /**\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n  listSupportedLanguages(limit, offset) {\n    const url = `${this.url}/languages`;\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param request request body\n   */\n\n\n  addCustomLanguage(request) {\n    const url = `${this.url}/languages`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param languageId language identifier\n   */\n\n\n  getLanguage(languageId) {\n    const url = `${this.url}/languages/${languageId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param languageId language identifier\n   */\n\n\n  deleteCustomLanguage(languageId) {\n    const url = `${this.url}/languages/${languageId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param languageId language identifier\n   * @param request request body\n   */\n\n\n  editCustomLanguage(languageId, request) {\n    const url = `${this.url}/languages/${languageId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n\n}\n\nexports.Languages = Languages;\nvar LanguagesModel;\n\n(function (LanguagesModel) {\n  let TextDirection;\n\n  (function (TextDirection) {\n    TextDirection[\"LTR\"] = \"ltr\";\n    TextDirection[\"RTL\"] = \"rtl\";\n  })(TextDirection = LanguagesModel.TextDirection || (LanguagesModel.TextDirection = {}));\n})(LanguagesModel = exports.LanguagesModel || (exports.LanguagesModel = {}));","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/@crowdin/crowdin-api-client/out/languages/index.js"],"names":["Object","defineProperty","exports","value","core_1","require","Languages","CrowdinApi","listSupportedLanguages","limit","offset","url","getList","addCustomLanguage","request","post","defaultConfig","getLanguage","languageId","get","deleteCustomLanguage","delete","editCustomLanguage","patch","LanguagesModel","TextDirection"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMC,SAAN,SAAwBF,MAAM,CAACG,UAA/B,CAA0C;AACtC;AACJ;AACA;AACA;AACIC,EAAAA,sBAAsB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClC,UAAMC,GAAG,GAAI,GAAE,KAAKA,GAAI,YAAxB;AACA,WAAO,KAAKC,OAAL,CAAaD,GAAb,EAAkBF,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;;;AACIG,EAAAA,iBAAiB,CAACC,OAAD,EAAU;AACvB,UAAMH,GAAG,GAAI,GAAE,KAAKA,GAAI,YAAxB;AACA,WAAO,KAAKI,IAAL,CAAUJ,GAAV,EAAeG,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;;;AACIC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,UAAMP,GAAG,GAAI,GAAE,KAAKA,GAAI,cAAaO,UAAW,EAAhD;AACA,WAAO,KAAKC,GAAL,CAASR,GAAT,EAAc,KAAKK,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;;;AACII,EAAAA,oBAAoB,CAACF,UAAD,EAAa;AAC7B,UAAMP,GAAG,GAAI,GAAE,KAAKA,GAAI,cAAaO,UAAW,EAAhD;AACA,WAAO,KAAKG,MAAL,CAAYV,GAAZ,EAAiB,KAAKK,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIM,EAAAA,kBAAkB,CAACJ,UAAD,EAAaJ,OAAb,EAAsB;AACpC,UAAMH,GAAG,GAAI,GAAE,KAAKA,GAAI,cAAaO,UAAW,EAAhD;AACA,WAAO,KAAKK,KAAL,CAAWZ,GAAX,EAAgBG,OAAhB,EAAyB,KAAKE,aAAL,EAAzB,CAAP;AACH;;AArCqC;;AAuC1Cd,OAAO,CAACI,SAAR,GAAoBA,SAApB;AACA,IAAIkB,cAAJ;;AACA,CAAC,UAAUA,cAAV,EAA0B;AACvB,MAAIC,aAAJ;;AACA,GAAC,UAAUA,aAAV,EAAyB;AACtBA,IAAAA,aAAa,CAAC,KAAD,CAAb,GAAuB,KAAvB;AACAA,IAAAA,aAAa,CAAC,KAAD,CAAb,GAAuB,KAAvB;AACH,GAHD,EAGGA,aAAa,GAAGD,cAAc,CAACC,aAAf,KAAiCD,cAAc,CAACC,aAAf,GAA+B,EAAhE,CAHnB;AAIH,CAND,EAMGD,cAAc,GAAGtB,OAAO,CAACsB,cAAR,KAA2BtB,OAAO,CAACsB,cAAR,GAAyB,EAApD,CANpB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"../core\");\nclass Languages extends core_1.CrowdinApi {\n    /**\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listSupportedLanguages(limit, offset) {\n        const url = `${this.url}/languages`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n    addCustomLanguage(request) {\n        const url = `${this.url}/languages`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param languageId language identifier\n     */\n    getLanguage(languageId) {\n        const url = `${this.url}/languages/${languageId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param languageId language identifier\n     */\n    deleteCustomLanguage(languageId) {\n        const url = `${this.url}/languages/${languageId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param languageId language identifier\n     * @param request request body\n     */\n    editCustomLanguage(languageId, request) {\n        const url = `${this.url}/languages/${languageId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Languages = Languages;\nvar LanguagesModel;\n(function (LanguagesModel) {\n    let TextDirection;\n    (function (TextDirection) {\n        TextDirection[\"LTR\"] = \"ltr\";\n        TextDirection[\"RTL\"] = \"rtl\";\n    })(TextDirection = LanguagesModel.TextDirection || (LanguagesModel.TextDirection = {}));\n})(LanguagesModel = exports.LanguagesModel || (exports.LanguagesModel = {}));\n"]},"metadata":{},"sourceType":"script"}