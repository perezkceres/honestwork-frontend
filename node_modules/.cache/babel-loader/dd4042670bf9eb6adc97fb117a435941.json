{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/contexts/RefreshContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nconst ULTRA_INTERVAL = 3000;\nconst FAST_INTERVAL = 10000;\nconst SLOW_INTERVAL = 60000;\nconst RefreshContext = /*#__PURE__*/React.createContext({\n  slow: 0,\n  fast: 0,\n  ultra: 0\n}); // This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\n\nconst RefreshContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [slow, setSlow] = useState(0);\n  const [fast, setFast] = useState(0);\n  const [ultra, setUltra] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast(prev => prev + 1);\n    }, FAST_INTERVAL);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow(prev => prev + 1);\n    }, SLOW_INTERVAL);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setUltra(prev => prev + 1);\n    }, ULTRA_INTERVAL);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(RefreshContext.Provider, {\n    value: {\n      slow,\n      fast,\n      ultra\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\n_s(RefreshContextProvider, \"CvnHkJgUQVnP6TG9RaB9OMCIwTM=\");\n\n_c = RefreshContextProvider;\nexport { RefreshContext, RefreshContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"RefreshContextProvider\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/contexts/RefreshContext.tsx"],"names":["React","useState","useEffect","ULTRA_INTERVAL","FAST_INTERVAL","SLOW_INTERVAL","RefreshContext","createContext","slow","fast","ultra","RefreshContextProvider","children","setSlow","setFast","setUltra","interval","setInterval","prev","clearInterval"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,MAAMC,cAAc,GAAG,IAAvB;AACA,MAAMC,aAAa,GAAG,KAAtB;AACA,MAAMC,aAAa,GAAG,KAAtB;AAEA,MAAMC,cAAc,gBAAGN,KAAK,CAACO,aAAN,CAAoB;AAAEC,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE,CAAjB;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAApB,CAAvB,C,CAEA;;AACA,MAAMC,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/C,QAAM,CAACJ,IAAD,EAAOK,OAAP,IAAkBZ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOK,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQK,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACvCH,MAAAA,OAAO,CAAEI,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAP;AACD,KAF2B,EAEzBd,aAFyB,CAA5B;AAGA,WAAO,MAAMe,aAAa,CAACH,QAAD,CAA1B;AACD,GALQ,EAKN,EALM,CAAT;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACvCJ,MAAAA,OAAO,CAAEK,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAP;AACD,KAF2B,EAEzBb,aAFyB,CAA5B;AAGA,WAAO,MAAMc,aAAa,CAACH,QAAD,CAA1B;AACD,GALQ,EAKN,EALM,CAAT;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACvCF,MAAAA,QAAQ,CAAEG,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAR;AACD,KAF2B,EAEzBf,cAFyB,CAA5B;AAGA,WAAO,MAAMgB,aAAa,CAACH,QAAD,CAA1B;AACD,GALQ,EAKN,EALM,CAAT;AAOA,sBAAO,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAER,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA;AAAd,KAAhC;AAAA,cAAwDE;AAAxD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA3BD;;GAAMD,sB;;KAAAA,sB;AA6BN,SAASL,cAAT,EAAyBK,sBAAzB","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst ULTRA_INTERVAL = 3000\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0, ultra: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const [ultra, setUltra] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setFast((prev) => prev + 1)\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setSlow((prev) => prev + 1)\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setUltra((prev) => prev + 1)\r\n    }, ULTRA_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast, ultra }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n"]},"metadata":{},"sourceType":"module"}