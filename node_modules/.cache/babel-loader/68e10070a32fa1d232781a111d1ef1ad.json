{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"../core\");\n\nvar SourceStrings = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(SourceStrings, _core_1$CrowdinApi);\n\n  var _super = _createSuper(SourceStrings);\n\n  function SourceStrings() {\n    _classCallCheck(this, SourceStrings);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SourceStrings, [{\n    key: \"listProjectStrings\",\n    value: function listProjectStrings(projectId, fileIdOrRequest, limit, offset, filter, denormalizePlaceholders, labelIds, scope) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/strings\");\n      var request;\n\n      if (fileIdOrRequest && typeof fileIdOrRequest === 'object') {\n        request = fileIdOrRequest;\n      } else {\n        request = {\n          fileId: fileIdOrRequest,\n          limit: limit,\n          offset: offset,\n          filter: filter,\n          denormalizePlaceholders: denormalizePlaceholders,\n          labelIds: labelIds,\n          scope: scope\n        };\n      }\n\n      url = this.addQueryParam(url, 'fileId', request.fileId);\n      url = this.addQueryParam(url, 'filter', request.filter);\n      url = this.addQueryParam(url, 'denormalizePlaceholders', request.denormalizePlaceholders);\n      url = this.addQueryParam(url, 'labelIds', request.labelIds);\n      url = this.addQueryParam(url, 'scope', request.scope);\n      return this.getList(url, request.limit, request.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"addString\",\n    value: function addString(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/strings\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     */\n\n  }, {\n    key: \"getString\",\n    value: function getString(projectId, stringId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/strings/\").concat(stringId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     */\n\n  }, {\n    key: \"deleteString\",\n    value: function deleteString(projectId, stringId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/strings/\").concat(stringId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"editString\",\n    value: function editString(projectId, stringId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/strings/\").concat(stringId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n  }]);\n\n  return SourceStrings;\n}(core_1.CrowdinApi);\n\nexports.SourceStrings = SourceStrings;\nvar SourceStringsModel;\n\n(function (SourceStringsModel) {\n  var Type;\n\n  (function (Type) {\n    Type[Type[\"TEXT\"] = 0] = \"TEXT\";\n    Type[Type[\"ASSET\"] = 1] = \"ASSET\";\n    Type[Type[\"ICU\"] = 2] = \"ICU\";\n  })(Type = SourceStringsModel.Type || (SourceStringsModel.Type = {}));\n\n  var Scope;\n\n  (function (Scope) {\n    Scope[\"IDENTIFIER\"] = \"identifier\";\n    Scope[\"TEXT\"] = \"text\";\n    Scope[\"CONTEXT\"] = \"context\";\n  })(Scope = SourceStringsModel.Scope || (SourceStringsModel.Scope = {}));\n})(SourceStringsModel = exports.SourceStringsModel || (exports.SourceStringsModel = {}));","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/@crowdin/crowdin-api-client/out/sourceStrings/index.js"],"names":["Object","defineProperty","exports","value","core_1","require","SourceStrings","projectId","fileIdOrRequest","limit","offset","filter","denormalizePlaceholders","labelIds","scope","url","request","fileId","addQueryParam","getList","post","defaultConfig","stringId","get","delete","patch","CrowdinApi","SourceStringsModel","Type","Scope"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"../core\");\nclass SourceStrings extends core_1.CrowdinApi {\n    listProjectStrings(projectId, fileIdOrRequest, limit, offset, filter, denormalizePlaceholders, labelIds, scope) {\n        let url = `${this.url}/projects/${projectId}/strings`;\n        let request;\n        if (fileIdOrRequest && typeof fileIdOrRequest === 'object') {\n            request = fileIdOrRequest;\n        }\n        else {\n            request = { fileId: fileIdOrRequest, limit, offset, filter, denormalizePlaceholders, labelIds, scope };\n        }\n        url = this.addQueryParam(url, 'fileId', request.fileId);\n        url = this.addQueryParam(url, 'filter', request.filter);\n        url = this.addQueryParam(url, 'denormalizePlaceholders', request.denormalizePlaceholders);\n        url = this.addQueryParam(url, 'labelIds', request.labelIds);\n        url = this.addQueryParam(url, 'scope', request.scope);\n        return this.getList(url, request.limit, request.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addString(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/strings`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     */\n    getString(projectId, stringId) {\n        const url = `${this.url}/projects/${projectId}/strings/${stringId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     */\n    deleteString(projectId, stringId) {\n        const url = `${this.url}/projects/${projectId}/strings/${stringId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param request request body\n     */\n    editString(projectId, stringId, request) {\n        const url = `${this.url}/projects/${projectId}/strings/${stringId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.SourceStrings = SourceStrings;\nvar SourceStringsModel;\n(function (SourceStringsModel) {\n    let Type;\n    (function (Type) {\n        Type[Type[\"TEXT\"] = 0] = \"TEXT\";\n        Type[Type[\"ASSET\"] = 1] = \"ASSET\";\n        Type[Type[\"ICU\"] = 2] = \"ICU\";\n    })(Type = SourceStringsModel.Type || (SourceStringsModel.Type = {}));\n    let Scope;\n    (function (Scope) {\n        Scope[\"IDENTIFIER\"] = \"identifier\";\n        Scope[\"TEXT\"] = \"text\";\n        Scope[\"CONTEXT\"] = \"context\";\n    })(Scope = SourceStringsModel.Scope || (SourceStringsModel.Scope = {}));\n})(SourceStringsModel = exports.SourceStringsModel || (exports.SourceStringsModel = {}));\n"]},"metadata":{},"sourceType":"script"}