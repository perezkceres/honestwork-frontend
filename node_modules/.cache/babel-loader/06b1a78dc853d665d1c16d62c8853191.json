{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"../core\");\n\nvar Distributions = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(Distributions, _core_1$CrowdinApi);\n\n  var _super = _createSuper(Distributions);\n\n  function Distributions() {\n    _classCallCheck(this, Distributions);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Distributions, [{\n    key: \"listDistributions\",\n\n    /**\n     * @param projectId project identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    value: function listDistributions(projectId, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions\");\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"createDistribution\",\n    value: function createDistribution(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     */\n\n  }, {\n    key: \"getDistribution\",\n    value: function getDistribution(projectId, hash) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions/\").concat(hash);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     */\n\n  }, {\n    key: \"deleteDistribution\",\n    value: function deleteDistribution(projectId, hash) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions/\").concat(hash);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     * @param request request body\n     */\n\n  }, {\n    key: \"editDistribution\",\n    value: function editDistribution(projectId, hash, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions/\").concat(hash);\n      return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     */\n\n  }, {\n    key: \"getDistributionRelease\",\n    value: function getDistributionRelease(projectId, hash) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions/\").concat(hash, \"/release\");\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     * @param request request body\n     */\n\n  }, {\n    key: \"createDistributionRelease\",\n    value: function createDistributionRelease(projectId, hash) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions/\").concat(hash, \"/release\");\n      return this.post(url, {}, this.defaultConfig());\n    }\n  }]);\n\n  return Distributions;\n}(core_1.CrowdinApi);\n\nexports.Distributions = Distributions;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/@crowdin/crowdin-api-client/out/distributions/index.js"],"names":["Object","defineProperty","exports","value","core_1","require","Distributions","projectId","limit","offset","url","getList","request","post","defaultConfig","hash","get","delete","patch","CrowdinApi"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;IACMC,a;;;;;;;;;;;;;;AACF;AACJ;AACA;AACA;AACA;sCACsBC,S,EAAWC,K,EAAOC,M,EAAQ;AACxC,UAAMC,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,mBAAT;AACA,aAAO,KAAKI,OAAL,CAAaD,GAAb,EAAkBF,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;uCACuBF,S,EAAWK,O,EAAS;AACnC,UAAMF,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,mBAAT;AACA,aAAO,KAAKM,IAAL,CAAUH,GAAV,EAAeE,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;oCACoBP,S,EAAWQ,I,EAAM;AAC7B,UAAML,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,4BAAsDQ,IAAtD,CAAT;AACA,aAAO,KAAKC,GAAL,CAASN,GAAT,EAAc,KAAKI,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;uCACuBP,S,EAAWQ,I,EAAM;AAChC,UAAML,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,4BAAsDQ,IAAtD,CAAT;AACA,aAAO,KAAKE,MAAL,CAAYP,GAAZ,EAAiB,KAAKI,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;qCACqBP,S,EAAWQ,I,EAAMH,O,EAAS;AACvC,UAAMF,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,4BAAsDQ,IAAtD,CAAT;AACA,aAAO,KAAKG,KAAL,CAAWR,GAAX,EAAgBE,OAAhB,EAAyB,KAAKE,aAAL,EAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;2CAC2BP,S,EAAWQ,I,EAAM;AACpC,UAAML,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,4BAAsDQ,IAAtD,aAAT;AACA,aAAO,KAAKC,GAAL,CAASN,GAAT,EAAc,KAAKI,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;8CAC8BP,S,EAAWQ,I,EAAM;AACvC,UAAML,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,4BAAsDQ,IAAtD,aAAT;AACA,aAAO,KAAKF,IAAL,CAAUH,GAAV,EAAe,EAAf,EAAmB,KAAKI,aAAL,EAAnB,CAAP;AACH;;;;EA3DuBV,MAAM,CAACe,U;;AA6DnCjB,OAAO,CAACI,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"../core\");\nclass Distributions extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listDistributions(projectId, limit, offset) {\n        const url = `${this.url}/projects/${projectId}/distributions`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    createDistribution(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/distributions`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     */\n    getDistribution(projectId, hash) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     */\n    deleteDistribution(projectId, hash) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     * @param request request body\n     */\n    editDistribution(projectId, hash, request) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     */\n    getDistributionRelease(projectId, hash) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}/release`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     * @param request request body\n     */\n    createDistributionRelease(projectId, hash) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}/release`;\n        return this.post(url, {}, this.defaultConfig());\n    }\n}\nexports.Distributions = Distributions;\n"]},"metadata":{},"sourceType":"script"}