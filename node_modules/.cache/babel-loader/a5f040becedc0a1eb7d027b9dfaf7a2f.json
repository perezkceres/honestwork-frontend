{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"../core\");\n\nvar Teams = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(Teams, _core_1$CrowdinApi);\n\n  var _super = _createSuper(Teams);\n\n  function Teams() {\n    _classCallCheck(this, Teams);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Teams, [{\n    key: \"addTeamToProject\",\n\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    value: function addTeamToProject(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/teams\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n\n  }, {\n    key: \"listTeams\",\n    value: function listTeams(limit, offset) {\n      var url = \"\".concat(this.url, \"/teams\");\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n\n  }, {\n    key: \"addTeam\",\n    value: function addTeam(request) {\n      var url = \"\".concat(this.url, \"/teams\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     */\n\n  }, {\n    key: \"getTeam\",\n    value: function getTeam(teamId) {\n      var url = \"\".concat(this.url, \"/teams/\").concat(teamId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     */\n\n  }, {\n    key: \"deleteTeam\",\n    value: function deleteTeam(teamId) {\n      var url = \"\".concat(this.url, \"/teams/\").concat(teamId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"editTeam\",\n    value: function editTeam(teamId, request) {\n      var url = \"\".concat(this.url, \"/teams/\").concat(teamId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n\n  }, {\n    key: \"teamMembersList\",\n    value: function teamMembersList(teamId, limit, offset) {\n      var url = \"\".concat(this.url, \"/teams/\").concat(teamId, \"/members\");\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param teamId team identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"addTeamMembers\",\n    value: function addTeamMembers(teamId, request) {\n      var url = \"\".concat(this.url, \"/teams/\").concat(teamId, \"/members\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     */\n\n  }, {\n    key: \"deleteAllTeamMembers\",\n    value: function deleteAllTeamMembers(teamId) {\n      var url = \"\".concat(this.url, \"/teams/\").concat(teamId, \"/members\");\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @param memberId member identifier\n     */\n\n  }, {\n    key: \"deleteTeamMember\",\n    value: function deleteTeamMember(teamId, memberId) {\n      var url = \"\".concat(this.url, \"/teams/\").concat(teamId, \"/members/\").concat(memberId);\n      return this.delete(url, this.defaultConfig());\n    }\n  }]);\n\n  return Teams;\n}(core_1.CrowdinApi);\n\nexports.Teams = Teams;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/@crowdin/crowdin-api-client/out/teams/index.js"],"names":["Object","defineProperty","exports","value","core_1","require","Teams","projectId","request","url","post","defaultConfig","limit","offset","getList","teamId","get","delete","patch","memberId","CrowdinApi"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;IACMC,K;;;;;;;;;;;;;;AACF;AACJ;AACA;AACA;qCACqBC,S,EAAWC,O,EAAS;AACjC,UAAMC,GAAG,aAAM,KAAKA,GAAX,uBAA2BF,SAA3B,WAAT;AACA,aAAO,KAAKG,IAAL,CAAUD,GAAV,EAAeD,OAAf,EAAwB,KAAKG,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;8BACcC,K,EAAOC,M,EAAQ;AACrB,UAAMJ,GAAG,aAAM,KAAKA,GAAX,WAAT;AACA,aAAO,KAAKK,OAAL,CAAaL,GAAb,EAAkBG,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;;;;4BACYL,O,EAAS;AACb,UAAMC,GAAG,aAAM,KAAKA,GAAX,WAAT;AACA,aAAO,KAAKC,IAAL,CAAUD,GAAV,EAAeD,OAAf,EAAwB,KAAKG,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;;;;4BACYI,M,EAAQ;AACZ,UAAMN,GAAG,aAAM,KAAKA,GAAX,oBAAwBM,MAAxB,CAAT;AACA,aAAO,KAAKC,GAAL,CAASP,GAAT,EAAc,KAAKE,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;;;;+BACeI,M,EAAQ;AACf,UAAMN,GAAG,aAAM,KAAKA,GAAX,oBAAwBM,MAAxB,CAAT;AACA,aAAO,KAAKE,MAAL,CAAYR,GAAZ,EAAiB,KAAKE,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;6BACaI,M,EAAQP,O,EAAS;AACtB,UAAMC,GAAG,aAAM,KAAKA,GAAX,oBAAwBM,MAAxB,CAAT;AACA,aAAO,KAAKG,KAAL,CAAWT,GAAX,EAAgBD,OAAhB,EAAyB,KAAKG,aAAL,EAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;oCACoBI,M,EAAQH,K,EAAOC,M,EAAQ;AACnC,UAAMJ,GAAG,aAAM,KAAKA,GAAX,oBAAwBM,MAAxB,aAAT;AACA,aAAO,KAAKD,OAAL,CAAaL,GAAb,EAAkBG,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;mCACmBE,M,EAAQP,O,EAAS;AAC5B,UAAMC,GAAG,aAAM,KAAKA,GAAX,oBAAwBM,MAAxB,aAAT;AACA,aAAO,KAAKL,IAAL,CAAUD,GAAV,EAAeD,OAAf,EAAwB,KAAKG,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;;;;yCACyBI,M,EAAQ;AACzB,UAAMN,GAAG,aAAM,KAAKA,GAAX,oBAAwBM,MAAxB,aAAT;AACA,aAAO,KAAKE,MAAL,CAAYR,GAAZ,EAAiB,KAAKE,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;qCACqBI,M,EAAQI,Q,EAAU;AAC/B,UAAMV,GAAG,aAAM,KAAKA,GAAX,oBAAwBM,MAAxB,sBAA0CI,QAA1C,CAAT;AACA,aAAO,KAAKF,MAAL,CAAYR,GAAZ,EAAiB,KAAKE,aAAL,EAAjB,CAAP;AACH;;;;EA7EeP,MAAM,CAACgB,U;;AA+E3BlB,OAAO,CAACI,KAAR,GAAgBA,KAAhB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"../core\");\nclass Teams extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addTeamToProject(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/teams`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listTeams(limit, offset) {\n        const url = `${this.url}/teams`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n    addTeam(request) {\n        const url = `${this.url}/teams`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     */\n    getTeam(teamId) {\n        const url = `${this.url}/teams/${teamId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     */\n    deleteTeam(teamId) {\n        const url = `${this.url}/teams/${teamId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @param request request body\n     */\n    editTeam(teamId, request) {\n        const url = `${this.url}/teams/${teamId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    teamMembersList(teamId, limit, offset) {\n        const url = `${this.url}/teams/${teamId}/members`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param teamId team identifier\n     * @param request request body\n     */\n    addTeamMembers(teamId, request) {\n        const url = `${this.url}/teams/${teamId}/members`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     */\n    deleteAllTeamMembers(teamId) {\n        const url = `${this.url}/teams/${teamId}/members`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @param memberId member identifier\n     */\n    deleteTeamMember(teamId, memberId) {\n        const url = `${this.url}/teams/${teamId}/members/${memberId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n}\nexports.Teams = Teams;\n"]},"metadata":{},"sourceType":"script"}