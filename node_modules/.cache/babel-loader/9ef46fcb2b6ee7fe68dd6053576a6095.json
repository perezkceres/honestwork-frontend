{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/KingOfElephants/components/TillCollapseCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Countdown from 'react-countdown';\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet'; // import { claimForest } from 'utils/callHelpers'\n// import { useForest } from 'hooks/useContract'\n\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport { getCakeAddress, getForestAddress } from 'utils/addressHelpers';\nimport { usePriceCakeBusd } from 'state/hooks';\nimport CardValue from 'views/Home/components/CardValue';\nimport { getFullDisplayBalance } from 'utils/formatBalance'; // import useRefresh from 'hooks/useRefresh'\n\nimport getRpcUrl from 'utils/getRpcUrl';\nimport UnlockButton from 'components/UnlockButton';\nconst StyledCard = styled(Card)`\n  min-height: 365px;\n  background-image: url(/images/forest/ForestBackground6.gif);\n  background-position: center right;\n  background-repeat: repeat;\n  background-size: cover;\n`;\n_c = StyledCard;\nconst Adventure = styled.div`\n    background: -webkit-linear-gradient(#c91919, #f5ff00);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n`;\n_c2 = Adventure;\nconst QuesionHelperPositioner = styled.div`\n  margin-top: 10px;\n  margin-right: 10px;\n  float: right;\n`;\n\nconst TillCollapseCard = ({\n  hasWinner,\n  nextStartTime,\n  lastBidTime,\n  endOfAuction\n}) => {\n  _s();\n\n  // const forestContract = useForest()\n  const balance = useTokenBalance(getCakeAddress(), getForestAddress(), getRpcUrl());\n  const seedPriceInUsd = usePriceCakeBusd();\n  const balanceInUsd = balance.multipliedBy(seedPriceInUsd); // const [isClaiming, setIsClaiming] = useState(false)\n\n  const {\n    account\n  } = useWallet(); // const onClaim = async () => {\n  //   setIsClaiming(true)\n  //   try {\n  //     await claimForest(forestContract, account)  \n  //   } catch (e) {\n  //     console.error(e)\n  //   }\n  //   setIsClaiming(false)\n  // }\n  // Check if is time to start a new game\n\n  const isWaitingForNextGame = nextStartTime * 1000 > Date.now(); // const isEnding = endData && endData.lastBidTime !== 0\n\n  const isRunning = lastBidTime !== 0; // DEBUG DATA\n  // const obj = { isWaitingForNextGame, isRunning, hasWinner, nextStartTime, lastBidTime, endOfAuction }\n  // console.log('DEBUG FOREST DATA =>', obj)\n\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [isWaitingForNextGame ? /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"60px\",\n        mb: \"10px\",\n        color: \"primary\",\n        children: [/*#__PURE__*/_jsxDEV(Adventure, {\n          children: \"Next Round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n          date: nextStartTime * 1000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"30px\",\n          color: \"primary\",\n          children: \"Prepare for battle!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"xl\",\n          mb: \"10px\",\n          color: \"primary\",\n          children: \"Round status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), isRunning ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"60px\",\n            mb: \"10px\",\n            color: \"primary\",\n            children: hasWinner ? /*#__PURE__*/_jsxDEV(Adventure, {\n              children: \"Waiting for claim\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 30\n            }, this) : /*#__PURE__*/_jsxDEV(Countdown, {\n              date: endOfAuction\n            }, endOfAuction, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 73\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"60px\",\n            mb: \"10px\",\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(Adventure, {\n              children: \"Waiting for Bids\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"xl\",\n          mb: \"10px\",\n          color: \"primary\",\n          children: [\"Pot\", /*#__PURE__*/_jsxDEV(CardValue, {\n            value: parseFloat(getFullDisplayBalance(balance)),\n            decimals: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardValue, {\n            value: parseFloat(getFullDisplayBalance(balanceInUsd)),\n            prefix: \"~$\",\n            decimals: 2,\n            fontSize: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Text, {\n        marginTop: \"20px\",\n        children: !account && /*#__PURE__*/_jsxDEV(UnlockButton, {\n          mr: \"10px\",\n          mt: \"20px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TillCollapseCard, \"u/8mpVy+hXAZlcmMfsdLTDWRgXQ=\", false, function () {\n  return [useTokenBalance, usePriceCakeBusd, useWallet];\n});\n\n_c3 = TillCollapseCard;\nexport default TillCollapseCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"Adventure\");\n$RefreshReg$(_c3, \"TillCollapseCard\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/KingOfElephants/components/TillCollapseCard.tsx"],"names":["React","styled","Countdown","Card","CardBody","Heading","Text","useWallet","useTokenBalance","getCakeAddress","getForestAddress","usePriceCakeBusd","CardValue","getFullDisplayBalance","getRpcUrl","UnlockButton","StyledCard","Adventure","div","QuesionHelperPositioner","TillCollapseCard","hasWinner","nextStartTime","lastBidTime","endOfAuction","balance","seedPriceInUsd","balanceInUsd","multipliedBy","account","isWaitingForNextGame","Date","now","isRunning","parseFloat"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport styled from 'styled-components'\nimport Countdown from 'react-countdown'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n// import { claimForest } from 'utils/callHelpers'\n// import { useForest } from 'hooks/useContract'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress, getForestAddress } from 'utils/addressHelpers'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport CardValue from 'views/Home/components/CardValue'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n// import useRefresh from 'hooks/useRefresh'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport UnlockButton from 'components/UnlockButton'\n\n\nconst StyledCard = styled(Card)`\n  min-height: 365px;\n  background-image: url(/images/forest/ForestBackground6.gif);\n  background-position: center right;\n  background-repeat: repeat;\n  background-size: cover;\n`\n\nconst Adventure = styled.div`\n    background: -webkit-linear-gradient(#c91919, #f5ff00);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n`\n\nconst QuesionHelperPositioner = styled.div`\n  margin-top: 10px;\n  margin-right: 10px;\n  float: right;\n`\n\ninterface TillCollapseCardProps {\n  hasWinner,\n  nextStartTime,\n  lastBidTime,\n  endOfAuction,\n}\n\nconst TillCollapseCard: React.FC<TillCollapseCardProps> = ({ hasWinner, nextStartTime, lastBidTime, endOfAuction }) => {\n  // const forestContract = useForest()\n  const balance = useTokenBalance(getCakeAddress(), getForestAddress(), getRpcUrl())\n  const seedPriceInUsd = usePriceCakeBusd()\n  const balanceInUsd = balance.multipliedBy(seedPriceInUsd)\n  // const [isClaiming, setIsClaiming] = useState(false)\n  const { account } = useWallet()\n  // const onClaim = async () => {\n  //   setIsClaiming(true)\n  //   try {\n  //     await claimForest(forestContract, account)  \n  //   } catch (e) {\n  //     console.error(e)\n  //   }\n  //   setIsClaiming(false)\n  // }\n\n  // Check if is time to start a new game\n  const isWaitingForNextGame = nextStartTime * 1000 > Date.now()\n\n  // const isEnding = endData && endData.lastBidTime !== 0\n  const isRunning = lastBidTime !== 0\n\n  // DEBUG DATA\n  // const obj = { isWaitingForNextGame, isRunning, hasWinner, nextStartTime, lastBidTime, endOfAuction }\n  // console.log('DEBUG FOREST DATA =>', obj)\n\n  return (\n    <StyledCard>\n      <CardBody>\n        {isWaitingForNextGame ? (\n          <Text fontSize=\"60px\" mb=\"10px\" color=\"primary\">\n            <Adventure>Next Round</Adventure>\n            <Countdown date={nextStartTime * 1000}/>\n            <br/>\n            <Text fontSize=\"30px\" color=\"primary\">Prepare for battle!</Text>\n          </Text>\n        ) : (\n          <>\n            <Heading size=\"xl\" mb=\"10px\" color=\"primary\">\n              Round status\n            </Heading>\n            {isRunning ? (\n              <div>\n              <Text fontSize=\"60px\" mb=\"10px\" color=\"primary\">\n                {hasWinner ? <Adventure>Waiting for claim</Adventure> : <Countdown key={endOfAuction} date={endOfAuction}/>}\n              </Text>\n              </div>\n            ) : (\n              <div>\n              \n              <Text  fontSize=\"60px\" mb=\"10px\" color=\"primary\">\n                <Adventure>Waiting for Bids</Adventure>\n              </Text>\n              </div>\n            )}\n            <Heading size=\"xl\" mb=\"10px\" color=\"primary\">\n              Pot\n              <CardValue value={parseFloat(getFullDisplayBalance(balance))} decimals={2} />\n              <CardValue\n                value={parseFloat(getFullDisplayBalance(balanceInUsd))}\n                prefix=\"~$\"\n                decimals={2}\n                fontSize=\"24px\"\n              />\n            </Heading>\n          </>\n        )}\n        <Text marginTop=\"20px\">\n          {!account && <UnlockButton mr=\"10px\" mt=\"20px\" />}\n          {/* hasWinner && account && (\n            <Button ml=\"10px\" onClick={onClaim} disabled={isClaiming} mt=\"20px\">\n              Restart Game\n            </Button>\n          ) */}\n        </Text>\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TillCollapseCard\n"]},"metadata":{},"sourceType":"module"}