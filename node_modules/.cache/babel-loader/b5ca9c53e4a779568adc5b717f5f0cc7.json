{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/contexts/BlockContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getWeb3 } from 'utils/web3';\nconst BlockContext = /*#__PURE__*/React.createContext(0);\n\nconst BlockContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const previousBlock = useRef(0);\n  const [block, setBlock] = useState(0);\n  useEffect(() => {\n    const web3 = getWeb3();\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber();\n\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber;\n        setBlock(blockNumber);\n      }\n    }, 6000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BlockContext.Provider, {\n    value: block,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\n_s(BlockContextProvider, \"fOwaCK9umPiPLkJdeqbxMowrkXU=\");\n\n_c = BlockContextProvider;\nexport { BlockContext, BlockContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockContextProvider\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/contexts/BlockContext.tsx"],"names":["React","useState","useEffect","useRef","getWeb3","BlockContext","createContext","BlockContextProvider","children","previousBlock","block","setBlock","web3","interval","setInterval","blockNumber","eth","getBlockNumber","current","clearInterval"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,MAAMC,YAAY,gBAAGL,KAAK,CAACM,aAAN,CAAoB,CAApB,CAArB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C,QAAMC,aAAa,GAAGN,MAAM,CAAC,CAAD,CAA5B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,IAAI,GAAGR,OAAO,EAApB;AACA,UAAMS,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACvC,YAAMC,WAAW,GAAG,MAAMH,IAAI,CAACI,GAAL,CAASC,cAAT,EAA1B;;AACA,UAAIF,WAAW,KAAKN,aAAa,CAACS,OAAlC,EAA2C;AACzCT,QAAAA,aAAa,CAACS,OAAd,GAAwBH,WAAxB;AACAJ,QAAAA,QAAQ,CAACI,WAAD,CAAR;AACD;AACF,KAN2B,EAMzB,IANyB,CAA5B;AAQA,WAAO,MAAMI,aAAa,CAACN,QAAD,CAA1B;AACD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEH,KAA9B;AAAA,cAAsCF;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlBD;;GAAMD,oB;;KAAAA,oB;AAoBN,SAASF,YAAT,EAAuBE,oBAAvB","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { getWeb3 } from 'utils/web3'\r\n\r\nconst BlockContext = React.createContext(0)\r\n\r\nconst BlockContextProvider = ({ children }) => {\r\n  const previousBlock = useRef(0)\r\n  const [block, setBlock] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      if (blockNumber !== previousBlock.current) {\r\n        previousBlock.current = blockNumber\r\n        setBlock(blockNumber)\r\n      }\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\r\n}\r\n\r\nexport { BlockContext, BlockContextProvider }\r\n"]},"metadata":{},"sourceType":"module"}