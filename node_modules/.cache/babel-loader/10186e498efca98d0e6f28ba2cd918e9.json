{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import pools from'config/constants/pools';import erc20ABI from'config/abi/erc20.json';import sousChefABI from'config/abi/sousChef.json';import{QuoteToken}from'config/constants/types';import multicall from'utils/multicall';import{getWeb3}from'utils/web3';import BigNumber from'bignumber.js';var CHAIN_ID=process.env.REACT_APP_CHAIN_ID;// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nvar nonBnbPools=pools.filter(function(p){return p.stakingTokenName!==QuoteToken.BNB;});var bnbPools=pools.filter(function(p){return p.stakingTokenName===QuoteToken.BNB;});var web3=getWeb3();export var fetchPoolsAllowance=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(account){var calls,allowances;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:calls=nonBnbPools.map(function(p){return{address:p.stakingTokenAddress[CHAIN_ID],name:'allowance',params:[account,p.contractAddress[CHAIN_ID]]};});_context.next=3;return multicall(erc20ABI,calls);case 3:allowances=_context.sent;return _context.abrupt(\"return\",nonBnbPools.reduce(function(acc,pool,index){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},pool.sousId,new BigNumber(allowances[index]).toJSON()));},{}));case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchPoolsAllowance(_x){return _ref.apply(this,arguments);};}();export var fetchUserBalances=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(account){var calls,tokenBalancesRaw,tokenBalances,bnbBalance,bnbBalances;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// Non BNB pools\ncalls=nonBnbPools.map(function(p){return{address:p.stakingTokenAddress[CHAIN_ID],name:'balanceOf',params:[account]};});_context2.next=3;return multicall(erc20ABI,calls);case 3:tokenBalancesRaw=_context2.sent;tokenBalances=nonBnbPools.reduce(function(acc,pool,index){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},pool.sousId,new BigNumber(tokenBalancesRaw[index]).toJSON()));},{});// BNB pools\n_context2.next=7;return web3.eth.getBalance(account);case 7:bnbBalance=_context2.sent;bnbBalances=bnbPools.reduce(function(acc,pool){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},pool.sousId,new BigNumber(bnbBalance).toJSON()));},{});return _context2.abrupt(\"return\",_objectSpread(_objectSpread({},tokenBalances),bnbBalances));case 10:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchUserBalances(_x2){return _ref2.apply(this,arguments);};}();export var fetchUserStakeBalances=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(account){var cakePools,cakeUserInfo;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:cakePools=pools;_context3.next=3;return multicall(sousChefABI,cakePools.map(function(p){return{address:p.contractAddress[CHAIN_ID],name:'userInfo',params:[account]};}));case 3:cakeUserInfo=_context3.sent;return _context3.abrupt(\"return\",_objectSpread({},pools.reduce(function(acc,pool,index){var _cakeUserInfo$index;return _objectSpread(_objectSpread({},acc),{},_defineProperty({},pool.sousId,new BigNumber((_cakeUserInfo$index=cakeUserInfo[index])===null||_cakeUserInfo$index===void 0?void 0:_cakeUserInfo$index.amount._hex).toJSON()));},{})));case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function fetchUserStakeBalances(_x3){return _ref3.apply(this,arguments);};}();export var fetchUserPendingRewards=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(account){var cakePools,res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:cakePools=pools;_context4.next=3;return multicall(sousChefABI,cakePools.map(function(p){return{address:p.contractAddress[CHAIN_ID],name:'pendingReward',params:[account]};}));case 3:res=_context4.sent;return _context4.abrupt(\"return\",_objectSpread({},pools.reduce(function(acc,pool,index){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},pool.sousId,new BigNumber(res[index]).toJSON()));},{})));case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function fetchUserPendingRewards(_x4){return _ref4.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/state/pools/fetchPoolsUser.ts"],"names":["pools","erc20ABI","sousChefABI","QuoteToken","multicall","getWeb3","BigNumber","CHAIN_ID","process","env","REACT_APP_CHAIN_ID","nonBnbPools","filter","p","stakingTokenName","BNB","bnbPools","web3","fetchPoolsAllowance","account","calls","map","address","stakingTokenAddress","name","params","contractAddress","allowances","reduce","acc","pool","index","sousId","toJSON","fetchUserBalances","tokenBalancesRaw","tokenBalances","eth","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","cakePools","cakeUserInfo","amount","_hex","fetchUserPendingRewards","res"],"mappings":"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","sourcesContent":["import pools from 'config/constants/pools'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = pools.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\nconst bnbPools = pools.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\nconst web3 = getWeb3()\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress[CHAIN_ID],\r\n    name: 'allowance',\r\n    params: [account, p.contractAddress[CHAIN_ID]],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress[CHAIN_ID],\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const cakePools = pools\r\n  const cakeUserInfo = await multicall(\r\n    sousChefABI,\r\n    cakePools.map((p) => ({\r\n      address: p.contractAddress[CHAIN_ID],\r\n      name: 'userInfo',\r\n      params: [account],\r\n    })),\r\n  )\r\n\r\n  return {\r\n    ...pools.reduce(\r\n      (acc, pool, index) => ({\r\n        ...acc,\r\n        [pool.sousId]: new BigNumber(cakeUserInfo[index]?.amount._hex).toJSON(),\r\n      }),\r\n      {},\r\n    ),\r\n  }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const cakePools = pools\r\n  const res = await multicall(\r\n    sousChefABI,\r\n    cakePools.map((p) => ({\r\n      address: p.contractAddress[CHAIN_ID],\r\n      name: 'pendingReward',\r\n      params: [account],\r\n    })),\r\n  )\r\n\r\n  return {\r\n    ...pools.reduce(\r\n      (acc, pool, index) => ({\r\n        ...acc,\r\n        [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n      }),\r\n      {},\r\n    ),\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}