{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _taggedTemplateLiteral from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  display: flex;\\n  font-size: 14px;\\n  justify-content: space-between;\\n  margin-bottom: 8px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: auto;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import{Card,CardBody,Heading,Text}from'@pancakeswap-libs/uikit';import BigNumber from'bignumber.js/bignumber';import styled from'styled-components';import{getBalanceNumber}from'utils/formatBalance';import{useTotalSupply,useBurnedBalance}from'hooks/useTokenBalance';import useI18n from'hooks/useI18n';import{getCakeAddress}from'utils/addressHelpers';import CardValue from'./CardValue';import{useFarms,usePriceCakeBusd}from'../../../state/hooks';var StyledCakeStats=styled(Card)(_templateObject());var Row=styled.div(_templateObject2());var CakeStats=function CakeStats(){var TranslateString=useI18n();var totalSupply=useTotalSupply();var burnedBalance=useBurnedBalance(getCakeAddress());var farms=useFarms();var eggPrice=usePriceCakeBusd();var circSupply=totalSupply?totalSupply.minus(burnedBalance):new BigNumber(0);var cakeSupply=getBalanceNumber(circSupply);var marketCap=eggPrice.times(circSupply);var salsaPerBlock=0;var burnValue=eggPrice.times(burnedBalance);var cakePrice=usePriceCakeBusd();if(farms&&farms[0]&&farms[0].salsaPerBlock){salsaPerBlock=new BigNumber(farms[0].salsaPerBlock).div(new BigNumber(10).pow(18)).toNumber();}return/*#__PURE__*/_jsx(StyledCakeStats,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{size:\"xl\",mb:\"24px\",children:TranslateString(534,'SALSA Stats')}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"SALSA Price\"}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:eggPrice.toNumber(),decimals:2,prefix:\"$\"})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Maximum Mint\"}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"14px\",children:\"3,888,000\"})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Total Minted\"}),totalSupply&&/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:getBalanceNumber(totalSupply),decimals:0})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Circulating Supply\"}),cakeSupply&&/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:cakeSupply,decimals:0})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(538,'Total salsa Burned')}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:getBalanceNumber(burnedBalance),decimals:0})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Burn Value\"}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:getBalanceNumber(burnValue),decimals:0,prefix:\"$\"})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(999,'Market Cap')}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:getBalanceNumber(marketCap),decimals:0,prefix:\"$\"})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(540,'New salsa/block')}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"14px\",children:salsaPerBlock})]})]})});};export default CakeStats;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/views/Home/components/CakeStats.tsx"],"names":["React","Card","CardBody","Heading","Text","BigNumber","styled","getBalanceNumber","useTotalSupply","useBurnedBalance","useI18n","getCakeAddress","CardValue","useFarms","usePriceCakeBusd","StyledCakeStats","Row","div","CakeStats","TranslateString","totalSupply","burnedBalance","farms","eggPrice","circSupply","minus","cakeSupply","marketCap","times","salsaPerBlock","burnValue","cakePrice","pow","toNumber"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\nimport { useFarms, usePriceCakeBusd } from '../../../state/hooks'\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CakeStats = () => {\r\n  const TranslateString = useI18n()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = useBurnedBalance(getCakeAddress())\r\n  const farms = useFarms();\r\n  const eggPrice = usePriceCakeBusd();\r\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\r\n  const cakeSupply = getBalanceNumber(circSupply);\r\n  const marketCap = eggPrice.times(circSupply);\r\n  let salsaPerBlock = 0;\r\n  const burnValue = eggPrice.times(burnedBalance);\r\n  const cakePrice = usePriceCakeBusd();\r\n  if(farms && farms[0] && farms[0].salsaPerBlock){\r\n    salsaPerBlock = new BigNumber(farms[0].salsaPerBlock).div(new BigNumber(10).pow(18)).toNumber();\r\n  }\r\n\r\n  return (\r\n    <StyledCakeStats>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(534, 'SALSA Stats')}\r\n        </Heading>\r\n        <Row>\r\n          <Text fontSize=\"14px\">SALSA Price</Text>\r\n          <CardValue fontSize=\"14px\" value={eggPrice.toNumber()} decimals={2} prefix=\"$\" />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">Maximum Mint</Text>\r\n          <Text bold fontSize=\"14px\">3,888,000</Text>\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">Total Minted</Text>\r\n          {totalSupply && <CardValue fontSize=\"14px\" value={getBalanceNumber(totalSupply)} decimals={0} />}\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">Circulating Supply</Text>\r\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} decimals={0} />}\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total salsa Burned')}</Text>\r\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnedBalance)} decimals={0} />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">Burn Value</Text>\r\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnValue)} decimals={0} prefix=\"$\" />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(999, 'Market Cap')}</Text>\r\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(marketCap)} decimals={0} prefix=\"$\" />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(540, 'New salsa/block')}</Text>\r\n          <Text bold fontSize=\"14px\">{salsaPerBlock}</Text>\r\n        </Row>\r\n      </CardBody>\r\n    </StyledCakeStats>\r\n  )\r\n}\r\n\r\nexport default CakeStats\r\n"]},"metadata":{},"sourceType":"module"}