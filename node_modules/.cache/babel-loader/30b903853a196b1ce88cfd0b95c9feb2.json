{"ast":null,"code":"import _toConsumableArray from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useCallback}from'react';import{useWallet}from'@binance-chain/bsc-use-wallet';import{useDispatch}from'react-redux';import{fetchFarmUserDataAsync,updateUserBalance,updateUserPendingReward}from'state/actions';import{smartHarvest,smartHarvestBnb,harvest}from'utils/callHelpers';import{useMasterchef,useSmartChef}from'./useContract';export var useHarvest=function useHarvest(farmPid){var dispatch=useDispatch();var _useWallet=useWallet(),account=_useWallet.account;var masterChefContract=useMasterchef();var handleHarvest=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var txHash;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return harvest(masterChefContract,farmPid,account);case 2:txHash=_context.sent;dispatch(fetchFarmUserDataAsync(account));return _context.abrupt(\"return\",txHash);case 5:case\"end\":return _context.stop();}}},_callee);})),[account,dispatch,farmPid,masterChefContract]);return{onReward:handleHarvest};};export var useAllHarvest=function useAllHarvest(farmPids){var _useWallet2=useWallet(),account=_useWallet2.account;var masterChefContract=useMasterchef();var handleHarvest=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var harvestPromises;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:harvestPromises=farmPids.reduce(function(accum,pid){return[].concat(_toConsumableArray(accum),[harvest(masterChefContract,pid,account)]);},[]);return _context2.abrupt(\"return\",Promise.all(harvestPromises));case 2:case\"end\":return _context2.stop();}}},_callee2);})),[account,farmPids,masterChefContract]);return{onReward:handleHarvest};};export var useSmartChefHarvest=function useSmartChefHarvest(sousId){var isUsingBnb=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var dispatch=useDispatch();var _useWallet3=useWallet(),account=_useWallet3.account;var smartChefContract=useSmartChef(sousId);var handleHarvest=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var harvestFn;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:harvestFn=isUsingBnb?smartHarvestBnb:smartHarvest;_context3.next=3;return harvestFn(smartChefContract,account);case 3:dispatch(updateUserPendingReward(sousId,account));dispatch(updateUserBalance(sousId,account));case 5:case\"end\":return _context3.stop();}}},_callee3);})),[account,dispatch,isUsingBnb,smartChefContract,sousId]);return{onReward:handleHarvest};};","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/SALSA/Salsa_frontend/src/hooks/useHarvest.ts"],"names":["useCallback","useWallet","useDispatch","fetchFarmUserDataAsync","updateUserBalance","updateUserPendingReward","smartHarvest","smartHarvestBnb","harvest","useMasterchef","useSmartChef","useHarvest","farmPid","dispatch","account","masterChefContract","handleHarvest","txHash","onReward","useAllHarvest","farmPids","harvestPromises","reduce","accum","pid","Promise","all","useSmartChefHarvest","sousId","isUsingBnb","smartChefContract","harvestFn"],"mappings":"ofAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,sBAAT,CAAiCC,iBAAjC,CAAoDC,uBAApD,KAAmF,eAAnF,CACA,OAASC,YAAT,CAAuBC,eAAvB,CAAwCC,OAAxC,KAAuD,mBAAvD,CACA,OAASC,aAAT,CAAwBC,YAAxB,KAA4C,eAA5C,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,CAAqB,CAC7C,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CAD6C,eAEzBD,SAAS,EAFgB,CAErCa,OAFqC,YAErCA,OAFqC,CAG7C,GAAMC,CAAAA,kBAAkB,CAAGN,aAAa,EAAxC,CAEA,GAAMO,CAAAA,aAAa,CAAGhB,WAAW,sEAAC,oKACXQ,CAAAA,OAAO,CAACO,kBAAD,CAAqBH,OAArB,CAA8BE,OAA9B,CADI,QAC1BG,MAD0B,eAEhCJ,QAAQ,CAACV,sBAAsB,CAACW,OAAD,CAAvB,CAAR,CAFgC,gCAGzBG,MAHyB,wDAAD,GAI9B,CAACH,OAAD,CAAUD,QAAV,CAAoBD,OAApB,CAA6BG,kBAA7B,CAJ8B,CAAjC,CAMA,MAAO,CAAEG,QAAQ,CAAEF,aAAZ,CAAP,CACD,CAZM,CAcP,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,CAAwB,iBAC/BnB,SAAS,EADsB,CAC3Ca,OAD2C,aAC3CA,OAD2C,CAEnD,GAAMC,CAAAA,kBAAkB,CAAGN,aAAa,EAAxC,CAEA,GAAMO,CAAAA,aAAa,CAAGhB,WAAW,sEAAC,4JAC1BqB,eAD0B,CACRD,QAAQ,CAACE,MAAT,CAAgB,SAACC,KAAD,CAAQC,GAAR,CAAgB,CACtD,mCAAWD,KAAX,GAAkBf,OAAO,CAACO,kBAAD,CAAqBS,GAArB,CAA0BV,OAA1B,CAAzB,GACD,CAFuB,CAErB,EAFqB,CADQ,kCAKzBW,OAAO,CAACC,GAAR,CAAYL,eAAZ,CALyB,0DAAD,GAM9B,CAACP,OAAD,CAAUM,QAAV,CAAoBL,kBAApB,CAN8B,CAAjC,CAQA,MAAO,CAAEG,QAAQ,CAAEF,aAAZ,CAAP,CACD,CAbM,CAeP,MAAO,IAAMW,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,MAAD,CAAgC,IAAvBC,CAAAA,UAAuB,2DAAV,KAAU,CACjE,GAAMhB,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CADiE,gBAE7CD,SAAS,EAFoC,CAEzDa,OAFyD,aAEzDA,OAFyD,CAGjE,GAAMgB,CAAAA,iBAAiB,CAAGpB,YAAY,CAACkB,MAAD,CAAtC,CAEA,GAAMZ,CAAAA,aAAa,CAAGhB,WAAW,sEAAC,sJAC1B+B,SAD0B,CACdF,UAAU,CAAGtB,eAAH,CAAqBD,YADjB,wBAE1ByB,CAAAA,SAAS,CAACD,iBAAD,CAAoBhB,OAApB,CAFiB,QAGhCD,QAAQ,CAACR,uBAAuB,CAACuB,MAAD,CAASd,OAAT,CAAxB,CAAR,CACAD,QAAQ,CAACT,iBAAiB,CAACwB,MAAD,CAASd,OAAT,CAAlB,CAAR,CAJgC,wDAAD,GAK9B,CAACA,OAAD,CAAUD,QAAV,CAAoBgB,UAApB,CAAgCC,iBAAhC,CAAmDF,MAAnD,CAL8B,CAAjC,CAOA,MAAO,CAAEV,QAAQ,CAAEF,aAAZ,CAAP,CACD,CAbM","sourcesContent":["import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { smartHarvest, smartHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSmartChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSmartChefHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const smartChefContract = useSmartChef(sousId)\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestFn = isUsingBnb ? smartHarvestBnb : smartHarvest\r\n    await harvestFn(smartChefContract, account)\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, smartChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}