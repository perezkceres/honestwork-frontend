{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _taggedTemplateLiteral from\"/Users/ivopascoal/Desktop/FARMBOY/honestwork-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  display: flex;\\n  font-size: 14px;\\n  justify-content: space-between;\\n  margin-bottom: 8px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: auto;\\n  background-image: url('/images/egg/stats.png');\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-size: cover;\\n    min-width: 10%;\\n  min-height: 10%;\\n  width: 100%;\\n  height: auto;\\n  \\n  \\n  \\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import{Card,CardBody,Heading,Text}from'@pancakeswap-libs/uikit';import BigNumber from'bignumber.js/bignumber';import styled from'styled-components';import{getBalanceNumber}from'utils/formatBalance';import{useTotalSupply,useBurnedBalance}from'hooks/useTokenBalance';import useI18n from'hooks/useI18n';import{getCakeAddress}from'utils/addressHelpers';import CardValue from'./CardValue';import{useFarms,usePriceCakeBusd}from'../../../state/hooks';var StyledCakeStats=styled(Card)(_templateObject());var Row=styled.div(_templateObject2());var CakeStats=function CakeStats(){var TranslateString=useI18n();var totalSupply=useTotalSupply();var burnedBalance=useBurnedBalance(getCakeAddress());var farms=useFarms();var eggPrice=usePriceCakeBusd();var circSupply=totalSupply?totalSupply.minus(burnedBalance):new BigNumber(0);var cakeSupply=getBalanceNumber(circSupply);var marketCap=eggPrice.times(circSupply);var honestPerBlock=0;var burnValue=eggPrice.times(burnedBalance);var cakePrice=usePriceCakeBusd();if(farms&&farms[0]&&farms[0].honestPerBlock){honestPerBlock=new BigNumber(farms[0].honestPerBlock).div(new BigNumber(10).pow(18)).toNumber();}return/*#__PURE__*/_jsx(StyledCakeStats,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{size:\"xl\",mb:\"24px\",children:\"\\uD83D\\uDE9C Stats\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"honest Price\"}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:eggPrice.toNumber(),decimals:2,prefix:\"$\"})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Total Supply\"}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"14px\",children:getBalanceNumber(totalSupply)})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Circulating Supply\"}),cakeSupply&&/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:cakeSupply,decimals:0})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Tokens to be farmed\"}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:getBalanceNumber(burnedBalance),decimals:0})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(999,'Market Cap')}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:getBalanceNumber(marketCap),decimals:0,prefix:\"$\"})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\" \\uD83D\\uDE9C/block\"}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"14px\",children:honestPerBlock})]})]})});};export default CakeStats;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/FARMBOY/honestwork-frontend/src/views/Home/components/CakeStats.tsx"],"names":["React","Card","CardBody","Heading","Text","BigNumber","styled","getBalanceNumber","useTotalSupply","useBurnedBalance","useI18n","getCakeAddress","CardValue","useFarms","usePriceCakeBusd","StyledCakeStats","Row","div","CakeStats","TranslateString","totalSupply","burnedBalance","farms","eggPrice","circSupply","minus","cakeSupply","marketCap","times","honestPerBlock","burnValue","cakePrice","pow","toNumber"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\nimport { useFarms, usePriceCakeBusd, usePriceCakeBnb } from '../../../state/hooks'\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-image: url('/images/egg/stats.png');\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n    min-width: 10%;\r\n  min-height: 10%;\r\n  width: 100%;\r\n  height: auto;\r\n  \r\n  \r\n  \r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CakeStats = () => {\r\n  const TranslateString = useI18n()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = useBurnedBalance(getCakeAddress())\r\n  const farms = useFarms();\r\n  const eggPrice = usePriceCakeBusd();\r\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\r\n  const cakeSupply = getBalanceNumber(circSupply);\r\n  const marketCap = eggPrice.times(circSupply);\r\n  let honestPerBlock = 0;\r\n  const burnValue = eggPrice.times(burnedBalance);\r\n  const cakePrice = usePriceCakeBusd();\r\n  if(farms && farms[0] && farms[0].honestPerBlock){\r\n    honestPerBlock = new BigNumber(farms[0].honestPerBlock).div(new BigNumber(10).pow(18)).toNumber();\r\n  }\r\n\r\n  return (\r\n    <StyledCakeStats>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n        ðŸšœ Stats\r\n        </Heading>\r\n        <Row>\r\n          <Text fontSize=\"14px\">honest Price</Text>\r\n          <CardValue fontSize=\"14px\" value={eggPrice.toNumber()} decimals={2} prefix=\"$\" />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">Total Supply</Text>\r\n          <Text bold fontSize=\"14px\">{getBalanceNumber(totalSupply)}</Text>\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">Circulating Supply</Text>\r\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} decimals={0} />}\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">Tokens to be farmed</Text>\r\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnedBalance)} decimals={0} />\r\n        </Row>\r\n        \r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(999, 'Market Cap')}</Text>\r\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(marketCap)} decimals={0} prefix=\"$\" />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\"> ðŸšœ/block</Text>\r\n          <Text bold fontSize=\"14px\">{honestPerBlock}</Text>\r\n        </Row>\r\n      </CardBody>\r\n    </StyledCakeStats>\r\n  )\r\n}\r\n\r\nexport default CakeStats\r\n"]},"metadata":{},"sourceType":"module"}