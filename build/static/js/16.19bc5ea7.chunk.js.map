{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","config/constants/ifo.ts","config/constants/index.ts","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/components/Title.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/index.tsx"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","ifos","farmsConfig","filter","farm","isCommunity","map","tokenSymbol","Wrapper","styled","div","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","size","variant","as","Link","to","Title","Heading","attrs","theme","colors","primary","Blurb","Text","secondary","StyledHero","Hero","Container","LaunchIfoCallout","BaseLayout","textSubtle","mediaQueries","sm","List","ul","Cards","xs","lg","FullColumnWrapper","Ifo","ifosConfig","ifo","isActive","TranslateString","color","mb","href","mr","external","Ifos","path","CurrentIfo"],"mappings":"+IAGMA,EAAgB,UASTC,EAAiB,SAACC,EAA0BC,EAAuBC,GAC9E,IAAMC,EAAmBH,EAAaI,MAAK,SAACC,GAC1C,OAAOA,EAAYC,KAAKC,WAAaN,KAEvC,GAAIE,EAAkB,CACpB,IAAMK,EAAmBL,EAAiBG,KAAKG,KAE/C,OADyBD,EAAiBE,SAAS,KAb1B,SAACP,EAA0BD,GACtD,IAAMS,EAAkBb,EAAcc,KAAKT,GAAkB,GAEvDU,EAAuBX,EAASY,MAAM,KAAK,GACjD,OAAOX,EAAiBY,QAAQJ,EAAiBE,GAWtCG,CAAqBR,EAAkBN,GAEzCM,EAET,OAAON,GCNMe,IAdC,WAAO,IACbjB,EAAiBkB,qBAAWC,KAA5BnB,aAER,OAAO,SAACC,EAAuBC,GAC7B,MAAwB,UAApBF,EAAa,GACRE,EAELF,EAAaoB,OAAS,EACjBrB,EAAeC,EAAcC,EAAeC,GAE9CA,K,+JCwFImB,EApGK,GCAGC,IAAYC,QAAO,SAACC,GAAD,OAAUA,EAAKC,eAAaC,KAAI,SAACF,GAAD,OAAUA,EAAKG,gB,gRCGzF,IAAMC,EAAUC,IAAOC,IAAV,KAwBEC,EAjBO,WAAO,IAAD,EACDC,cAAjBC,EADkB,EAClBA,IAAKC,EADa,EACbA,QAEb,OACE,cAACN,EAAD,UACE,eAAC,IAAD,CAAYO,YAAcD,EAAc,EAAJ,EAAOE,KAAK,KAAKC,QAAQ,SAA7D,UACE,cAAC,IAAD,CAAgBC,GAAIC,IAAMC,GAAE,UAAKP,GAAjC,yBAGA,cAAC,IAAD,CAAgBK,GAAIC,IAAMC,GAAE,UAAKP,EAAL,YAA5B,6B,kYCfR,IAAMQ,EAAQZ,YAAOa,KAASC,MAAM,CAAEL,GAAI,KAAMF,KAAM,MAAxCP,CAAH,KACA,qBAAGe,MAAkBC,OAAOC,WAIjCC,EAAQlB,YAAOmB,IAAPnB,CAAH,KACA,qBAAGe,MAAkBC,OAAOI,aAMjCC,EAAarB,IAAOC,IAAV,KAiBDqB,EAbF,WACalC,cAExB,OACE,cAACiC,EAAD,UACE,eAACE,EAAA,EAAD,WACI,cAACX,EAAD,mCACA,cAACM,EAAD,kD,uHC1BV,IAKeN,EALDZ,YAAOa,KAASC,MAAM,CAAEP,KAAM,MAA9BP,CAAH,KACA,qBAAGe,MAAkBC,OAAOI,a,4oCCGvC,IAAMI,EAAmBxB,YAAOyB,IAAPzB,CAAH,KACI,qBAAGe,MAAkBC,OAAOU,cAOlD,qBAAGX,MAAkBY,aAAaC,MAKhCC,EAAO7B,IAAO8B,GAAV,KACC,qBAAGf,MAAkBC,OAAOpC,QASjCmD,EAAQ/B,YAAOyB,IAAPzB,CAAH,KASP,qBAAGe,MAAkBY,aAAaK,MAMlC,qBAAGjB,MAAkBY,aAAaC,MAMlC,qBAAGb,MAAkBY,aAAaM,MAOhCC,EAAoBlC,IAAOC,IAAV,KAOnB,qBAAGc,MAAkBY,aAAaK,MAIlC,qBAAGjB,MAAkBY,aAAaC,MAIlC,qBAAGb,MAAkBY,aAAaM,MAgEvBE,GAxDGC,IAAW7D,MAAK,SAAC8D,GAAD,OAASA,EAAIC,YAEnC,WACV,IAAMC,EAAkBnD,cAExB,OACE,gCACE,cAAC2C,EAAD,UACE,cAACG,EAAD,UACE,cAAC,IAAD,CAAMM,MAAM,YAAZ,0SAIJ,eAAChB,EAAD,WACE,gCACE,cAAC,EAAD,CAAOf,GAAG,KAAV,SAAgB8B,EAAgB,IAAK,sBACrC,eAAC,IAAD,CAASE,GAAG,OAAZ,UAAoBF,EAAgB,IAAK,eAAzC,OACA,eAACV,EAAD,WACE,2CACA,+DAEF,cAAC,IAAD,CAAMY,GAAG,OAAT,SACE,cAAC,IAAD,CAAcC,KAAK,iCAAiCC,GAAG,OAAvD,yBAIF,eAAC,IAAD,CAASF,GAAG,OAAZ,UAAoBF,EAAgB,IAAK,eAAzC,OACA,cAACV,EAAD,UACE,sGAEF,eAAC,IAAD,CAASY,GAAG,OAAZ,UAAoBF,EAAgB,IAAK,cAAzC,OACA,eAACV,EAAD,WACE,4FACA,6BAAKU,EAAgB,IAAK,iBAG9B,8BACE,gCACE,cAAC,EAAD,CAAO9B,GAAG,KAAV,0CACA,cAAC,IAAD,CAAMgC,GAAI,EAAV,mHAGA,cAAC,IAAD,CACEhC,GAAG,IACHiC,KAAK,8BACLE,UAAQ,EAHV,qCCpGGC,UAdF,WACM1C,cAAT2C,KAER,OACE,qCACE,cAAC,EAAD,IACA,eAACvB,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAACwB,EAAD","file":"static/js/16.19bc5ea7.chunk.js","sourcesContent":["import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\nconst variableRegex = /%(.*?)%/\r\n\r\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\r\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\r\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\r\n  const fallbackValueAtIndex = fallback.split(' ')[0]\r\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\r\n}\r\n\r\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\r\n  const foundTranslation = translations.find((translation) => {\r\n    return translation.data.stringId === translationId\r\n  })\r\n  if (foundTranslation) {\r\n    const translatedString = foundTranslation.data.text\r\n    const includesVariable = translatedString.includes('%')\r\n    if (includesVariable) {\r\n      return replaceDynamicString(translatedString, fallback)\r\n    }\r\n    return translatedString\r\n  }\r\n  return fallback\r\n}\r\n\r\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\r\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\r\n// @see https://reactjs.org/docs/hooks-rules.html\r\nexport const TranslateString = (translationId: number, fallback: string) => {\r\n  const { translations } = useContext(TranslationsContext)\r\n  if (translations[0] === 'error') {\r\n    return fallback\r\n  }\r\n  if (translations.length > 0) {\r\n    return getTranslation(translations, translationId, fallback)\r\n  }\r\n  return fallback\r\n}\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\nimport { getTranslation } from '../utils/translateTextHelpers'\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string) => {\r\n    if (translations[0] === 'error') {\r\n      return fallback\r\n    }\r\n    if (translations.length > 0) {\r\n      return getTranslation(translations, translationId, fallback)\r\n    }\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import { Ifo } from './types'\r\n\r\nconst ifos: Ifo[] = [\r\n  /*\r\n  {\r\n    id: 'blink',\r\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\r\n    isActive: false,\r\n    name: 'BLINk (BLK)',\r\n    subTitle: 'Online games on BSC',\r\n    description:\r\n      'BLINk enables BNB holders to enjoy gaming experiences that WINk users on Tron have been enjoying for over two years.',\r\n    launchDate: 'Nov. 20',\r\n    launchTime: '9PM SGT',\r\n    saleAmount: '100,000,000 BLINK',\r\n    raiseAmount: '$1,000,000',\r\n    cakeToBurn: '$500,000',\r\n    projectSiteUrl: 'https://blink.wink.org',\r\n    currency: 'CAKE-BNB LP',\r\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    tokenDecimals: 6,\r\n    releaseBlockNumber: 3279767,\r\n  },\r\n  {\r\n    id: 'ditto',\r\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\r\n    isActive: false,\r\n    name: 'Ditto (DITTO)',\r\n    subTitle: 'Next-gen elastic supply token',\r\n    description:\r\n      'Ditto is the first elastic supply token on the Binance Smart Chain. Its goal is to maintain a stable price of $1, where its supply will adapt to changes in demand. All supply changes will apply equally to every wallet holding Ditto, and holders should always have the same % of the total supply',\r\n    launchDate: 'Dec. 23',\r\n    launchTime: '3PM SGT',\r\n    saleAmount: '700,000 DITTO',\r\n    raiseAmount: '$630,000',\r\n    cakeToBurn: '$315,000',\r\n    projectSiteUrl: 'https://ditto.money/',\r\n    currency: 'CAKE-BNB LP',\r\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    tokenDecimals: 9,\r\n    releaseBlockNumber: 3279767,\r\n  },\r\n  {\r\n    id: 'tenet',\r\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\r\n    isActive: false,\r\n    name: 'Tenet (TEN)',\r\n    subTitle: 'Cross-chain Automated Market Maker',\r\n    description:\r\n      'Tenet is a cross-chain Automated Market Maker (AMM) connector that provides a decentralized Liquidity Tap for various tokens. The Liquidity Tap is the powerhouse of the Liquidity Pool, employing a dynamic algorithm to give the Liquidity Provider fairer, more efficient, and richer incentives. Tenet aims to build a cross-chain and cross-platform toolkit protocol that allows the demand side to customize the parameters of the liquidity tap, allowing them to reach out to more liquidity participants effectively and with relative ease.',\r\n    launchDate: 'Jan. 5',\r\n    launchTime: '3PM SGT',\r\n    saleAmount: '1,000,000 TEN',\r\n    raiseAmount: '$1,000,000',\r\n    cakeToBurn: '$500,000',\r\n    projectSiteUrl: 'https://www.tenet.farm/',\r\n    currency: 'CAKE-BNB LP',\r\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    tokenDecimals: 18,\r\n    releaseBlockNumber: 3483883,\r\n  },\r\n  {\r\n    id: 'helmet',\r\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\r\n    isActive: false,\r\n    name: 'Helmet.insure (Helmet)',\r\n    subTitle: 'Crypto-assets insurance trading platform',\r\n    description:\r\n      'Helmet is a peer-to-peer insurance protocol written with options trading logic, which allows anyone to create any insurance policy easily in the market. Helmet aims to enable DeFi users to be protected against the risk of price fluctuations by providing price-shield insurance for BSC assets. They provide suppliers with a range of insurance types to sell, giving a variety of hedging strategies to the market.',\r\n    launchDate: 'Jan. 13',\r\n    launchTime: '5PM SGT',\r\n    saleAmount: '10,000,000 Helmet',\r\n    raiseAmount: '$1,000,000',\r\n    cakeToBurn: '$500,000',\r\n    projectSiteUrl: 'https://www.helmet.insure/',\r\n    currency: 'CAKE-BNB LP',\r\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    tokenDecimals: 18,\r\n    releaseBlockNumber: 3771926,\r\n  },\r\n  {\r\n    id: 'soteria',\r\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\r\n    isActive: true,\r\n    name: 'Soteria',\r\n    subTitle: 'A blockchain based mutual to share the risk of DeFi on Binance Smart Chain',\r\n    description:\r\n      'Soteria allows users to buy insurance cover to greatly diminish or reduce the financial risk of hacks. It replaces the idea of a traditional insurance company, because it is wholly owned by the members. The model encourages engagement as members receive economic incentives for participating in Risk Assessment, Claims Assessment and Governance.',\r\n    launchDate: 'Jan. 21',\r\n    launchTime: '4PM SGT',\r\n    saleAmount: '1,500,000 wSOTE',\r\n    raiseAmount: '$525,000',\r\n    cakeToBurn: '$262,500',\r\n    projectSiteUrl: 'https://soteria.finance/#/',\r\n    currency: 'CAKE-BNB LP',\r\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    tokenDecimals: 18,\r\n    releaseBlockNumber: 4086064,\r\n  },\r\n  */\r\n]\r\n\r\nexport default ifos\r\n","import farmsConfig from './farms'\r\n\r\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\r\n\r\nexport { farmsConfig, communityFarms }\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 39px;\r\n`\r\n\r\nconst IfoTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          Current IDO\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          Past IDOs\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default IfoTabButtons\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport Container from 'components/layout/Container'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  text-align: center;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  padding-bottom: 24px;\r\n  padding-top: 24px;\r\n`\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <Container>\r\n          <Title>Initial Dex Offering</Title>\r\n          <Blurb>Invest in Innovative Projects</Blurb>\r\n      </Container>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import styled from 'styled-components'\r\nimport { Heading } from '@pancakeswap-libs/uikit'\r\n\r\nconst Title = styled(Heading).attrs({ size: 'lg' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 16px;\r\n`\r\n\r\nexport default Title\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\r\nimport { ifosConfig } from 'config/constants'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Title from './components/Title'\r\n\r\nconst LaunchIfoCallout = styled(BaseLayout)`\r\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  margin: 0 auto;\r\n  padding: 32px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`\r\n\r\nconst List = styled.ul`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n\r\n  & > li {\r\n    line-height: 1.4;\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 20px;\r\n  margin-top: 30px;\r\n\r\n  & > div {\r\n    grid-column: span 7;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 7;\r\n    }\r\n  }\r\n`\r\n\r\nconst FullColumnWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-self: center;\r\n  \r\n  grid-column: span 12 !important;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    grid-column: span 12 !important;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-column: span 12 !important;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-column: span 12 !important;\r\n  }\r\n`\r\n\r\n/**\r\n * Note: currently there should be only 1 active IFO at a time\r\n */\r\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\r\n\r\nconst Ifo = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <div>\r\n      <Cards>\r\n        <FullColumnWrapper>\r\n          <Text color=\"secondary\">Disclaimer: Crypto / Defi markets and projects are considered high risk investments. Always do your own research (DYOR) into any project that you invest. You are responsible for your own investing strategy, and should manage your own risk. Only Invest what you can afford to lose!\r\n          </Text>\r\n        </FullColumnWrapper>\r\n      </Cards>\r\n      <LaunchIfoCallout>\r\n        <div>\r\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\r\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\r\n          <List>\r\n            <li>Buy MATIC</li>\r\n            <li>Wait for the Sale to start</li>\r\n          </List>\r\n          <Flex mb=\"16px\">\r\n            <LinkExternal href=\"https://polyHonest.finance/buy\" mr=\"16px\">\r\n              Buy MATIC\r\n            </LinkExternal>\r\n          </Flex>\r\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\r\n          <List>\r\n            <li>While the sale is live, commit your MATIC tokens to buy the tokens</li>\r\n          </List>\r\n          <Heading mb=\"16px\">{TranslateString(604, 'After Sale')}:</Heading>\r\n          <List>\r\n            <li>Claim the tokens you bought, along with any unspent funds.</li>\r\n            <li>{TranslateString(608, 'Done!')}</li>\r\n          </List>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <Title as=\"h2\">Want to launch your own IDO?</Title>\r\n            <Text mb={3}>\r\n              Launch your project with PolyHonest, Polygon Network’s most transparent and active DeFi Platform\r\n            </Text>\r\n            <Button\r\n              as=\"a\"\r\n              href=\"https://t.me/polyHonesthead\"\r\n              external\r\n            >\r\n              Contact Us\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </LaunchIfoCallout>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ifo\r\n","import React from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport Container from 'components/layout/Container'\r\nimport IfoTabButtons from './components/IfoTabButtons'\r\nimport Hero from './components/Hero'\r\nimport CurrentIfo from './CurrentIfo'\r\nimport PastIfo from './PastIfo'\r\nimport ComingSoon from './ComingSoon'\r\n\r\nconst Ifos = () => {\r\n  const { path } = useRouteMatch()\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Container>\r\n        <IfoTabButtons />\r\n        <CurrentIfo/>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ifos\r\n"],"sourceRoot":""}